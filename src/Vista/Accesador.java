/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vista;


import Controlador.Conexion;
import Controlador.FormatoTabla;
import Controlador.Gestion_Arboles;
import Controlador.Gestion_Beneficiarios;
import Controlador.Gestion_Colectores;
import Controlador.Gestion_Copa;
import Controlador.Gestion_Donantes;
import Controlador.Gestion_Empresa;
import Controlador.Gestion_Patron;
import Controlador.Gestion_Ultimos;
import Controlador.Gestion_Usuarios;
import Modelo.Arboles;
import Modelo.Beneficiarios;
import Modelo.Colectores;
import Modelo.Copas;
import Modelo.Demas_Modelos;
import Modelo.Donante_Copas;
import Modelo.Empresa;
import Modelo.Patrones;
import Modelo.Ultimos;
import Modelo.Usuarios;
import static java.awt.Frame.MAXIMIZED_BOTH;
import java.sql.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JTextField;

/**
 *
 * @author jromero
 */
public class Accesador extends javax.swing.JFrame {
    
// EMPIEZAN VARIABLES  DEL INICIO
    String INICIO_COLUMNA,INICIO_TEXTO;
Object estado;
String longitud;
 public static boolean estado_ventanaarbol=false;
 public static boolean estado_ventanacopas=false;
 public static boolean estado_ventanapatrones=false;
 public static boolean estado_ventanaempresa=false;
 public static boolean estado_ventanadonante=false;
 public static boolean estado_ventanabeneficiarios=false;
 public static boolean estado_ventanausuarios=false;
 public static boolean estado_ventanaacercade=false;
 public static boolean estado_ventanaayuda=false;
 public static boolean estado_ventanacolectores=false;
//Vista_Donantes vd =new Vista_Donantes();
 public static Demas_Modelos dm = new Demas_Modelos();
// TERMINAN VARIABLES DEL INICIO


//INICIAN VARIABLES COPAS
String COPAS_COLUMNAS,COPAS_TEXTO;
int COPAS_U_COD_COPA;
//TERMINAN VARIABLES COPAS

//INICIAN VARIABLES PATRONES

String PATRONES_COLUMNAS,PATRONES_TEXTO ;
int PATRONES_U_COD_PATRON;

//TERMINAN VARIABLES PATRONES
 //INICIO VARIABLES ARBOL 
String ARBOL_LONGITUD;
int ARBOL_CODIGOINICIALCOPA,ARBOL_CODIGOINICIALPATRON;
     
public  static String ARBOL_CONTROL=null;
//TERMINAN VARIABLES ARBOL

//EMPIEZAN VARIABLES BENEFICIARIO
String BENEFICIARIO_COLUMNA,BENEFICIARIO_TEXTO;
//TERMINAN VARIABLES BENEFICIARIO

//COLECTORES

//COLECTOES


//EMPRESA


//EMPRESA
/**
     * Creates new form Accesador
     */
    public Accesador() {
        initComponents();
               //MODELO TABBED PANE.
        jTabbedPane1.setIconAt(0,new javax.swing.ImageIcon(getClass().getResource("/Utilidades/house accesador.png"))); 
        jTabbedPane1.setIconAt(1,new javax.swing.ImageIcon(getClass().getResource("/Utilidades/1416348392_Tree.png"))); 
        jTabbedPane1.setIconAt(2,new javax.swing.ImageIcon(getClass().getResource("/Utilidades/sdasdasd.png")));
        jTabbedPane1.setIconAt(3,new javax.swing.ImageIcon(getClass().getResource("/Utilidades/sdasdasd1.png")));
        jTabbedPane1.setIconAt(4,new javax.swing.ImageIcon(getClass().getResource("/Utilidades/sdasdasd2.png")));
        jTabbedPane1.setIconAt(5,new javax.swing.ImageIcon(getClass().getResource("/Utilidades/sdasdasd3.png")));
        jTabbedPane1.setIconAt(6,new javax.swing.ImageIcon(getClass().getResource("/Utilidades/harvest-48.png")));
        jTabbedPane1.setIconAt(7,new javax.swing.ImageIcon(getClass().getResource("/Utilidades/companyyy.png"))); 
        jTabbedPane1.setIconAt(8,new javax.swing.ImageIcon(getClass().getResource("/Utilidades/report.png")));
        // FIN MODELO TABBED PANE.
//       EMPEZAR_INICIO();
//       EMPEZAR_ARBOLES();
//       EMPEZAR_DONANTES();
//       EMPEZAR_COPAS();
//       EMPEZAR_PATRONES();
//       EMPEZAR_COLECTORES();
//       EMPEZAR_EMPRESA();
//       EMPEZAR_BENEFICIARIO();
       
         
        
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        inicio_botongroup = new javax.swing.ButtonGroup();
        jDesktopPane1 = new javax.swing.JDesktopPane();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        pestaña_inicio = new javax.swing.JPanel();
        jPanel10 = new javax.swing.JPanel();
        jPanel11 = new javax.swing.JPanel();
        Inicio_L_n_arbol = new javax.swing.JLabel();
        Inicio_T_n_nombre = new javax.swing.JTextField();
        Inicio_B_cargar_informacion = new javax.swing.JButton();
        Inicio_L_cod_control = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        Inicio_B_limpiar = new javax.swing.JButton();
        jPanel12 = new javax.swing.JPanel();
        Inicio_T_filtro = new javax.swing.JTextField();
        Inicio_filtrar_arboles = new javax.swing.JLabel();
        jPanel13 = new javax.swing.JPanel();
        Inicio_jradio_vereda = new javax.swing.JRadioButton();
        Inicio_jradio_copa = new javax.swing.JRadioButton();
        Inicio_jradio_patron = new javax.swing.JRadioButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        Inicio_Tabla1 = new javax.swing.JTable();
        pestaña_resgistro_arbol = new javax.swing.JPanel();
        arbol_scroolpane = new javax.swing.JScrollPane();
        arbol_scroolpane2 = new javax.swing.JScrollPane();
        arbol_desktoppane = new javax.swing.JDesktopPane();
        arbol_panel_campos_arbol = new javax.swing.JPanel();
        arbol_L_codigo = new javax.swing.JLabel();
        arbol_L_beneficiario = new javax.swing.JLabel();
        arbol_L_departamento = new javax.swing.JLabel();
        arbol_L_vereda = new javax.swing.JLabel();
        arbol_L_municipio = new javax.swing.JLabel();
        arbol_L_finca = new javax.swing.JLabel();
        arbol_L_latitud = new javax.swing.JLabel();
        arbol_L_altitud = new javax.swing.JLabel();
        arbol_L_longitud = new javax.swing.JLabel();
        arbol_L_observaciones = new javax.swing.JLabel();
        arbol_T_codiigo_arbol = new javax.swing.JTextField();
        arbol_CB_beneficiario = new javax.swing.JComboBox();
        arbol_T_municipio = new javax.swing.JTextField();
        arbol_T_vereda = new javax.swing.JTextField();
        arbol_T_finca = new javax.swing.JTextField();
        arbol_T_latitud = new javax.swing.JTextField();
        arbol_T_longitud = new javax.swing.JTextField();
        arbol_T_altitud = new javax.swing.JTextField();
        arbol_CB_departamento = new javax.swing.JComboBox();
        jScrollPane4 = new javax.swing.JScrollPane();
        arbol_Ta_observacion = new javax.swing.JTextArea();
        arbol_L_muestra_codigo = new javax.swing.JLabel();
        arbol_panel_Botones_acciones = new javax.swing.JPanel();
        arbol_B_registrar = new javax.swing.JButton();
        arbol_B_actualizar = new javax.swing.JButton();
        arbol_B_eliminar = new javax.swing.JButton();
        arbol_B_limpiar = new javax.swing.JButton();
        arbol_panel_copa_patron = new javax.swing.JPanel();
        arbol_panel_copa = new javax.swing.JPanel();
        arbol_L_cod_copa = new javax.swing.JLabel();
        arbol_L_colector_copas = new javax.swing.JLabel();
        arbol_L_donante_copas = new javax.swing.JLabel();
        arbol_B_cod_copa = new javax.swing.JButton();
        arbol_B_ver_informacion_copa = new javax.swing.JButton();
        arbol_T_cod_copa = new javax.swing.JTextField();
        arbol_T_colector_copa = new javax.swing.JTextField();
        arbol_T_donante_copa = new javax.swing.JTextField();
        arbol_panel_patron = new javax.swing.JPanel();
        arbol_L_cod_patron = new javax.swing.JLabel();
        arbol_L_colector_patorn = new javax.swing.JLabel();
        arbol_L_donante_patrones = new javax.swing.JLabel();
        arbol_B_cod_patron = new javax.swing.JButton();
        arbol_B_ver_informacion_patron = new javax.swing.JButton();
        arbol_T_cod_patron = new javax.swing.JTextField();
        arbol_T_donante_patron = new javax.swing.JTextField();
        arbol_T_colector_patron = new javax.swing.JTextField();
        jScrollPane7 = new javax.swing.JScrollPane();
        arbol_tabla = new javax.swing.JTable();
        pestaña_copas = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        copas_descktoppane = new javax.swing.JDesktopPane();
        copas_scollpane = new javax.swing.JScrollPane();
        copa_tabla = new javax.swing.JTable();
        copas_panel_botones = new javax.swing.JPanel();
        copas_b_nuevo = new javax.swing.JButton();
        copas_b_guardar = new javax.swing.JButton();
        copas_b_actualizar = new javax.swing.JButton();
        copas_b_eliminar = new javax.swing.JButton();
        copas_b_limpiar = new javax.swing.JButton();
        copas_panel_filtro = new javax.swing.JPanel();
        copas_l_diltrar_copas_por = new javax.swing.JLabel();
        copas_radio_b_donante = new javax.swing.JRadioButton();
        copas_rsdiobuton_vereda = new javax.swing.JRadioButton();
        copas_t_filtrar_copas_por = new javax.swing.JTextField();
        copas_panel_campos = new javax.swing.JPanel();
        copas_panel_campos_a = new javax.swing.JPanel();
        copas_panel_campos_a_a = new javax.swing.JPanel();
        copas_l_codcopa = new javax.swing.JLabel();
        copas_l_colector = new javax.swing.JLabel();
        copas_l_donante = new javax.swing.JLabel();
        copas_l_departamento = new javax.swing.JLabel();
        copas_l_municipio = new javax.swing.JLabel();
        copas_l_vereda = new javax.swing.JLabel();
        copas_l_finca = new javax.swing.JLabel();
        copas_panel_campos_a_b = new javax.swing.JPanel();
        copas_T_codcopa = new javax.swing.JTextField();
        copas_T_municipio = new javax.swing.JTextField();
        copas_T_vereda = new javax.swing.JTextField();
        copas_T_finca = new javax.swing.JTextField();
        copas_CB_colector = new javax.swing.JComboBox();
        copas_CB_departamento = new javax.swing.JComboBox();
        copas_T_donante = new javax.swing.JTextField();
        copas_B_donante = new javax.swing.JButton();
        copas_panel_campos_b = new javax.swing.JPanel();
        copas_panel_campos_b_a = new javax.swing.JPanel();
        copas_L_longitud = new javax.swing.JLabel();
        copas_L_latitud = new javax.swing.JLabel();
        copas_L_fuente_colecicon = new javax.swing.JLabel();
        copas_L_estadoaccesion = new javax.swing.JLabel();
        copas_L_nombreaccesion = new javax.swing.JLabel();
        copas_L_nombrecultivo = new javax.swing.JLabel();
        copas_L_fecha = new javax.swing.JLabel();
        copas_panel_campos_b_b = new javax.swing.JPanel();
        copas_T_nombrecultivo = new javax.swing.JTextField();
        copas_T_nombreaccesion = new javax.swing.JTextField();
        copas_T_estadoaccesion = new javax.swing.JTextField();
        copas_T_fuentecoleccion = new javax.swing.JTextField();
        copas_T_latitud = new javax.swing.JTextField();
        copas_T_longitud = new javax.swing.JTextField();
        copas_DT_fecha = new com.toedter.calendar.JDateChooser();
        copas_panel_campos_c = new javax.swing.JPanel();
        copas_panel_campos_c_a = new javax.swing.JPanel();
        copas_L_altitud = new javax.swing.JLabel();
        copas_L_genero = new javax.swing.JLabel();
        copas_L_especie = new javax.swing.JLabel();
        copas_L_dap = new javax.swing.JLabel();
        copas_L_altura = new javax.swing.JLabel();
        copas_L_enlacescopa = new javax.swing.JLabel();
        copas_L_muestraenlacescopa = new javax.swing.JLabel();
        copas_panel_campos_c_b = new javax.swing.JPanel();
        copas_T_dap = new javax.swing.JTextField();
        copas_T_altura = new javax.swing.JTextField();
        copas_T_altitud = new javax.swing.JTextField();
        copas_T_especie = new javax.swing.JTextField();
        copas_T_genero = new javax.swing.JTextField();
        copas_panel_campos_d = new javax.swing.JPanel();
        copas_panel_campos_d_scrollpane = new javax.swing.JScrollPane();
        copas_TA_observaciones = new javax.swing.JTextArea();
        copas_panel_campos_d_l_observaciones = new javax.swing.JLabel();
        pestaña_patrones = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        patrones_desktoppane = new javax.swing.JDesktopPane();
        patrones_scroolpane = new javax.swing.JScrollPane();
        patrones_tabla = new javax.swing.JTable();
        patrones_panel_botones = new javax.swing.JPanel();
        patrones_B_nuevo = new javax.swing.JButton();
        patrones_B_registrar = new javax.swing.JButton();
        patrones_B_actualizar = new javax.swing.JButton();
        patrones_B_eliminar = new javax.swing.JButton();
        patrones_B_limpiar = new javax.swing.JButton();
        patrones_panel_filtro = new javax.swing.JPanel();
        patrones_L_filtrarpatronespor = new javax.swing.JLabel();
        patrones_RB_donantre = new javax.swing.JRadioButton();
        patrones_RB_vereda = new javax.swing.JRadioButton();
        patrones_T_filtrarpatronespor = new javax.swing.JTextField();
        patrones_panel_campos = new javax.swing.JPanel();
        patornes_panel_campos_a = new javax.swing.JPanel();
        patornes_panel_campos_a_a = new javax.swing.JPanel();
        patornes_L_cod_patron = new javax.swing.JLabel();
        patornes_L_colector = new javax.swing.JLabel();
        patornes_L_donante = new javax.swing.JLabel();
        patornes_L_departamento = new javax.swing.JLabel();
        patornes_L_municipio = new javax.swing.JLabel();
        patornes_L_vereda = new javax.swing.JLabel();
        patornes_L_finca = new javax.swing.JLabel();
        patornes_panel_campos_a_b = new javax.swing.JPanel();
        patornes_T_cod_patron = new javax.swing.JTextField();
        patornes_T_municipio = new javax.swing.JTextField();
        patornes_T_vereda = new javax.swing.JTextField();
        patornes_T_finca = new javax.swing.JTextField();
        patornes_CB_colector = new javax.swing.JComboBox();
        patornes_CB_departamento = new javax.swing.JComboBox();
        patornes_T_donante = new javax.swing.JTextField();
        patornes_B_donante = new javax.swing.JButton();
        patornes_panel_campos_b = new javax.swing.JPanel();
        patornes_panel_campos_b_a = new javax.swing.JPanel();
        patornes_L_longitud = new javax.swing.JLabel();
        patornes_L_latitud = new javax.swing.JLabel();
        patornes_L_fuentecoleccion = new javax.swing.JLabel();
        patornes_L_estadoaccesion = new javax.swing.JLabel();
        patornes_L_nombre_c_accesion = new javax.swing.JLabel();
        patornes_L_nombre_c_cultivo = new javax.swing.JLabel();
        patornes_L_fecha = new javax.swing.JLabel();
        patornes_panel_campos_b_b = new javax.swing.JPanel();
        patornes_D_fecha = new com.toedter.calendar.JDateChooser();
        patornes_T_nombre_c_cultivo = new javax.swing.JTextField();
        patornes_T_nombre_c_accesion = new javax.swing.JTextField();
        patornes_T_estado_accesion = new javax.swing.JTextField();
        patornes_T_fuente_colecicon = new javax.swing.JTextField();
        patornes_T_latitud = new javax.swing.JTextField();
        patornes_T_longitud = new javax.swing.JTextField();
        patornes_panel_campos_c = new javax.swing.JPanel();
        patornes_panel_campos_c_a = new javax.swing.JPanel();
        patornes_L_altitud = new javax.swing.JLabel();
        patornes_L_genero = new javax.swing.JLabel();
        patornes_L_especie = new javax.swing.JLabel();
        patornes_L_D_A_P = new javax.swing.JLabel();
        patornes_L_altura = new javax.swing.JLabel();
        patornes_L_numerodeenlaces = new javax.swing.JLabel();
        patornes_L_mostrar_numerodeenlaces = new javax.swing.JLabel();
        patornes_panel_campos_c_b = new javax.swing.JPanel();
        patornes_T_altitud = new javax.swing.JTextField();
        patornes_T_genero = new javax.swing.JTextField();
        patornes_T_especie = new javax.swing.JTextField();
        patornes_T_dap = new javax.swing.JTextField();
        patornes_T_altura = new javax.swing.JTextField();
        patornes_panel_campos_d = new javax.swing.JPanel();
        patornes_panel_campos_scollpane = new javax.swing.JScrollPane();
        patornes_TA_observaciones = new javax.swing.JTextArea();
        patornes_panel_campos_L_Observaciones = new javax.swing.JLabel();
        pestaña_donantes = new javax.swing.JPanel();
        donante_panel_general = new javax.swing.JScrollPane();
        jDesktopPane3 = new javax.swing.JDesktopPane();
        jPanel16 = new javax.swing.JPanel();
        donante_panel_campos = new javax.swing.JPanel();
        donante_l_codigo = new javax.swing.JLabel();
        donante_l_empresa = new javax.swing.JLabel();
        donante_l_nombre = new javax.swing.JLabel();
        donante_l_telefono = new javax.swing.JLabel();
        donante_l_direccion = new javax.swing.JLabel();
        donante_l_departamento = new javax.swing.JLabel();
        donante_l_municipio = new javax.swing.JLabel();
        donante_l_vereda = new javax.swing.JLabel();
        donante_l_finca = new javax.swing.JLabel();
        donante_t_codigo = new javax.swing.JTextField();
        donante_cb_empresa = new javax.swing.JComboBox();
        donante_t_nombre = new javax.swing.JTextField();
        donante_t_telefono = new javax.swing.JTextField();
        donante_t_direccion = new javax.swing.JTextField();
        donante_cb_departamento = new javax.swing.JComboBox();
        donante_t_municipio = new javax.swing.JTextField();
        donante_t_vereda = new javax.swing.JTextField();
        donante_t_finca = new javax.swing.JTextField();
        donante_panel_botones = new javax.swing.JPanel();
        donante_b_registrar = new javax.swing.JButton();
        donante_b_modificar = new javax.swing.JButton();
        donante_b_eliminar = new javax.swing.JButton();
        donante_b_enlazar = new javax.swing.JButton();
        donante_l_limpiarcampos = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        donante_ta_observaciones = new javax.swing.JTextArea();
        donante_l_observaciones = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        donante_tabla = new javax.swing.JTable();
        pestaña_beneficiarios = new javax.swing.JPanel();
        jScrollPane8 = new javax.swing.JScrollPane();
        jDesktopPane2 = new javax.swing.JDesktopPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        beneficiario_T_identificacion = new javax.swing.JTextField();
        beneficiario_CB_empresa = new javax.swing.JComboBox();
        beneficiario_T_nombre = new javax.swing.JTextField();
        beneficiario_T_telefono = new javax.swing.JTextField();
        beneficiario_T_direccion = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        beneficiario_CB_departamento = new javax.swing.JComboBox();
        beneficiario_T_municipio = new javax.swing.JTextField();
        beneficiario_T_vereda = new javax.swing.JTextField();
        beneficiario_T_finca = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jScrollPane9 = new javax.swing.JScrollPane();
        beneficiario_TA_observaciones = new javax.swing.JTextArea();
        jPanel2 = new javax.swing.JPanel();
        beneficiario_RB_nombre = new javax.swing.JRadioButton();
        beneficiario_RB_vereda = new javax.swing.JRadioButton();
        beneficiario_T_filtrarpor = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jScrollPane10 = new javax.swing.JScrollPane();
        beneficiario_Tabla = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        beneficiario_B_guardar = new javax.swing.JButton();
        beneficiario_B_actualizar = new javax.swing.JButton();
        beneficiario_Beliminar = new javax.swing.JButton();
        beneficiario_B_limpiar = new javax.swing.JButton();
        pestaña_colectores = new javax.swing.JPanel();
        jScrollPane11 = new javax.swing.JScrollPane();
        jDesktopPane4 = new javax.swing.JDesktopPane();
        jPanel4 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        colectores_T_identificacion = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        colectores_T_nombre = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        colectores_T_telefono = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        colectores_CB_empresa = new javax.swing.JComboBox();
        jLabel16 = new javax.swing.JLabel();
        colectores_T_direccion = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jScrollPane12 = new javax.swing.JScrollPane();
        colectores_T_observaciones = new javax.swing.JTextArea();
        colectores_B_eliminar = new javax.swing.JButton();
        colectores_B_modificar = new javax.swing.JButton();
        colectores_B_registrar = new javax.swing.JButton();
        colectores_B_filtrarpor = new javax.swing.JButton();
        jScrollPane13 = new javax.swing.JScrollPane();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane14 = new javax.swing.JScrollPane();
        colectores_Tabla = new javax.swing.JTable(){
            public boolean isCellEditable(int rowIndex, int colIndex) {
                return false;
            }
        };
        colectores_Tabla = new javax.swing.JTable();
        pestaña_empresas = new javax.swing.JPanel();
        jScrollPane15 = new javax.swing.JScrollPane();
        jDesktopPane5 = new javax.swing.JDesktopPane();
        jPanel7 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        empresa_B_nueva = new javax.swing.JButton();
        empresa_T_modificar = new javax.swing.JButton();
        empresa_T_eliminar = new javax.swing.JButton();
        jPanel9 = new javax.swing.JPanel();
        empresa_T_telefono = new javax.swing.JTextField();
        empresa_T_direccion = new javax.swing.JTextField();
        empresa_T_nombre = new javax.swing.JTextField();
        empresa_T_nit_empresa = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jScrollPane16 = new javax.swing.JScrollPane();
        empresa_Tabla = new javax.swing.JTable();
        pestaña_reportes = new javax.swing.JPanel();
        pestaña_acerca_de = new javax.swing.JPanel();
        menuBar = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        openMenuItem = new javax.swing.JMenuItem();
        saveMenuItem = new javax.swing.JMenuItem();
        saveAsMenuItem = new javax.swing.JMenuItem();
        exitMenuItem = new javax.swing.JMenuItem();
        editMenu = new javax.swing.JMenu();
        cutMenuItem = new javax.swing.JMenuItem();
        copyMenuItem = new javax.swing.JMenuItem();
        pasteMenuItem = new javax.swing.JMenuItem();
        deleteMenuItem = new javax.swing.JMenuItem();
        helpMenu = new javax.swing.JMenu();
        contentsMenuItem = new javax.swing.JMenuItem();
        aboutMenuItem = new javax.swing.JMenuItem();
        jMenu1 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jDesktopPane1.setBackground(new java.awt.Color(0, 0, 255));
        jDesktopPane1.setLayout(new java.awt.BorderLayout());

        jTabbedPane1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N

        pestaña_inicio.setLayout(new java.awt.BorderLayout());

        jPanel10.setBackground(new java.awt.Color(0, 0, 0));
        jPanel10.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Base De Datos De Arboles injertados", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 24), new java.awt.Color(255, 255, 255))); // NOI18N
        jPanel10.setForeground(new java.awt.Color(255, 255, 255));
        jPanel10.setLayout(new java.awt.GridLayout(1, 0));

        jPanel11.setBackground(new java.awt.Color(51, 51, 51));
        jPanel11.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        jPanel11.setForeground(new java.awt.Color(255, 255, 255));

        Inicio_L_n_arbol.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        Inicio_L_n_arbol.setForeground(new java.awt.Color(255, 255, 255));
        Inicio_L_n_arbol.setText("N° ARBOL");

        Inicio_T_n_nombre.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        Inicio_T_n_nombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Inicio_T_n_nombreActionPerformed(evt);
            }
        });
        Inicio_T_n_nombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                Inicio_T_n_nombreKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                Inicio_T_n_nombreKeyReleased(evt);
            }
        });

        Inicio_B_cargar_informacion.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        Inicio_B_cargar_informacion.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Utilidades/1415213468_015.png"))); // NOI18N
        Inicio_B_cargar_informacion.setText("INFROMACION DEL ARBOL");
        Inicio_B_cargar_informacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Inicio_B_cargar_informacionActionPerformed(evt);
            }
        });

        Inicio_L_cod_control.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        Inicio_L_cod_control.setForeground(new java.awt.Color(255, 255, 255));
        Inicio_L_cod_control.setText("CODIGO DE CONTROL");

        jLabel5.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 0));

        Inicio_B_limpiar.setBackground(new java.awt.Color(255, 255, 255));
        Inicio_B_limpiar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Utilidades/1414198212_Broom.png"))); // NOI18N
        Inicio_B_limpiar.setText("LIMPIAR");
        Inicio_B_limpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Inicio_B_limpiarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addComponent(Inicio_L_n_arbol, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Inicio_T_n_nombre)
                        .addGap(18, 18, 18)
                        .addComponent(Inicio_L_cod_control, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addComponent(Inicio_B_cargar_informacion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Inicio_B_limpiar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Inicio_L_n_arbol)
                    .addComponent(Inicio_T_n_nombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Inicio_L_cod_control))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Inicio_B_cargar_informacion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Inicio_B_limpiar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(17, Short.MAX_VALUE))
        );

        jPanel10.add(jPanel11);

        jPanel12.setBackground(new java.awt.Color(51, 51, 51));
        jPanel12.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        jPanel12.setForeground(new java.awt.Color(255, 255, 255));

        Inicio_T_filtro.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        Inicio_T_filtro.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                Inicio_T_filtroKeyReleased(evt);
            }
        });

        Inicio_filtrar_arboles.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        Inicio_filtrar_arboles.setForeground(new java.awt.Color(255, 255, 255));
        Inicio_filtrar_arboles.setText("FILTRAR ARBOLES POR :");

        jPanel13.setOpaque(false);
        jPanel13.setLayout(new java.awt.GridBagLayout());

        inicio_botongroup.add(Inicio_jradio_vereda);
        Inicio_jradio_vereda.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        Inicio_jradio_vereda.setForeground(new java.awt.Color(255, 255, 255));
        Inicio_jradio_vereda.setText("VEREDA");
        Inicio_jradio_vereda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Inicio_jradio_veredaActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(7, 6, 7, 0);
        jPanel13.add(Inicio_jradio_vereda, gridBagConstraints);

        inicio_botongroup.add(Inicio_jradio_copa);
        Inicio_jradio_copa.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        Inicio_jradio_copa.setForeground(new java.awt.Color(255, 255, 255));
        Inicio_jradio_copa.setText("COPA");
        Inicio_jradio_copa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Inicio_jradio_copaActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(7, 18, 7, 0);
        jPanel13.add(Inicio_jradio_copa, gridBagConstraints);

        inicio_botongroup.add(Inicio_jradio_patron);
        Inicio_jradio_patron.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        Inicio_jradio_patron.setForeground(new java.awt.Color(255, 255, 255));
        Inicio_jradio_patron.setText("PATRON");
        Inicio_jradio_patron.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Inicio_jradio_patronActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(7, 18, 7, 6);
        jPanel13.add(Inicio_jradio_patron, gridBagConstraints);

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel12Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addComponent(Inicio_filtrar_arboles)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel13, javax.swing.GroupLayout.DEFAULT_SIZE, 451, Short.MAX_VALUE))
                    .addComponent(Inicio_T_filtro))
                .addContainerGap())
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(Inicio_filtrar_arboles))
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Inicio_T_filtro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(16, Short.MAX_VALUE))
        );

        jPanel10.add(jPanel12);

        pestaña_inicio.add(jPanel10, java.awt.BorderLayout.PAGE_START);

        Inicio_Tabla1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        Inicio_Tabla1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                Inicio_Tabla1FocusGained(evt);
            }
        });
        Inicio_Tabla1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                Inicio_Tabla1MousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                Inicio_Tabla1MouseReleased(evt);
            }
        });
        jScrollPane1.setViewportView(Inicio_Tabla1);

        pestaña_inicio.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        jTabbedPane1.addTab("INICIO", pestaña_inicio);

        pestaña_resgistro_arbol.setLayout(new java.awt.BorderLayout());

        arbol_desktoppane.setPreferredSize(new java.awt.Dimension(500, 500));

        arbol_panel_campos_arbol.setBackground(new java.awt.Color(153, 204, 255));

        arbol_L_codigo.setText("CODIGO");

        arbol_L_beneficiario.setText("BENEFICIARIO");

        arbol_L_departamento.setText("DEPARTAMENTO");

        arbol_L_vereda.setText("VEREDA");

        arbol_L_municipio.setText("MUNICIPIO");

        arbol_L_finca.setText("FINCA");

        arbol_L_latitud.setText("LATITUD");

        arbol_L_altitud.setText("ALTITUD");

        arbol_L_longitud.setText("LONGITUD");

        arbol_L_observaciones.setText("OBSERVACIONES");

        arbol_T_codiigo_arbol.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        arbol_T_codiigo_arbol.setDisabledTextColor(new java.awt.Color(255, 0, 51));
        arbol_T_codiigo_arbol.setEnabled(false);

        arbol_T_municipio.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                arbol_T_municipioKeyReleased(evt);
            }
        });

        arbol_T_vereda.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                arbol_T_veredaKeyReleased(evt);
            }
        });

        arbol_T_finca.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                arbol_T_fincaKeyReleased(evt);
            }
        });

        arbol_T_latitud.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                arbol_T_latitudKeyReleased(evt);
            }
        });

        arbol_T_longitud.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                arbol_T_longitudKeyReleased(evt);
            }
        });

        arbol_T_altitud.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                arbol_T_altitudKeyReleased(evt);
            }
        });

        arbol_Ta_observacion.setColumns(20);
        arbol_Ta_observacion.setRows(5);
        arbol_Ta_observacion.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                arbol_Ta_observacionKeyReleased(evt);
            }
        });
        jScrollPane4.setViewportView(arbol_Ta_observacion);

        javax.swing.GroupLayout arbol_panel_campos_arbolLayout = new javax.swing.GroupLayout(arbol_panel_campos_arbol);
        arbol_panel_campos_arbol.setLayout(arbol_panel_campos_arbolLayout);
        arbol_panel_campos_arbolLayout.setHorizontalGroup(
            arbol_panel_campos_arbolLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(arbol_panel_campos_arbolLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(arbol_panel_campos_arbolLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(arbol_panel_campos_arbolLayout.createSequentialGroup()
                        .addGroup(arbol_panel_campos_arbolLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(arbol_panel_campos_arbolLayout.createSequentialGroup()
                                .addComponent(arbol_L_codigo)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(arbol_L_muestra_codigo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(arbol_L_beneficiario)
                            .addComponent(arbol_L_departamento)
                            .addComponent(arbol_L_municipio)
                            .addComponent(arbol_L_vereda)
                            .addComponent(arbol_L_finca)
                            .addComponent(arbol_L_latitud)
                            .addComponent(arbol_L_longitud)
                            .addComponent(arbol_L_altitud)
                            .addComponent(arbol_L_observaciones)
                            .addComponent(arbol_CB_beneficiario, 0, 100, Short.MAX_VALUE)
                            .addComponent(arbol_T_municipio)
                            .addComponent(arbol_T_vereda)
                            .addComponent(arbol_T_finca)
                            .addComponent(arbol_T_latitud)
                            .addComponent(arbol_T_longitud)
                            .addComponent(arbol_T_codiigo_arbol)
                            .addComponent(arbol_T_altitud)
                            .addComponent(arbol_CB_departamento, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 3, Short.MAX_VALUE))
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );
        arbol_panel_campos_arbolLayout.setVerticalGroup(
            arbol_panel_campos_arbolLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, arbol_panel_campos_arbolLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(arbol_panel_campos_arbolLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(arbol_L_codigo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(arbol_L_muestra_codigo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(arbol_T_codiigo_arbol, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(arbol_L_beneficiario)
                .addGap(1, 1, 1)
                .addComponent(arbol_CB_beneficiario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(arbol_L_departamento)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(arbol_CB_departamento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(arbol_L_municipio)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(arbol_T_municipio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(arbol_L_vereda)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(arbol_T_vereda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(arbol_L_finca)
                .addGap(1, 1, 1)
                .addComponent(arbol_T_finca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(arbol_L_latitud)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(arbol_T_latitud, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(arbol_L_longitud)
                .addGap(2, 2, 2)
                .addComponent(arbol_T_longitud, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(arbol_L_altitud)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(arbol_T_altitud, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(arbol_L_observaciones)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4)
                .addContainerGap())
        );

        arbol_panel_Botones_acciones.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, null, java.awt.Color.blue, null, null));
        arbol_panel_Botones_acciones.setLayout(new java.awt.GridLayout(1, 0));

        arbol_B_registrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Utilidades/registrar 2424.png"))); // NOI18N
        arbol_B_registrar.setText("REGISTRAR");
        arbol_B_registrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                arbol_B_registrarActionPerformed(evt);
            }
        });
        arbol_B_registrar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                arbol_B_registrarKeyPressed(evt);
            }
        });
        arbol_panel_Botones_acciones.add(arbol_B_registrar);

        arbol_B_actualizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Utilidades/actualizar 2424.png"))); // NOI18N
        arbol_B_actualizar.setText("ACTUALIZAR");
        arbol_B_actualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                arbol_B_actualizarActionPerformed(evt);
            }
        });
        arbol_panel_Botones_acciones.add(arbol_B_actualizar);

        arbol_B_eliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Utilidades/eliminar 2424.png"))); // NOI18N
        arbol_B_eliminar.setText("ELIMINAR");
        arbol_B_eliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                arbol_B_eliminarActionPerformed(evt);
            }
        });
        arbol_panel_Botones_acciones.add(arbol_B_eliminar);

        arbol_B_limpiar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Utilidades/1414198212_Broom.png"))); // NOI18N
        arbol_B_limpiar.setText("LIMPIAR");
        arbol_B_limpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                arbol_B_limpiarActionPerformed(evt);
            }
        });
        arbol_panel_Botones_acciones.add(arbol_B_limpiar);

        arbol_panel_copa_patron.setLayout(new java.awt.GridLayout(1, 0));

        arbol_panel_copa.setBackground(new java.awt.Color(153, 204, 255));
        arbol_panel_copa.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true), "Enlace Administracion Copa", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.BELOW_TOP, new java.awt.Font("Calibri Light", 0, 24))); // NOI18N

        arbol_L_cod_copa.setFont(new java.awt.Font("Calibri Light", 0, 18)); // NOI18N
        arbol_L_cod_copa.setText("COD_COPA");

        arbol_L_colector_copas.setFont(new java.awt.Font("Calibri Light", 0, 18)); // NOI18N
        arbol_L_colector_copas.setText("COLECTOR");

        arbol_L_donante_copas.setFont(new java.awt.Font("Calibri Light", 0, 18)); // NOI18N
        arbol_L_donante_copas.setText("DONANTE");

        arbol_B_cod_copa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Utilidades/Buscar_Ventana_Principal.png"))); // NOI18N
        arbol_B_cod_copa.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                arbol_B_cod_copaMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                arbol_B_cod_copaMouseReleased(evt);
            }
        });
        arbol_B_cod_copa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                arbol_B_cod_copaActionPerformed(evt);
            }
        });

        arbol_B_ver_informacion_copa.setFont(new java.awt.Font("Calibri Light", 0, 18)); // NOI18N
        arbol_B_ver_informacion_copa.setText("Ver informacion De Esta Copa");
        arbol_B_ver_informacion_copa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                arbol_B_ver_informacion_copaActionPerformed(evt);
            }
        });

        arbol_T_cod_copa.setForeground(new java.awt.Color(255, 51, 51));
        arbol_T_cod_copa.setDisabledTextColor(new java.awt.Color(255, 0, 51));
        arbol_T_cod_copa.setEnabled(false);

        arbol_T_colector_copa.setDisabledTextColor(new java.awt.Color(0, 0, 255));
        arbol_T_colector_copa.setEnabled(false);

        arbol_T_donante_copa.setDisabledTextColor(new java.awt.Color(0, 0, 255));
        arbol_T_donante_copa.setEnabled(false);

        javax.swing.GroupLayout arbol_panel_copaLayout = new javax.swing.GroupLayout(arbol_panel_copa);
        arbol_panel_copa.setLayout(arbol_panel_copaLayout);
        arbol_panel_copaLayout.setHorizontalGroup(
            arbol_panel_copaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(arbol_panel_copaLayout.createSequentialGroup()
                .addGroup(arbol_panel_copaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, arbol_panel_copaLayout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addGroup(arbol_panel_copaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(arbol_L_cod_copa)
                            .addComponent(arbol_L_colector_copas)
                            .addComponent(arbol_L_donante_copas))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 247, Short.MAX_VALUE)
                        .addGroup(arbol_panel_copaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(arbol_panel_copaLayout.createSequentialGroup()
                                .addComponent(arbol_B_cod_copa, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(arbol_T_cod_copa, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(arbol_T_colector_copa)
                            .addComponent(arbol_T_donante_copa, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(arbol_panel_copaLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(arbol_B_ver_informacion_copa, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        arbol_panel_copaLayout.setVerticalGroup(
            arbol_panel_copaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(arbol_panel_copaLayout.createSequentialGroup()
                .addGroup(arbol_panel_copaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(arbol_B_cod_copa, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(arbol_L_cod_copa)
                    .addComponent(arbol_T_cod_copa, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(arbol_panel_copaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(arbol_L_colector_copas)
                    .addComponent(arbol_T_colector_copa, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(arbol_panel_copaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(arbol_L_donante_copas)
                    .addComponent(arbol_T_donante_copa, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(arbol_B_ver_informacion_copa)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        arbol_panel_copa_patron.add(arbol_panel_copa);

        arbol_panel_patron.setBackground(new java.awt.Color(153, 204, 255));
        arbol_panel_patron.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true), "Enlace Administracion Patron", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.BELOW_TOP, new java.awt.Font("Calibri Light", 0, 24))); // NOI18N

        arbol_L_cod_patron.setFont(new java.awt.Font("Calibri Light", 0, 18)); // NOI18N
        arbol_L_cod_patron.setText("COD_PATRON");

        arbol_L_colector_patorn.setFont(new java.awt.Font("Calibri Light", 0, 18)); // NOI18N
        arbol_L_colector_patorn.setText("COLECTOR");

        arbol_L_donante_patrones.setFont(new java.awt.Font("Calibri Light", 0, 18)); // NOI18N
        arbol_L_donante_patrones.setText("DONANTE");

        arbol_B_cod_patron.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Utilidades/Buscar_Ventana_Principal.png"))); // NOI18N
        arbol_B_cod_patron.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                arbol_B_cod_patronMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                arbol_B_cod_patronMouseReleased(evt);
            }
        });
        arbol_B_cod_patron.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                arbol_B_cod_patronActionPerformed(evt);
            }
        });

        arbol_B_ver_informacion_patron.setFont(new java.awt.Font("Calibri Light", 0, 18)); // NOI18N
        arbol_B_ver_informacion_patron.setText("Ver Informacion De Este Patron");
        arbol_B_ver_informacion_patron.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                arbol_B_ver_informacion_patronActionPerformed(evt);
            }
        });

        arbol_T_cod_patron.setForeground(new java.awt.Color(255, 51, 51));
        arbol_T_cod_patron.setDisabledTextColor(new java.awt.Color(255, 0, 51));
        arbol_T_cod_patron.setEnabled(false);

        arbol_T_donante_patron.setDisabledTextColor(new java.awt.Color(0, 0, 255));
        arbol_T_donante_patron.setEnabled(false);

        arbol_T_colector_patron.setDisabledTextColor(new java.awt.Color(0, 0, 255));
        arbol_T_colector_patron.setEnabled(false);

        javax.swing.GroupLayout arbol_panel_patronLayout = new javax.swing.GroupLayout(arbol_panel_patron);
        arbol_panel_patron.setLayout(arbol_panel_patronLayout);
        arbol_panel_patronLayout.setHorizontalGroup(
            arbol_panel_patronLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, arbol_panel_patronLayout.createSequentialGroup()
                .addGroup(arbol_panel_patronLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(arbol_panel_patronLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(arbol_B_ver_informacion_patron, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(arbol_panel_patronLayout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addGroup(arbol_panel_patronLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(arbol_L_cod_patron)
                            .addComponent(arbol_L_colector_patorn)
                            .addComponent(arbol_L_donante_patrones))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 227, Short.MAX_VALUE)
                        .addGroup(arbol_panel_patronLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, arbol_panel_patronLayout.createSequentialGroup()
                                .addComponent(arbol_B_cod_patron, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(arbol_T_cod_patron, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(arbol_T_colector_patron, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                            .addComponent(arbol_T_donante_patron, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addContainerGap())
        );
        arbol_panel_patronLayout.setVerticalGroup(
            arbol_panel_patronLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(arbol_panel_patronLayout.createSequentialGroup()
                .addGroup(arbol_panel_patronLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(arbol_panel_patronLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(arbol_L_cod_patron)
                        .addComponent(arbol_B_cod_patron, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(arbol_T_cod_patron, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(arbol_panel_patronLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(arbol_L_colector_patorn)
                    .addComponent(arbol_T_colector_patron, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(arbol_panel_patronLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(arbol_L_donante_patrones)
                    .addGroup(arbol_panel_patronLayout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(arbol_T_donante_patron, javax.swing.GroupLayout.DEFAULT_SIZE, 29, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(arbol_B_ver_informacion_patron)
                .addContainerGap(13, Short.MAX_VALUE))
        );

        arbol_panel_copa_patron.add(arbol_panel_patron);

        arbol_tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        arbol_tabla.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                arbol_tablaFocusLost(evt);
            }
        });
        arbol_tabla.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                arbol_tablaMousePressed(evt);
            }
        });
        jScrollPane7.setViewportView(arbol_tabla);

        javax.swing.GroupLayout arbol_desktoppaneLayout = new javax.swing.GroupLayout(arbol_desktoppane);
        arbol_desktoppane.setLayout(arbol_desktoppaneLayout);
        arbol_desktoppaneLayout.setHorizontalGroup(
            arbol_desktoppaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, arbol_desktoppaneLayout.createSequentialGroup()
                .addGroup(arbol_desktoppaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(arbol_panel_Botones_acciones, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, arbol_desktoppaneLayout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addGroup(arbol_desktoppaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(arbol_panel_copa_patron, javax.swing.GroupLayout.DEFAULT_SIZE, 1147, Short.MAX_VALUE)
                            .addComponent(jScrollPane7))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(arbol_panel_campos_arbol, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5))
        );
        arbol_desktoppaneLayout.setVerticalGroup(
            arbol_desktoppaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(arbol_desktoppaneLayout.createSequentialGroup()
                .addGroup(arbol_desktoppaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(arbol_desktoppaneLayout.createSequentialGroup()
                        .addComponent(arbol_panel_Botones_acciones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(arbol_panel_copa_patron, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 326, Short.MAX_VALUE))
                    .addComponent(arbol_panel_campos_arbol, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        arbol_desktoppane.setLayer(arbol_panel_campos_arbol, javax.swing.JLayeredPane.DEFAULT_LAYER);
        arbol_desktoppane.setLayer(arbol_panel_Botones_acciones, javax.swing.JLayeredPane.DEFAULT_LAYER);
        arbol_desktoppane.setLayer(arbol_panel_copa_patron, javax.swing.JLayeredPane.DEFAULT_LAYER);
        arbol_desktoppane.setLayer(jScrollPane7, javax.swing.JLayeredPane.DEFAULT_LAYER);

        arbol_scroolpane2.setViewportView(arbol_desktoppane);

        arbol_scroolpane.setViewportView(arbol_scroolpane2);

        pestaña_resgistro_arbol.add(arbol_scroolpane, java.awt.BorderLayout.CENTER);

        jTabbedPane1.addTab("REGISTRO ARBOL", pestaña_resgistro_arbol);

        pestaña_copas.setLayout(new java.awt.BorderLayout());

        copa_tabla.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        copa_tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        copa_tabla.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        copa_tabla.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                copa_tablaMousePressed(evt);
            }
        });
        copas_scollpane.setViewportView(copa_tabla);

        copas_panel_botones.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, null, java.awt.Color.blue, null, null));
        copas_panel_botones.setLayout(new java.awt.GridLayout(1, 0));

        copas_b_nuevo.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        copas_b_nuevo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Utilidades/1417741094_new10-24.png"))); // NOI18N
        copas_b_nuevo.setText("NUEVO");
        copas_b_nuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                copas_b_nuevoActionPerformed(evt);
            }
        });
        copas_panel_botones.add(copas_b_nuevo);

        copas_b_guardar.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        copas_b_guardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Utilidades/registrar 2424.png"))); // NOI18N
        copas_b_guardar.setText("GUARDAR");
        copas_b_guardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                copas_b_guardarActionPerformed(evt);
            }
        });
        copas_b_guardar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                copas_b_guardarKeyPressed(evt);
            }
        });
        copas_panel_botones.add(copas_b_guardar);

        copas_b_actualizar.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        copas_b_actualizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Utilidades/actualizar 2424.png"))); // NOI18N
        copas_b_actualizar.setText("ACTUALIZAR");
        copas_b_actualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                copas_b_actualizarActionPerformed(evt);
            }
        });
        copas_panel_botones.add(copas_b_actualizar);

        copas_b_eliminar.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        copas_b_eliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Utilidades/eliminar 2424.png"))); // NOI18N
        copas_b_eliminar.setText("ELIMINAR");
        copas_b_eliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                copas_b_eliminarActionPerformed(evt);
            }
        });
        copas_panel_botones.add(copas_b_eliminar);

        copas_b_limpiar.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        copas_b_limpiar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Utilidades/1414198212_Broom.png"))); // NOI18N
        copas_b_limpiar.setText("LIMPIAR");
        copas_b_limpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                copas_b_limpiarActionPerformed(evt);
            }
        });
        copas_panel_botones.add(copas_b_limpiar);

        copas_panel_filtro.setLayout(new java.awt.GridLayout(1, 0));

        copas_l_diltrar_copas_por.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        copas_l_diltrar_copas_por.setText("FILTRAR COPAS POR:");
        copas_panel_filtro.add(copas_l_diltrar_copas_por);

        copas_radio_b_donante.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        copas_radio_b_donante.setText("DONANTE");
        copas_radio_b_donante.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                copas_radio_b_donanteActionPerformed(evt);
            }
        });
        copas_panel_filtro.add(copas_radio_b_donante);

        copas_rsdiobuton_vereda.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        copas_rsdiobuton_vereda.setText("VEREDA");
        copas_rsdiobuton_vereda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                copas_rsdiobuton_veredaActionPerformed(evt);
            }
        });
        copas_panel_filtro.add(copas_rsdiobuton_vereda);

        copas_t_filtrar_copas_por.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                copas_t_filtrar_copas_porKeyReleased(evt);
            }
        });
        copas_panel_filtro.add(copas_t_filtrar_copas_por);

        copas_panel_campos.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED), "Administracion Copa", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.BELOW_TOP, new java.awt.Font("Calibri Light", 1, 24))); // NOI18N
        copas_panel_campos.setLayout(new java.awt.GridLayout(1, 0));

        copas_panel_campos_a.setOpaque(false);
        copas_panel_campos_a.setLayout(new java.awt.GridLayout(1, 0));

        copas_l_codcopa.setBackground(new java.awt.Color(51, 255, 51));
        copas_l_codcopa.setFont(new java.awt.Font("Garamond", 1, 13)); // NOI18N
        copas_l_codcopa.setText("COD_COPA");

        copas_l_colector.setFont(new java.awt.Font("Garamond", 1, 13)); // NOI18N
        copas_l_colector.setText("COLECTOR");

        copas_l_donante.setFont(new java.awt.Font("Garamond", 1, 13)); // NOI18N
        copas_l_donante.setText("DONANTE");

        copas_l_departamento.setFont(new java.awt.Font("Garamond", 1, 13)); // NOI18N
        copas_l_departamento.setText("DEPARTAMENTO");

        copas_l_municipio.setFont(new java.awt.Font("Garamond", 1, 13)); // NOI18N
        copas_l_municipio.setText("MUNICIPIO");

        copas_l_vereda.setFont(new java.awt.Font("Garamond", 1, 13)); // NOI18N
        copas_l_vereda.setText("VEREDA");

        copas_l_finca.setFont(new java.awt.Font("Garamond", 1, 13)); // NOI18N
        copas_l_finca.setText("FINCA");

        javax.swing.GroupLayout copas_panel_campos_a_aLayout = new javax.swing.GroupLayout(copas_panel_campos_a_a);
        copas_panel_campos_a_a.setLayout(copas_panel_campos_a_aLayout);
        copas_panel_campos_a_aLayout.setHorizontalGroup(
            copas_panel_campos_a_aLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(copas_l_codcopa, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(copas_l_colector, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(copas_l_donante, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(copas_l_departamento, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(copas_l_municipio, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(copas_l_vereda, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(copas_l_finca, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        copas_panel_campos_a_aLayout.setVerticalGroup(
            copas_panel_campos_a_aLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(copas_panel_campos_a_aLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(copas_l_codcopa, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(copas_l_colector, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(copas_l_donante, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(copas_l_departamento, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(copas_l_municipio, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(copas_l_vereda, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(copas_l_finca, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(16, 16, 16))
        );

        copas_panel_campos_a.add(copas_panel_campos_a_a);

        copas_panel_campos_a_b.setOpaque(false);
        copas_panel_campos_a_b.setVerifyInputWhenFocusTarget(false);

        copas_T_codcopa.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        copas_T_codcopa.setEnabled(false);
        copas_T_codcopa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                copas_T_codcopaActionPerformed(evt);
            }
        });
        copas_T_codcopa.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                copas_T_codcopaKeyPressed(evt);
            }
        });

        copas_T_municipio.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        copas_T_municipio.setEnabled(false);
        copas_T_municipio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                copas_T_municipioActionPerformed(evt);
            }
        });

        copas_T_vereda.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        copas_T_vereda.setEnabled(false);

        copas_T_finca.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        copas_T_finca.setEnabled(false);
        copas_T_finca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                copas_T_fincaActionPerformed(evt);
            }
        });

        copas_CB_colector.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        copas_CB_colector.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                copas_CB_colectorKeyPressed(evt);
            }
        });

        copas_CB_departamento.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        copas_CB_departamento.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                copas_CB_departamentoKeyPressed(evt);
            }
        });

        copas_T_donante.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        copas_T_donante.setEnabled(false);

        copas_B_donante.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Utilidades/Buscar_Ventana_Principal.png"))); // NOI18N
        copas_B_donante.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                copas_B_donanteActionPerformed(evt);
            }
        });
        copas_B_donante.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                copas_B_donanteKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout copas_panel_campos_a_bLayout = new javax.swing.GroupLayout(copas_panel_campos_a_b);
        copas_panel_campos_a_b.setLayout(copas_panel_campos_a_bLayout);
        copas_panel_campos_a_bLayout.setHorizontalGroup(
            copas_panel_campos_a_bLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(copas_T_finca)
            .addComponent(copas_T_vereda, javax.swing.GroupLayout.Alignment.TRAILING)
            .addComponent(copas_T_municipio)
            .addComponent(copas_CB_departamento, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(copas_panel_campos_a_bLayout.createSequentialGroup()
                .addComponent(copas_B_donante, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(copas_T_donante, javax.swing.GroupLayout.DEFAULT_SIZE, 126, Short.MAX_VALUE))
            .addComponent(copas_CB_colector, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(copas_T_codcopa, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        copas_panel_campos_a_bLayout.setVerticalGroup(
            copas_panel_campos_a_bLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(copas_panel_campos_a_bLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(copas_T_codcopa, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(copas_CB_colector, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(copas_panel_campos_a_bLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(copas_T_donante, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(copas_B_donante, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(copas_CB_departamento, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(7, 7, 7)
                .addComponent(copas_T_municipio, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(copas_T_vereda, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(copas_T_finca, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        copas_panel_campos_a.add(copas_panel_campos_a_b);

        copas_panel_campos.add(copas_panel_campos_a);

        copas_panel_campos_b.setOpaque(false);
        copas_panel_campos_b.setLayout(new java.awt.GridLayout(1, 0));

        copas_L_longitud.setFont(new java.awt.Font("Garamond", 1, 13)); // NOI18N
        copas_L_longitud.setText("LONGITUD");

        copas_L_latitud.setFont(new java.awt.Font("Garamond", 1, 13)); // NOI18N
        copas_L_latitud.setText("LATITUD");

        copas_L_fuente_colecicon.setFont(new java.awt.Font("Garamond", 1, 13)); // NOI18N
        copas_L_fuente_colecicon.setText("FUENTE_COLECCION");

        copas_L_estadoaccesion.setFont(new java.awt.Font("Garamond", 1, 13)); // NOI18N
        copas_L_estadoaccesion.setText("ESTADO_ACCESION");

        copas_L_nombreaccesion.setFont(new java.awt.Font("Garamond", 1, 13)); // NOI18N
        copas_L_nombreaccesion.setText("NOMBRE_C_ACCESION");

        copas_L_nombrecultivo.setFont(new java.awt.Font("Garamond", 1, 13)); // NOI18N
        copas_L_nombrecultivo.setText("NOMBRE_C_CULTIVO");

        copas_L_fecha.setFont(new java.awt.Font("Garamond", 1, 13)); // NOI18N
        copas_L_fecha.setText("FECHA");

        javax.swing.GroupLayout copas_panel_campos_b_aLayout = new javax.swing.GroupLayout(copas_panel_campos_b_a);
        copas_panel_campos_b_a.setLayout(copas_panel_campos_b_aLayout);
        copas_panel_campos_b_aLayout.setHorizontalGroup(
            copas_panel_campos_b_aLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(copas_L_fecha, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(copas_L_nombrecultivo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(copas_L_nombreaccesion, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(copas_L_estadoaccesion, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(copas_L_fuente_colecicon, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(copas_L_latitud, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(copas_L_longitud, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        copas_panel_campos_b_aLayout.setVerticalGroup(
            copas_panel_campos_b_aLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(copas_panel_campos_b_aLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(copas_L_fecha, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(copas_L_nombrecultivo, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(copas_L_nombreaccesion, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(copas_L_estadoaccesion, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(copas_L_fuente_colecicon, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(copas_L_latitud, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(copas_L_longitud, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        copas_panel_campos_b.add(copas_panel_campos_b_a);

        copas_panel_campos_b_b.setOpaque(false);

        copas_T_nombrecultivo.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        copas_T_nombrecultivo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                copas_T_nombrecultivoFocusGained(evt);
            }
        });
        copas_T_nombrecultivo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                copas_T_nombrecultivoKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                copas_T_nombrecultivoKeyReleased(evt);
            }
        });

        copas_T_nombreaccesion.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        copas_T_nombreaccesion.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                copas_T_nombreaccesionFocusGained(evt);
            }
        });
        copas_T_nombreaccesion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                copas_T_nombreaccesionActionPerformed(evt);
            }
        });
        copas_T_nombreaccesion.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                copas_T_nombreaccesionKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                copas_T_nombreaccesionKeyReleased(evt);
            }
        });

        copas_T_estadoaccesion.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        copas_T_estadoaccesion.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                copas_T_estadoaccesionFocusGained(evt);
            }
        });
        copas_T_estadoaccesion.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                copas_T_estadoaccesionKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                copas_T_estadoaccesionKeyReleased(evt);
            }
        });

        copas_T_fuentecoleccion.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        copas_T_fuentecoleccion.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                copas_T_fuentecoleccionFocusGained(evt);
            }
        });
        copas_T_fuentecoleccion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                copas_T_fuentecoleccionActionPerformed(evt);
            }
        });
        copas_T_fuentecoleccion.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                copas_T_fuentecoleccionKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                copas_T_fuentecoleccionKeyReleased(evt);
            }
        });

        copas_T_latitud.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        copas_T_latitud.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                copas_T_latitudFocusGained(evt);
            }
        });
        copas_T_latitud.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                copas_T_latitudKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                copas_T_latitudKeyReleased(evt);
            }
        });

        copas_T_longitud.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        copas_T_longitud.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                copas_T_longitudFocusGained(evt);
            }
        });
        copas_T_longitud.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                copas_T_longitudKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                copas_T_longitudKeyReleased(evt);
            }
        });

        copas_DT_fecha.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        copas_DT_fecha.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                copas_DT_fechaKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout copas_panel_campos_b_bLayout = new javax.swing.GroupLayout(copas_panel_campos_b_b);
        copas_panel_campos_b_b.setLayout(copas_panel_campos_b_bLayout);
        copas_panel_campos_b_bLayout.setHorizontalGroup(
            copas_panel_campos_b_bLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(copas_DT_fecha, javax.swing.GroupLayout.DEFAULT_SIZE, 157, Short.MAX_VALUE)
            .addComponent(copas_T_nombrecultivo)
            .addComponent(copas_T_nombreaccesion)
            .addComponent(copas_T_estadoaccesion)
            .addComponent(copas_T_fuentecoleccion)
            .addComponent(copas_T_latitud)
            .addComponent(copas_T_longitud)
        );
        copas_panel_campos_b_bLayout.setVerticalGroup(
            copas_panel_campos_b_bLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(copas_panel_campos_b_bLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(copas_DT_fecha, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(copas_T_nombrecultivo, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(copas_T_nombreaccesion, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(copas_T_estadoaccesion, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(copas_T_fuentecoleccion, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(copas_T_latitud, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(copas_T_longitud, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(16, 16, 16))
        );

        copas_panel_campos_b.add(copas_panel_campos_b_b);

        copas_panel_campos.add(copas_panel_campos_b);

        copas_panel_campos_c.setOpaque(false);
        copas_panel_campos_c.setLayout(new java.awt.GridLayout(1, 0));

        copas_L_altitud.setFont(new java.awt.Font("Garamond", 1, 13)); // NOI18N
        copas_L_altitud.setText("ALTITUD");

        copas_L_genero.setFont(new java.awt.Font("Garamond", 1, 13)); // NOI18N
        copas_L_genero.setText("GENERO");

        copas_L_especie.setFont(new java.awt.Font("Garamond", 1, 13)); // NOI18N
        copas_L_especie.setText("ESPECIE");

        copas_L_dap.setFont(new java.awt.Font("Garamond", 1, 13)); // NOI18N
        copas_L_dap.setText("D_A_P");

        copas_L_altura.setFont(new java.awt.Font("Garamond", 1, 13)); // NOI18N
        copas_L_altura.setText("ALTURA");

        copas_L_enlacescopa.setFont(new java.awt.Font("Garamond", 1, 13)); // NOI18N
        copas_L_enlacescopa.setText("N° DE ENLACES");

        javax.swing.GroupLayout copas_panel_campos_c_aLayout = new javax.swing.GroupLayout(copas_panel_campos_c_a);
        copas_panel_campos_c_a.setLayout(copas_panel_campos_c_aLayout);
        copas_panel_campos_c_aLayout.setHorizontalGroup(
            copas_panel_campos_c_aLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(copas_L_altitud, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(copas_L_genero, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(copas_L_especie, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(copas_L_dap, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(copas_L_altura, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(copas_L_enlacescopa, javax.swing.GroupLayout.DEFAULT_SIZE, 157, Short.MAX_VALUE)
            .addComponent(copas_L_muestraenlacescopa, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        copas_panel_campos_c_aLayout.setVerticalGroup(
            copas_panel_campos_c_aLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(copas_panel_campos_c_aLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(copas_L_altitud, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(copas_L_genero, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(copas_L_especie, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(copas_L_dap, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(copas_L_altura, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(copas_L_enlacescopa, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(copas_L_muestraenlacescopa, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        copas_panel_campos_c.add(copas_panel_campos_c_a);

        copas_panel_campos_c_b.setOpaque(false);

        copas_T_dap.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        copas_T_dap.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                copas_T_dapFocusGained(evt);
            }
        });
        copas_T_dap.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                copas_T_dapKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                copas_T_dapKeyReleased(evt);
            }
        });

        copas_T_altura.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        copas_T_altura.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                copas_T_alturaFocusGained(evt);
            }
        });
        copas_T_altura.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                copas_T_alturaKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                copas_T_alturaKeyReleased(evt);
            }
        });

        copas_T_altitud.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        copas_T_altitud.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                copas_T_altitudFocusGained(evt);
            }
        });
        copas_T_altitud.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                copas_T_altitudKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                copas_T_altitudKeyReleased(evt);
            }
        });

        copas_T_especie.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        copas_T_especie.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                copas_T_especieFocusGained(evt);
            }
        });
        copas_T_especie.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                copas_T_especieKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                copas_T_especieKeyReleased(evt);
            }
        });

        copas_T_genero.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        copas_T_genero.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                copas_T_generoFocusGained(evt);
            }
        });
        copas_T_genero.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                copas_T_generoKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                copas_T_generoKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout copas_panel_campos_c_bLayout = new javax.swing.GroupLayout(copas_panel_campos_c_b);
        copas_panel_campos_c_b.setLayout(copas_panel_campos_c_bLayout);
        copas_panel_campos_c_bLayout.setHorizontalGroup(
            copas_panel_campos_c_bLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(copas_T_altitud, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 157, Short.MAX_VALUE)
            .addComponent(copas_T_genero)
            .addComponent(copas_T_especie, javax.swing.GroupLayout.Alignment.TRAILING)
            .addComponent(copas_T_dap)
            .addComponent(copas_T_altura)
        );
        copas_panel_campos_c_bLayout.setVerticalGroup(
            copas_panel_campos_c_bLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(copas_panel_campos_c_bLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(copas_T_altitud, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(copas_T_genero, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(copas_T_especie, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(copas_T_dap, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(copas_T_altura, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(78, 78, 78))
        );

        copas_panel_campos_c.add(copas_panel_campos_c_b);

        copas_panel_campos.add(copas_panel_campos_c);

        copas_panel_campos_d.setOpaque(false);

        copas_TA_observaciones.setColumns(20);
        copas_TA_observaciones.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        copas_TA_observaciones.setRows(5);
        copas_TA_observaciones.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                copas_TA_observacionesFocusGained(evt);
            }
        });
        copas_TA_observaciones.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                copas_TA_observacionesKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                copas_TA_observacionesKeyReleased(evt);
            }
        });
        copas_panel_campos_d_scrollpane.setViewportView(copas_TA_observaciones);

        copas_panel_campos_d_l_observaciones.setFont(new java.awt.Font("Garamond", 1, 18)); // NOI18N
        copas_panel_campos_d_l_observaciones.setText("             OBSERVACIONES ");

        javax.swing.GroupLayout copas_panel_campos_dLayout = new javax.swing.GroupLayout(copas_panel_campos_d);
        copas_panel_campos_d.setLayout(copas_panel_campos_dLayout);
        copas_panel_campos_dLayout.setHorizontalGroup(
            copas_panel_campos_dLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(copas_panel_campos_d_scrollpane)
            .addComponent(copas_panel_campos_d_l_observaciones, javax.swing.GroupLayout.DEFAULT_SIZE, 314, Short.MAX_VALUE)
        );
        copas_panel_campos_dLayout.setVerticalGroup(
            copas_panel_campos_dLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(copas_panel_campos_dLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(copas_panel_campos_d_l_observaciones, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(copas_panel_campos_d_scrollpane, javax.swing.GroupLayout.DEFAULT_SIZE, 186, Short.MAX_VALUE)
                .addContainerGap())
        );

        copas_panel_campos.add(copas_panel_campos_d);

        javax.swing.GroupLayout copas_descktoppaneLayout = new javax.swing.GroupLayout(copas_descktoppane);
        copas_descktoppane.setLayout(copas_descktoppaneLayout);
        copas_descktoppaneLayout.setHorizontalGroup(
            copas_descktoppaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(copas_panel_botones, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(copas_descktoppaneLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(copas_descktoppaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(copas_panel_filtro, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(copas_scollpane)
                    .addComponent(copas_panel_campos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        copas_descktoppaneLayout.setVerticalGroup(
            copas_descktoppaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(copas_descktoppaneLayout.createSequentialGroup()
                .addComponent(copas_panel_botones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(copas_panel_campos, javax.swing.GroupLayout.PREFERRED_SIZE, 277, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(copas_panel_filtro, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(copas_scollpane, javax.swing.GroupLayout.DEFAULT_SIZE, 681, Short.MAX_VALUE)
                .addContainerGap())
        );
        copas_descktoppane.setLayer(copas_scollpane, javax.swing.JLayeredPane.DEFAULT_LAYER);
        copas_descktoppane.setLayer(copas_panel_botones, javax.swing.JLayeredPane.DEFAULT_LAYER);
        copas_descktoppane.setLayer(copas_panel_filtro, javax.swing.JLayeredPane.DEFAULT_LAYER);
        copas_descktoppane.setLayer(copas_panel_campos, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jScrollPane6.setViewportView(copas_descktoppane);

        pestaña_copas.add(jScrollPane6, java.awt.BorderLayout.CENTER);

        jTabbedPane1.addTab("COPAS", pestaña_copas);

        pestaña_patrones.setLayout(new java.awt.BorderLayout());

        patrones_tabla.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        patrones_tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        patrones_tabla.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        patrones_tabla.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                patrones_tablaMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                patrones_tablaMouseReleased(evt);
            }
        });
        patrones_scroolpane.setViewportView(patrones_tabla);

        patrones_panel_botones.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, null, java.awt.Color.blue, null, null));
        patrones_panel_botones.setLayout(new java.awt.GridLayout(1, 0));

        patrones_B_nuevo.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        patrones_B_nuevo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Utilidades/1417741094_new10-24.png"))); // NOI18N
        patrones_B_nuevo.setText("NUEVO");
        patrones_B_nuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                patrones_B_nuevoActionPerformed(evt);
            }
        });
        patrones_panel_botones.add(patrones_B_nuevo);

        patrones_B_registrar.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        patrones_B_registrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Utilidades/registrar 2424.png"))); // NOI18N
        patrones_B_registrar.setText("REGISTRAR");
        patrones_B_registrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                patrones_B_registrarActionPerformed(evt);
            }
        });
        patrones_B_registrar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                patrones_B_registrarKeyPressed(evt);
            }
        });
        patrones_panel_botones.add(patrones_B_registrar);

        patrones_B_actualizar.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        patrones_B_actualizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Utilidades/actualizar 2424.png"))); // NOI18N
        patrones_B_actualizar.setText("ACTUALIZAR");
        patrones_B_actualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                patrones_B_actualizarActionPerformed(evt);
            }
        });
        patrones_panel_botones.add(patrones_B_actualizar);

        patrones_B_eliminar.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        patrones_B_eliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Utilidades/eliminar 2424.png"))); // NOI18N
        patrones_B_eliminar.setText("ELIMINAR");
        patrones_B_eliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                patrones_B_eliminarActionPerformed(evt);
            }
        });
        patrones_panel_botones.add(patrones_B_eliminar);

        patrones_B_limpiar.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        patrones_B_limpiar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Utilidades/1414198212_Broom.png"))); // NOI18N
        patrones_B_limpiar.setText("LIMPIAR");
        patrones_B_limpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                patrones_B_limpiarActionPerformed(evt);
            }
        });
        patrones_panel_botones.add(patrones_B_limpiar);

        patrones_panel_filtro.setLayout(new java.awt.GridLayout(1, 0));

        patrones_L_filtrarpatronespor.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        patrones_L_filtrarpatronespor.setText("FILTRAR PATRONES POR:");
        patrones_panel_filtro.add(patrones_L_filtrarpatronespor);

        patrones_RB_donantre.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        patrones_RB_donantre.setText("DONANTE");
        patrones_RB_donantre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                patrones_RB_donantreActionPerformed(evt);
            }
        });
        patrones_panel_filtro.add(patrones_RB_donantre);

        patrones_RB_vereda.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        patrones_RB_vereda.setText("VEREDA");
        patrones_RB_vereda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                patrones_RB_veredaActionPerformed(evt);
            }
        });
        patrones_panel_filtro.add(patrones_RB_vereda);

        patrones_T_filtrarpatronespor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                patrones_T_filtrarpatronesporKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                patrones_T_filtrarpatronesporKeyReleased(evt);
            }
        });
        patrones_panel_filtro.add(patrones_T_filtrarpatronespor);

        patrones_panel_campos.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED), "Administracion Patron", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.BELOW_TOP, new java.awt.Font("Calibri Light", 1, 24))); // NOI18N
        patrones_panel_campos.setLayout(new java.awt.GridLayout(1, 0));

        patornes_panel_campos_a.setOpaque(false);
        patornes_panel_campos_a.setLayout(new java.awt.GridLayout(1, 0));

        patornes_panel_campos_a_a.setOpaque(false);

        patornes_L_cod_patron.setFont(new java.awt.Font("Garamond", 1, 13)); // NOI18N
        patornes_L_cod_patron.setText("COD_PATRON");

        patornes_L_colector.setFont(new java.awt.Font("Garamond", 1, 13)); // NOI18N
        patornes_L_colector.setText("COLECTOR");

        patornes_L_donante.setFont(new java.awt.Font("Garamond", 1, 13)); // NOI18N
        patornes_L_donante.setText("DONANTE");

        patornes_L_departamento.setFont(new java.awt.Font("Garamond", 1, 13)); // NOI18N
        patornes_L_departamento.setText("DEPARTAMENTO");

        patornes_L_municipio.setFont(new java.awt.Font("Garamond", 1, 13)); // NOI18N
        patornes_L_municipio.setText("MUNICIPIO");

        patornes_L_vereda.setFont(new java.awt.Font("Garamond", 1, 13)); // NOI18N
        patornes_L_vereda.setText("VEREDA");

        patornes_L_finca.setFont(new java.awt.Font("Garamond", 1, 13)); // NOI18N
        patornes_L_finca.setText("FINCA");

        javax.swing.GroupLayout patornes_panel_campos_a_aLayout = new javax.swing.GroupLayout(patornes_panel_campos_a_a);
        patornes_panel_campos_a_a.setLayout(patornes_panel_campos_a_aLayout);
        patornes_panel_campos_a_aLayout.setHorizontalGroup(
            patornes_panel_campos_a_aLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(patornes_L_cod_patron, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(patornes_L_colector, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(patornes_L_donante, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(patornes_L_departamento, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 158, Short.MAX_VALUE)
            .addComponent(patornes_L_municipio, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(patornes_L_vereda, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(patornes_L_finca, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        patornes_panel_campos_a_aLayout.setVerticalGroup(
            patornes_panel_campos_a_aLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(patornes_panel_campos_a_aLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(patornes_L_cod_patron, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(patornes_L_colector, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(patornes_L_donante, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(patornes_L_departamento, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(patornes_L_municipio, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(patornes_L_vereda, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(patornes_L_finca, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        patornes_panel_campos_a.add(patornes_panel_campos_a_a);

        patornes_panel_campos_a_b.setOpaque(false);

        patornes_T_cod_patron.setFont(new java.awt.Font("Calibri Light", 0, 12)); // NOI18N
        patornes_T_cod_patron.setEnabled(false);
        patornes_T_cod_patron.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                patornes_T_cod_patronActionPerformed(evt);
            }
        });
        patornes_T_cod_patron.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                patornes_T_cod_patronKeyPressed(evt);
            }
        });

        patornes_T_municipio.setFont(new java.awt.Font("Calibri Light", 0, 12)); // NOI18N
        patornes_T_municipio.setEnabled(false);
        patornes_T_municipio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                patornes_T_municipioActionPerformed(evt);
            }
        });

        patornes_T_vereda.setFont(new java.awt.Font("Calibri Light", 0, 12)); // NOI18N
        patornes_T_vereda.setEnabled(false);

        patornes_T_finca.setFont(new java.awt.Font("Calibri Light", 0, 12)); // NOI18N
        patornes_T_finca.setEnabled(false);
        patornes_T_finca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                patornes_T_fincaActionPerformed(evt);
            }
        });

        patornes_CB_colector.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                patornes_CB_colectorKeyPressed(evt);
            }
        });

        patornes_CB_departamento.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                patornes_CB_departamentoKeyPressed(evt);
            }
        });

        patornes_T_donante.setEnabled(false);

        patornes_B_donante.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Utilidades/Buscar_Ventana_Principal.png"))); // NOI18N
        patornes_B_donante.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                patornes_B_donanteActionPerformed(evt);
            }
        });
        patornes_B_donante.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                patornes_B_donanteKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout patornes_panel_campos_a_bLayout = new javax.swing.GroupLayout(patornes_panel_campos_a_b);
        patornes_panel_campos_a_b.setLayout(patornes_panel_campos_a_bLayout);
        patornes_panel_campos_a_bLayout.setHorizontalGroup(
            patornes_panel_campos_a_bLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(patornes_T_cod_patron, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(patornes_panel_campos_a_bLayout.createSequentialGroup()
                .addGap(1, 1, 1)
                .addGroup(patornes_panel_campos_a_bLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(patornes_CB_colector, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(patornes_panel_campos_a_bLayout.createSequentialGroup()
                        .addComponent(patornes_B_donante, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(patornes_T_donante, javax.swing.GroupLayout.DEFAULT_SIZE, 126, Short.MAX_VALUE))))
            .addComponent(patornes_CB_departamento, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(patornes_T_municipio)
            .addComponent(patornes_T_vereda)
            .addComponent(patornes_T_finca)
        );
        patornes_panel_campos_a_bLayout.setVerticalGroup(
            patornes_panel_campos_a_bLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(patornes_panel_campos_a_bLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(patornes_T_cod_patron, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(patornes_CB_colector, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(patornes_panel_campos_a_bLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(patornes_T_donante, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(patornes_B_donante, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(patornes_CB_departamento, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(patornes_T_municipio, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(patornes_T_vereda, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(patornes_T_finca, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(16, 16, 16))
        );

        patornes_panel_campos_a.add(patornes_panel_campos_a_b);

        patrones_panel_campos.add(patornes_panel_campos_a);

        patornes_panel_campos_b.setOpaque(false);
        patornes_panel_campos_b.setLayout(new java.awt.GridLayout(1, 0));

        patornes_panel_campos_b_a.setOpaque(false);

        patornes_L_longitud.setFont(new java.awt.Font("Garamond", 1, 13)); // NOI18N
        patornes_L_longitud.setText("LONGITUD");

        patornes_L_latitud.setFont(new java.awt.Font("Garamond", 1, 13)); // NOI18N
        patornes_L_latitud.setText("LATITUD");

        patornes_L_fuentecoleccion.setFont(new java.awt.Font("Garamond", 1, 13)); // NOI18N
        patornes_L_fuentecoleccion.setText("FUENTE_COLECCION");

        patornes_L_estadoaccesion.setFont(new java.awt.Font("Garamond", 1, 13)); // NOI18N
        patornes_L_estadoaccesion.setText("ESTADO_ACCESION");

        patornes_L_nombre_c_accesion.setFont(new java.awt.Font("Garamond", 1, 13)); // NOI18N
        patornes_L_nombre_c_accesion.setText("NOMBRE_C_ACCESION");

        patornes_L_nombre_c_cultivo.setFont(new java.awt.Font("Garamond", 1, 13)); // NOI18N
        patornes_L_nombre_c_cultivo.setText("NOMBRE_C_CULTIVO");

        patornes_L_fecha.setFont(new java.awt.Font("Garamond", 1, 13)); // NOI18N
        patornes_L_fecha.setText("FECHA");

        javax.swing.GroupLayout patornes_panel_campos_b_aLayout = new javax.swing.GroupLayout(patornes_panel_campos_b_a);
        patornes_panel_campos_b_a.setLayout(patornes_panel_campos_b_aLayout);
        patornes_panel_campos_b_aLayout.setHorizontalGroup(
            patornes_panel_campos_b_aLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(patornes_L_fecha, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(patornes_L_nombre_c_cultivo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(patornes_L_nombre_c_accesion, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(patornes_L_estadoaccesion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(patornes_L_fuentecoleccion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(patornes_L_latitud, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(patornes_L_longitud, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        patornes_panel_campos_b_aLayout.setVerticalGroup(
            patornes_panel_campos_b_aLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(patornes_panel_campos_b_aLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(patornes_L_fecha, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(patornes_L_nombre_c_cultivo, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(patornes_L_nombre_c_accesion, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(patornes_L_estadoaccesion, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(patornes_L_fuentecoleccion, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(patornes_L_latitud, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(patornes_L_longitud, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        patornes_panel_campos_b.add(patornes_panel_campos_b_a);

        patornes_panel_campos_b_b.setOpaque(false);

        patornes_D_fecha.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                patornes_D_fechaKeyPressed(evt);
            }
        });

        patornes_T_nombre_c_cultivo.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        patornes_T_nombre_c_cultivo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                patornes_T_nombre_c_cultivoFocusGained(evt);
            }
        });
        patornes_T_nombre_c_cultivo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                patornes_T_nombre_c_cultivoKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                patornes_T_nombre_c_cultivoKeyReleased(evt);
            }
        });

        patornes_T_nombre_c_accesion.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        patornes_T_nombre_c_accesion.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                patornes_T_nombre_c_accesionFocusGained(evt);
            }
        });
        patornes_T_nombre_c_accesion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                patornes_T_nombre_c_accesionActionPerformed(evt);
            }
        });
        patornes_T_nombre_c_accesion.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                patornes_T_nombre_c_accesionKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                patornes_T_nombre_c_accesionKeyReleased(evt);
            }
        });

        patornes_T_estado_accesion.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        patornes_T_estado_accesion.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                patornes_T_estado_accesionFocusGained(evt);
            }
        });
        patornes_T_estado_accesion.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                patornes_T_estado_accesionKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                patornes_T_estado_accesionKeyReleased(evt);
            }
        });

        patornes_T_fuente_colecicon.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        patornes_T_fuente_colecicon.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                patornes_T_fuente_coleciconFocusGained(evt);
            }
        });
        patornes_T_fuente_colecicon.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                patornes_T_fuente_coleciconKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                patornes_T_fuente_coleciconKeyReleased(evt);
            }
        });

        patornes_T_latitud.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        patornes_T_latitud.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                patornes_T_latitudFocusGained(evt);
            }
        });
        patornes_T_latitud.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                patornes_T_latitudKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                patornes_T_latitudKeyReleased(evt);
            }
        });

        patornes_T_longitud.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        patornes_T_longitud.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                patornes_T_longitudFocusGained(evt);
            }
        });
        patornes_T_longitud.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                patornes_T_longitudKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                patornes_T_longitudKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout patornes_panel_campos_b_bLayout = new javax.swing.GroupLayout(patornes_panel_campos_b_b);
        patornes_panel_campos_b_b.setLayout(patornes_panel_campos_b_bLayout);
        patornes_panel_campos_b_bLayout.setHorizontalGroup(
            patornes_panel_campos_b_bLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(patornes_D_fecha, javax.swing.GroupLayout.DEFAULT_SIZE, 158, Short.MAX_VALUE)
            .addComponent(patornes_T_nombre_c_cultivo)
            .addComponent(patornes_T_nombre_c_accesion, javax.swing.GroupLayout.Alignment.TRAILING)
            .addComponent(patornes_T_estado_accesion, javax.swing.GroupLayout.Alignment.TRAILING)
            .addComponent(patornes_T_fuente_colecicon, javax.swing.GroupLayout.Alignment.TRAILING)
            .addComponent(patornes_T_latitud)
            .addComponent(patornes_T_longitud)
        );
        patornes_panel_campos_b_bLayout.setVerticalGroup(
            patornes_panel_campos_b_bLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(patornes_panel_campos_b_bLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(patornes_D_fecha, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(patornes_T_nombre_c_cultivo, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(patornes_T_nombre_c_accesion, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(patornes_T_estado_accesion, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(patornes_T_fuente_colecicon, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(patornes_T_latitud, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(patornes_T_longitud, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        patornes_panel_campos_b.add(patornes_panel_campos_b_b);

        patrones_panel_campos.add(patornes_panel_campos_b);

        patornes_panel_campos_c.setOpaque(false);
        patornes_panel_campos_c.setLayout(new java.awt.GridLayout(1, 0));

        patornes_panel_campos_c_a.setOpaque(false);

        patornes_L_altitud.setFont(new java.awt.Font("Garamond", 1, 13)); // NOI18N
        patornes_L_altitud.setText("ALTITUD");

        patornes_L_genero.setFont(new java.awt.Font("Garamond", 1, 13)); // NOI18N
        patornes_L_genero.setText("GENERO");

        patornes_L_especie.setFont(new java.awt.Font("Garamond", 1, 13)); // NOI18N
        patornes_L_especie.setText("ESPECIE");

        patornes_L_D_A_P.setFont(new java.awt.Font("Garamond", 1, 13)); // NOI18N
        patornes_L_D_A_P.setText("D_A_P");

        patornes_L_altura.setFont(new java.awt.Font("Garamond", 1, 13)); // NOI18N
        patornes_L_altura.setText("ALTURA");

        patornes_L_numerodeenlaces.setFont(new java.awt.Font("Garamond", 1, 13)); // NOI18N
        patornes_L_numerodeenlaces.setText("Numero De Enlaces");

        javax.swing.GroupLayout patornes_panel_campos_c_aLayout = new javax.swing.GroupLayout(patornes_panel_campos_c_a);
        patornes_panel_campos_c_a.setLayout(patornes_panel_campos_c_aLayout);
        patornes_panel_campos_c_aLayout.setHorizontalGroup(
            patornes_panel_campos_c_aLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(patornes_L_altitud, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(patornes_L_genero, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(patornes_L_especie, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(patornes_L_D_A_P, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(patornes_L_altura, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(patornes_L_numerodeenlaces, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 158, Short.MAX_VALUE)
            .addComponent(patornes_L_mostrar_numerodeenlaces, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        patornes_panel_campos_c_aLayout.setVerticalGroup(
            patornes_panel_campos_c_aLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(patornes_panel_campos_c_aLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(patornes_L_altitud, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(patornes_L_genero, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(patornes_L_especie, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(patornes_L_D_A_P, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(patornes_L_altura, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(patornes_L_numerodeenlaces, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(patornes_L_mostrar_numerodeenlaces, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        patornes_panel_campos_c.add(patornes_panel_campos_c_a);

        patornes_panel_campos_c_b.setOpaque(false);

        patornes_T_altitud.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        patornes_T_altitud.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                patornes_T_altitudFocusGained(evt);
            }
        });
        patornes_T_altitud.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                patornes_T_altitudKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                patornes_T_altitudKeyReleased(evt);
            }
        });

        patornes_T_genero.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        patornes_T_genero.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                patornes_T_generoFocusGained(evt);
            }
        });
        patornes_T_genero.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                patornes_T_generoKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                patornes_T_generoKeyReleased(evt);
            }
        });

        patornes_T_especie.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        patornes_T_especie.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                patornes_T_especieFocusGained(evt);
            }
        });
        patornes_T_especie.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                patornes_T_especieKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                patornes_T_especieKeyReleased(evt);
            }
        });

        patornes_T_dap.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        patornes_T_dap.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                patornes_T_dapFocusGained(evt);
            }
        });
        patornes_T_dap.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                patornes_T_dapKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                patornes_T_dapKeyReleased(evt);
            }
        });

        patornes_T_altura.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        patornes_T_altura.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                patornes_T_alturaFocusGained(evt);
            }
        });
        patornes_T_altura.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                patornes_T_alturaActionPerformed(evt);
            }
        });
        patornes_T_altura.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                patornes_T_alturaKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                patornes_T_alturaKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout patornes_panel_campos_c_bLayout = new javax.swing.GroupLayout(patornes_panel_campos_c_b);
        patornes_panel_campos_c_b.setLayout(patornes_panel_campos_c_bLayout);
        patornes_panel_campos_c_bLayout.setHorizontalGroup(
            patornes_panel_campos_c_bLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(patornes_T_altitud, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 158, Short.MAX_VALUE)
            .addComponent(patornes_T_genero)
            .addComponent(patornes_T_especie, javax.swing.GroupLayout.Alignment.TRAILING)
            .addComponent(patornes_T_dap)
            .addComponent(patornes_T_altura)
        );
        patornes_panel_campos_c_bLayout.setVerticalGroup(
            patornes_panel_campos_c_bLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(patornes_panel_campos_c_bLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(patornes_T_altitud, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(patornes_T_genero, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(patornes_T_especie, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(patornes_T_dap, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(patornes_T_altura, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(78, 78, 78))
        );

        patornes_panel_campos_c.add(patornes_panel_campos_c_b);

        patrones_panel_campos.add(patornes_panel_campos_c);

        patornes_panel_campos_d.setOpaque(false);

        patornes_TA_observaciones.setColumns(20);
        patornes_TA_observaciones.setRows(5);
        patornes_TA_observaciones.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                patornes_TA_observacionesFocusGained(evt);
            }
        });
        patornes_TA_observaciones.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                patornes_TA_observacionesKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                patornes_TA_observacionesKeyReleased(evt);
            }
        });
        patornes_panel_campos_scollpane.setViewportView(patornes_TA_observaciones);

        patornes_panel_campos_L_Observaciones.setFont(new java.awt.Font("Garamond", 1, 18)); // NOI18N
        patornes_panel_campos_L_Observaciones.setText("            OBSERVACIONES ");

        javax.swing.GroupLayout patornes_panel_campos_dLayout = new javax.swing.GroupLayout(patornes_panel_campos_d);
        patornes_panel_campos_d.setLayout(patornes_panel_campos_dLayout);
        patornes_panel_campos_dLayout.setHorizontalGroup(
            patornes_panel_campos_dLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(patornes_panel_campos_scollpane)
            .addComponent(patornes_panel_campos_L_Observaciones, javax.swing.GroupLayout.DEFAULT_SIZE, 316, Short.MAX_VALUE)
        );
        patornes_panel_campos_dLayout.setVerticalGroup(
            patornes_panel_campos_dLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(patornes_panel_campos_dLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(patornes_panel_campos_L_Observaciones, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(patornes_panel_campos_scollpane, javax.swing.GroupLayout.DEFAULT_SIZE, 186, Short.MAX_VALUE)
                .addContainerGap())
        );

        patrones_panel_campos.add(patornes_panel_campos_d);

        javax.swing.GroupLayout patrones_desktoppaneLayout = new javax.swing.GroupLayout(patrones_desktoppane);
        patrones_desktoppane.setLayout(patrones_desktoppaneLayout);
        patrones_desktoppaneLayout.setHorizontalGroup(
            patrones_desktoppaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(patrones_panel_botones, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(patrones_desktoppaneLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(patrones_desktoppaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(patrones_panel_campos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(patrones_desktoppaneLayout.createSequentialGroup()
                        .addGroup(patrones_desktoppaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(patrones_panel_filtro, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(patrones_scroolpane))
                        .addContainerGap())))
        );
        patrones_desktoppaneLayout.setVerticalGroup(
            patrones_desktoppaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(patrones_desktoppaneLayout.createSequentialGroup()
                .addComponent(patrones_panel_botones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(patrones_panel_campos, javax.swing.GroupLayout.PREFERRED_SIZE, 277, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(patrones_panel_filtro, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(patrones_scroolpane, javax.swing.GroupLayout.DEFAULT_SIZE, 681, Short.MAX_VALUE)
                .addContainerGap())
        );
        patrones_desktoppane.setLayer(patrones_scroolpane, javax.swing.JLayeredPane.DEFAULT_LAYER);
        patrones_desktoppane.setLayer(patrones_panel_botones, javax.swing.JLayeredPane.DEFAULT_LAYER);
        patrones_desktoppane.setLayer(patrones_panel_filtro, javax.swing.JLayeredPane.DEFAULT_LAYER);
        patrones_desktoppane.setLayer(patrones_panel_campos, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jScrollPane3.setViewportView(patrones_desktoppane);

        pestaña_patrones.add(jScrollPane3, java.awt.BorderLayout.CENTER);

        jTabbedPane1.addTab("PATRONES", pestaña_patrones);

        pestaña_donantes.setLayout(new java.awt.BorderLayout());

        jDesktopPane3.setLayout(new java.awt.BorderLayout());

        donante_panel_campos.setBackground(new java.awt.Color(204, 0, 255));
        donante_panel_campos.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Registro Donantes", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 24))); // NOI18N
        donante_panel_campos.setOpaque(false);

        donante_l_codigo.setText("CODIGO");

        donante_l_empresa.setText("EMPRESA");

        donante_l_nombre.setText("NOMBRE");

        donante_l_telefono.setText("TELEFONO");

        donante_l_direccion.setText("DIRECCION");

        donante_l_departamento.setText("DEPARTAMENTO");

        donante_l_municipio.setText("MUNICIPIO");

        donante_l_vereda.setText("VEREDA");

        donante_l_finca.setText("FINCA");

        donante_t_codigo.addContainerListener(new java.awt.event.ContainerAdapter() {
            public void componentAdded(java.awt.event.ContainerEvent evt) {
                donante_t_codigoComponentAdded(evt);
            }
        });
        donante_t_codigo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                donante_t_codigoActionPerformed(evt);
            }
        });
        donante_t_codigo.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                donante_t_codigoPropertyChange(evt);
            }
        });

        donante_cb_empresa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                donante_cb_empresaActionPerformed(evt);
            }
        });
        donante_cb_empresa.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                donante_cb_empresaKeyReleased(evt);
            }
        });

        donante_t_nombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                donante_t_nombreKeyReleased(evt);
            }
        });

        donante_t_telefono.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                donante_t_telefonoKeyReleased(evt);
            }
        });

        donante_t_direccion.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                donante_t_direccionKeyReleased(evt);
            }
        });

        donante_t_municipio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                donante_t_municipioActionPerformed(evt);
            }
        });
        donante_t_municipio.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                donante_t_municipioKeyReleased(evt);
            }
        });

        donante_t_vereda.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                donante_t_veredaKeyReleased(evt);
            }
        });

        donante_t_finca.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                donante_t_fincaKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout donante_panel_camposLayout = new javax.swing.GroupLayout(donante_panel_campos);
        donante_panel_campos.setLayout(donante_panel_camposLayout);
        donante_panel_camposLayout.setHorizontalGroup(
            donante_panel_camposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(donante_panel_camposLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(donante_panel_camposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(donante_l_nombre, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(donante_l_codigo, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(donante_l_empresa, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(donante_panel_camposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(donante_t_codigo)
                    .addComponent(donante_cb_empresa, 0, 200, Short.MAX_VALUE)
                    .addComponent(donante_t_nombre))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(donante_panel_camposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(donante_l_direccion, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(donante_l_departamento, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 87, Short.MAX_VALUE)
                    .addComponent(donante_l_telefono, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(donante_panel_camposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(donante_t_direccion)
                    .addComponent(donante_t_telefono)
                    .addComponent(donante_cb_departamento, javax.swing.GroupLayout.Alignment.TRAILING, 0, 209, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(donante_panel_camposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(donante_panel_camposLayout.createSequentialGroup()
                        .addGroup(donante_panel_camposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(donante_l_finca, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(donante_l_municipio, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(230, 230, 230))
                    .addGroup(donante_panel_camposLayout.createSequentialGroup()
                        .addComponent(donante_l_vereda, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(donante_panel_camposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(donante_t_finca, javax.swing.GroupLayout.DEFAULT_SIZE, 224, Short.MAX_VALUE)
                            .addComponent(donante_t_vereda)
                            .addComponent(donante_t_municipio))
                        .addContainerGap())))
        );
        donante_panel_camposLayout.setVerticalGroup(
            donante_panel_camposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(donante_panel_camposLayout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addGroup(donante_panel_camposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(donante_l_codigo)
                    .addComponent(donante_t_codigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(donante_l_telefono)
                    .addComponent(donante_t_telefono, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(donante_t_municipio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(donante_l_municipio))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(donante_panel_camposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(donante_l_empresa)
                    .addComponent(donante_cb_empresa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(donante_l_direccion)
                    .addComponent(donante_t_direccion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(donante_l_vereda)
                    .addComponent(donante_t_vereda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(donante_panel_camposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(donante_l_nombre)
                    .addComponent(donante_t_nombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(donante_l_departamento)
                    .addComponent(donante_cb_departamento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(donante_l_finca)
                    .addComponent(donante_t_finca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        donante_b_registrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Utilidades/Donantes/donantes registrar.png"))); // NOI18N
        donante_b_registrar.setText("Registrar");
        donante_b_registrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                donante_b_registrarActionPerformed(evt);
            }
        });

        donante_b_modificar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Utilidades/Donantes/donantes - actualizar.png"))); // NOI18N
        donante_b_modificar.setText("Modificar");
        donante_b_modificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                donante_b_modificarActionPerformed(evt);
            }
        });

        donante_b_eliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Utilidades/Donantes/donantes - eliminar.png"))); // NOI18N
        donante_b_eliminar.setText("Eliminar");
        donante_b_eliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                donante_b_eliminarActionPerformed(evt);
            }
        });

        donante_b_enlazar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Utilidades/enlazar 2424.png"))); // NOI18N
        donante_b_enlazar.setText("Enlazar");

        donante_l_limpiarcampos.setBackground(new java.awt.Color(51, 51, 255));
        donante_l_limpiarcampos.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N
        donante_l_limpiarcampos.setText("      limpiar campos");
        donante_l_limpiarcampos.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        donante_l_limpiarcampos.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        donante_l_limpiarcampos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                donante_l_limpiarcamposMouseEntered(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                donante_l_limpiarcamposMousePressed(evt);
            }
        });

        javax.swing.GroupLayout donante_panel_botonesLayout = new javax.swing.GroupLayout(donante_panel_botones);
        donante_panel_botones.setLayout(donante_panel_botonesLayout);
        donante_panel_botonesLayout.setHorizontalGroup(
            donante_panel_botonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(donante_panel_botonesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(donante_panel_botonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(donante_panel_botonesLayout.createSequentialGroup()
                        .addComponent(donante_b_registrar, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(donante_b_modificar, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(donante_panel_botonesLayout.createSequentialGroup()
                        .addComponent(donante_b_eliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(donante_b_enlazar, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(donante_panel_botonesLayout.createSequentialGroup()
                        .addGap(84, 84, 84)
                        .addComponent(donante_l_limpiarcampos, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        donante_panel_botonesLayout.setVerticalGroup(
            donante_panel_botonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(donante_panel_botonesLayout.createSequentialGroup()
                .addGap(4, 4, 4)
                .addGroup(donante_panel_botonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(donante_b_registrar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(donante_b_modificar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(donante_panel_botonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(donante_b_eliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(donante_b_enlazar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(donante_l_limpiarcampos)
                .addContainerGap())
        );

        donante_ta_observaciones.setColumns(20);
        donante_ta_observaciones.setRows(5);
        donante_ta_observaciones.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                donante_ta_observacionesKeyReleased(evt);
            }
        });
        jScrollPane2.setViewportView(donante_ta_observaciones);

        donante_l_observaciones.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        donante_l_observaciones.setText("OBSERVACIONES");

        donante_tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        donante_tabla.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                donante_tablaMousePressed(evt);
            }
        });
        jScrollPane5.setViewportView(donante_tabla);

        javax.swing.GroupLayout jPanel16Layout = new javax.swing.GroupLayout(jPanel16);
        jPanel16.setLayout(jPanel16Layout);
        jPanel16Layout.setHorizontalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane5)
                    .addGroup(jPanel16Layout.createSequentialGroup()
                        .addComponent(donante_panel_campos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                        .addComponent(donante_panel_botones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel16Layout.createSequentialGroup()
                        .addComponent(donante_l_observaciones)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2)))
                .addContainerGap())
        );
        jPanel16Layout.setVerticalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(donante_panel_botones, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(donante_panel_campos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(donante_l_observaciones, javax.swing.GroupLayout.DEFAULT_SIZE, 52, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(440, Short.MAX_VALUE))
        );

        jDesktopPane3.add(jPanel16, java.awt.BorderLayout.CENTER);

        donante_panel_general.setViewportView(jDesktopPane3);

        pestaña_donantes.add(donante_panel_general, java.awt.BorderLayout.CENTER);

        jTabbedPane1.addTab("DONANTES", pestaña_donantes);

        pestaña_beneficiarios.setLayout(new java.awt.BorderLayout());

        jDesktopPane2.setBackground(new java.awt.Color(255, 102, 102));

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true), "Administrar Beneficario", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.BELOW_TOP, new java.awt.Font("Calibri Light", 1, 36))); // NOI18N
        jPanel1.setOpaque(false);

        jLabel1.setFont(new java.awt.Font("Calibri Light", 1, 18)); // NOI18N
        jLabel1.setText("IDENTIFICACION");

        jLabel2.setFont(new java.awt.Font("Calibri Light", 1, 18)); // NOI18N
        jLabel2.setText("EMPRESA");

        jLabel3.setFont(new java.awt.Font("Calibri Light", 1, 18)); // NOI18N
        jLabel3.setText("NOMBRE");

        jLabel4.setFont(new java.awt.Font("Calibri Light", 1, 18)); // NOI18N
        jLabel4.setText("TELEFONO");

        jLabel6.setFont(new java.awt.Font("Calibri Light", 1, 18)); // NOI18N
        jLabel6.setText("DIRECCION");

        beneficiario_T_identificacion.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                beneficiario_T_identificacionFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                beneficiario_T_identificacionFocusLost(evt);
            }
        });
        beneficiario_T_identificacion.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                beneficiario_T_identificacionKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                beneficiario_T_identificacionKeyReleased(evt);
            }
        });

        beneficiario_T_nombre.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                beneficiario_T_nombreFocusGained(evt);
            }
        });
        beneficiario_T_nombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                beneficiario_T_nombreActionPerformed(evt);
            }
        });
        beneficiario_T_nombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                beneficiario_T_nombreKeyReleased(evt);
            }
        });

        beneficiario_T_telefono.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                beneficiario_T_telefonoFocusGained(evt);
            }
        });
        beneficiario_T_telefono.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                beneficiario_T_telefonoKeyReleased(evt);
            }
        });

        beneficiario_T_direccion.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                beneficiario_T_direccionFocusGained(evt);
            }
        });
        beneficiario_T_direccion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                beneficiario_T_direccionActionPerformed(evt);
            }
        });
        beneficiario_T_direccion.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                beneficiario_T_direccionKeyReleased(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Calibri Light", 1, 18)); // NOI18N
        jLabel7.setText("DEPARTAMENTO");

        jLabel8.setFont(new java.awt.Font("Calibri Light", 1, 18)); // NOI18N
        jLabel8.setText("MUNICIPIO");

        jLabel9.setFont(new java.awt.Font("Calibri Light", 1, 18)); // NOI18N
        jLabel9.setText("VEREDA");

        jLabel10.setFont(new java.awt.Font("Calibri Light", 1, 18)); // NOI18N
        jLabel10.setText("FINCA");

        beneficiario_CB_departamento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                beneficiario_CB_departamentoActionPerformed(evt);
            }
        });

        beneficiario_T_municipio.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                beneficiario_T_municipioFocusGained(evt);
            }
        });
        beneficiario_T_municipio.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                beneficiario_T_municipioKeyReleased(evt);
            }
        });

        beneficiario_T_vereda.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                beneficiario_T_veredaFocusGained(evt);
            }
        });
        beneficiario_T_vereda.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                beneficiario_T_veredaKeyReleased(evt);
            }
        });

        beneficiario_T_finca.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                beneficiario_T_fincaFocusGained(evt);
            }
        });
        beneficiario_T_finca.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                beneficiario_T_fincaKeyReleased(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Calibri Light", 1, 18)); // NOI18N
        jLabel11.setText("          OBSERVACIONES");

        beneficiario_TA_observaciones.setColumns(20);
        beneficiario_TA_observaciones.setRows(5);
        beneficiario_TA_observaciones.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                beneficiario_TA_observacionesFocusGained(evt);
            }
        });
        beneficiario_TA_observaciones.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                beneficiario_TA_observacionesKeyReleased(evt);
            }
        });
        jScrollPane9.setViewportView(beneficiario_TA_observaciones);

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED, new java.awt.Color(0, 0, 0), new java.awt.Color(0, 204, 0)));

        beneficiario_RB_nombre.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        beneficiario_RB_nombre.setText("NOMBRE ");
        beneficiario_RB_nombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                beneficiario_RB_nombreActionPerformed(evt);
            }
        });

        beneficiario_RB_vereda.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        beneficiario_RB_vereda.setText("VEREDA");
        beneficiario_RB_vereda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                beneficiario_RB_veredaActionPerformed(evt);
            }
        });

        beneficiario_T_filtrarpor.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        beneficiario_T_filtrarpor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                beneficiario_T_filtrarporKeyReleased(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel12.setText("FILTRAR  POR...");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(beneficiario_RB_nombre, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(beneficiario_RB_vereda, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(beneficiario_T_filtrarpor)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(beneficiario_T_filtrarpor)
                    .addComponent(beneficiario_RB_nombre, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 66, Short.MAX_VALUE)
                    .addComponent(beneficiario_RB_vereda, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(beneficiario_CB_empresa, 0, 200, Short.MAX_VALUE)
                                    .addComponent(beneficiario_T_nombre)
                                    .addComponent(beneficiario_T_telefono)
                                    .addComponent(beneficiario_T_identificacion))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(beneficiario_CB_departamento, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(beneficiario_T_municipio)
                                    .addComponent(beneficiario_T_vereda)
                                    .addComponent(beneficiario_T_finca)))
                            .addComponent(beneficiario_T_direccion))
                        .addGap(14, 14, 14)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane9)
                            .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, 278, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(beneficiario_T_identificacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(beneficiario_CB_departamento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(beneficiario_CB_empresa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8)
                            .addComponent(beneficiario_T_municipio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(beneficiario_T_nombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9)
                            .addComponent(beneficiario_T_vereda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(beneficiario_T_telefono, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10)
                            .addComponent(beneficiario_T_finca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(beneficiario_T_direccion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        beneficiario_Tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        beneficiario_Tabla.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                beneficiario_TablaMousePressed(evt);
            }
        });
        jScrollPane10.setViewportView(beneficiario_Tabla);

        jPanel3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, null, java.awt.Color.blue, null, null));
        jPanel3.setLayout(new java.awt.GridLayout());

        beneficiario_B_guardar.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        beneficiario_B_guardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Utilidades/registrar 2424.png"))); // NOI18N
        beneficiario_B_guardar.setText("GUARDAR");
        beneficiario_B_guardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                beneficiario_B_guardarActionPerformed(evt);
            }
        });
        jPanel3.add(beneficiario_B_guardar);

        beneficiario_B_actualizar.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        beneficiario_B_actualizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Utilidades/actualizar 2424.png"))); // NOI18N
        beneficiario_B_actualizar.setText("ACTUALIZAR");
        beneficiario_B_actualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                beneficiario_B_actualizarActionPerformed(evt);
            }
        });
        jPanel3.add(beneficiario_B_actualizar);

        beneficiario_Beliminar.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        beneficiario_Beliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Utilidades/eliminar 2424.png"))); // NOI18N
        beneficiario_Beliminar.setText("ELIMINAR");
        beneficiario_Beliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                beneficiario_BeliminarActionPerformed(evt);
            }
        });
        jPanel3.add(beneficiario_Beliminar);

        beneficiario_B_limpiar.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        beneficiario_B_limpiar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Utilidades/1414198212_Broom.png"))); // NOI18N
        beneficiario_B_limpiar.setText("LIMPIAR");
        beneficiario_B_limpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                beneficiario_B_limpiarActionPerformed(evt);
            }
        });
        jPanel3.add(beneficiario_B_limpiar);

        javax.swing.GroupLayout jDesktopPane2Layout = new javax.swing.GroupLayout(jDesktopPane2);
        jDesktopPane2.setLayout(jDesktopPane2Layout);
        jDesktopPane2Layout.setHorizontalGroup(
            jDesktopPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDesktopPane2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jDesktopPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane10))
                .addContainerGap())
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, 1288, Short.MAX_VALUE)
        );
        jDesktopPane2Layout.setVerticalGroup(
            jDesktopPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDesktopPane2Layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane10, javax.swing.GroupLayout.DEFAULT_SIZE, 704, Short.MAX_VALUE)
                .addContainerGap())
        );
        jDesktopPane2.setLayer(jPanel1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane2.setLayer(jScrollPane10, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane2.setLayer(jPanel3, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jScrollPane8.setViewportView(jDesktopPane2);

        pestaña_beneficiarios.add(jScrollPane8, java.awt.BorderLayout.CENTER);

        jTabbedPane1.addTab("BENEFICIARIOS", pestaña_beneficiarios);

        pestaña_colectores.setLayout(new java.awt.BorderLayout());

        jDesktopPane4.setOpaque(false);

        jPanel4.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel4.setOpaque(false);

        jPanel5.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        jPanel5.setOpaque(false);

        jLabel13.setFont(new java.awt.Font("Calibri Light", 0, 18)); // NOI18N
        jLabel13.setText("IDENTIFICACION");

        colectores_T_nombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                colectores_T_nombreKeyReleased(evt);
            }
        });

        jLabel14.setFont(new java.awt.Font("Calibri Light", 0, 18)); // NOI18N
        jLabel14.setText("EMPRESA");

        colectores_T_telefono.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                colectores_T_telefonoActionPerformed(evt);
            }
        });

        jLabel15.setFont(new java.awt.Font("Calibri Light", 0, 18)); // NOI18N
        jLabel15.setText("NOMBRE");

        colectores_CB_empresa.setName(""); // NOI18N
        colectores_CB_empresa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                colectores_CB_empresaActionPerformed(evt);
            }
        });

        jLabel16.setFont(new java.awt.Font("Calibri Light", 0, 18)); // NOI18N
        jLabel16.setText("TELEFONO");

        colectores_T_direccion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                colectores_T_direccionActionPerformed(evt);
            }
        });
        colectores_T_direccion.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                colectores_T_direccionKeyReleased(evt);
            }
        });

        jLabel17.setFont(new java.awt.Font("Calibri Light", 0, 18)); // NOI18N
        jLabel17.setText("DIRECCION");

        jLabel18.setFont(new java.awt.Font("Calibri Light", 0, 18)); // NOI18N
        jLabel18.setText("                   OBSERVACIONES");

        colectores_T_observaciones.setColumns(20);
        colectores_T_observaciones.setFont(new java.awt.Font("Calibri Light", 0, 13)); // NOI18N
        colectores_T_observaciones.setRows(5);
        colectores_T_observaciones.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                colectores_T_observacionesKeyReleased(evt);
            }
        });
        jScrollPane12.setViewportView(colectores_T_observaciones);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel13)
                    .addComponent(jLabel14)
                    .addComponent(jLabel15)
                    .addComponent(jLabel16)
                    .addComponent(jLabel17))
                .addGap(43, 43, 43)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(colectores_T_direccion)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(colectores_CB_empresa, 0, 582, Short.MAX_VALUE)
                            .addComponent(colectores_T_telefono)
                            .addComponent(colectores_T_nombre)
                            .addComponent(colectores_T_identificacion))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane12, javax.swing.GroupLayout.DEFAULT_SIZE, 462, Short.MAX_VALUE)
                            .addComponent(jLabel18, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel13)
                            .addComponent(colectores_T_identificacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(15, 15, 15)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel14)
                            .addComponent(colectores_CB_empresa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(15, 15, 15)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel15)
                            .addComponent(colectores_T_nombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(15, 15, 15)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel16)
                            .addComponent(colectores_T_telefono, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel18)
                        .addGap(15, 15, 15)
                        .addComponent(jScrollPane12, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(15, 15, 15)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(colectores_T_direccion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        colectores_B_eliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Utilidades/Eliminar - Empresa.png"))); // NOI18N
        colectores_B_eliminar.setText("ELIMINAR");
        colectores_B_eliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                colectores_B_eliminarActionPerformed(evt);
            }
        });

        colectores_B_modificar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Utilidades/Update - Administrador_Usuarios.png"))); // NOI18N
        colectores_B_modificar.setText("MODIFICAR");
        colectores_B_modificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                colectores_B_modificarActionPerformed(evt);
            }
        });

        colectores_B_registrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Utilidades/Registrar - Empresa.png"))); // NOI18N
        colectores_B_registrar.setText("RESGISTRAR");
        colectores_B_registrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                colectores_B_registrarActionPerformed(evt);
            }
        });

        colectores_B_filtrarpor.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Utilidades/Browser - Empresa.png"))); // NOI18N
        colectores_B_filtrarpor.setText("FILTRAR POR...");
        colectores_B_filtrarpor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                colectores_B_filtrarporActionPerformed(evt);
            }
        });

        jPanel6.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        colectores_Tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        colectores_Tabla.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                colectores_TablaMousePressed(evt);
            }
        });
        jScrollPane14.setViewportView(colectores_Tabla);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane14, javax.swing.GroupLayout.DEFAULT_SIZE, 1247, Short.MAX_VALUE)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addComponent(jScrollPane14, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 35, Short.MAX_VALUE))
        );

        jScrollPane13.setViewportView(jPanel6);

        javax.swing.GroupLayout jDesktopPane4Layout = new javax.swing.GroupLayout(jDesktopPane4);
        jDesktopPane4.setLayout(jDesktopPane4Layout);
        jDesktopPane4Layout.setHorizontalGroup(
            jDesktopPane4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDesktopPane4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jDesktopPane4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane13, javax.swing.GroupLayout.DEFAULT_SIZE, 1268, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jDesktopPane4Layout.createSequentialGroup()
                        .addComponent(colectores_B_registrar)
                        .addGap(18, 18, 18)
                        .addComponent(colectores_B_modificar)
                        .addGap(18, 18, 18)
                        .addComponent(colectores_B_eliminar)
                        .addGap(18, 18, 18)
                        .addComponent(colectores_B_filtrarpor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jDesktopPane4Layout.setVerticalGroup(
            jDesktopPane4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDesktopPane4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jDesktopPane4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(colectores_B_registrar)
                    .addComponent(colectores_B_modificar)
                    .addComponent(colectores_B_eliminar)
                    .addComponent(colectores_B_filtrarpor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane13, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jDesktopPane4.setLayer(jPanel4, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane4.setLayer(colectores_B_eliminar, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane4.setLayer(colectores_B_modificar, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane4.setLayer(colectores_B_registrar, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane4.setLayer(colectores_B_filtrarpor, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane4.setLayer(jScrollPane13, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jScrollPane11.setViewportView(jDesktopPane4);

        pestaña_colectores.add(jScrollPane11, java.awt.BorderLayout.CENTER);

        jTabbedPane1.addTab("COLECTORES", pestaña_colectores);

        pestaña_empresas.setLayout(new java.awt.BorderLayout());

        jDesktopPane5.setBackground(new java.awt.Color(255, 255, 255));

        jPanel7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel7.setOpaque(false);

        jPanel8.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        jPanel8.setOpaque(false);

        empresa_B_nueva.setFont(new java.awt.Font("Calibri Light", 0, 18)); // NOI18N
        empresa_B_nueva.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Utilidades/nuevo - empresa.png"))); // NOI18N
        empresa_B_nueva.setText("NUEVA");
        empresa_B_nueva.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                empresa_B_nuevaActionPerformed(evt);
            }
        });

        empresa_T_modificar.setFont(new java.awt.Font("Calibri Light", 0, 18)); // NOI18N
        empresa_T_modificar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Utilidades/Editar - Empresa.png"))); // NOI18N
        empresa_T_modificar.setText("MODIFICAR");
        empresa_T_modificar.setEnabled(false);
        empresa_T_modificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                empresa_T_modificarActionPerformed(evt);
            }
        });

        empresa_T_eliminar.setFont(new java.awt.Font("Calibri Light", 0, 18)); // NOI18N
        empresa_T_eliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Utilidades/Eliminar - Empresa.png"))); // NOI18N
        empresa_T_eliminar.setText("ELIMINAR");
        empresa_T_eliminar.setEnabled(false);
        empresa_T_eliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                empresa_T_eliminarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(empresa_B_nueva, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(empresa_T_modificar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(empresa_T_eliminar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(empresa_B_nueva)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(empresa_T_modificar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(empresa_T_eliminar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel9.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        jPanel9.setOpaque(false);

        empresa_T_telefono.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        empresa_T_telefono.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                empresa_T_telefonoFocusGained(evt);
            }
        });

        empresa_T_direccion.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        empresa_T_direccion.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                empresa_T_direccionFocusGained(evt);
            }
        });
        empresa_T_direccion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                empresa_T_direccionActionPerformed(evt);
            }
        });

        empresa_T_nombre.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        empresa_T_nombre.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                empresa_T_nombreFocusGained(evt);
            }
        });

        empresa_T_nit_empresa.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        empresa_T_nit_empresa.setEnabled(false);
        empresa_T_nit_empresa.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                empresa_T_nit_empresaFocusGained(evt);
            }
        });
        empresa_T_nit_empresa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                empresa_T_nit_empresaActionPerformed(evt);
            }
        });

        jLabel19.setFont(new java.awt.Font("Calibri Light", 0, 24)); // NOI18N
        jLabel19.setText("NIT_EMPRESA*");

        jLabel20.setFont(new java.awt.Font("Calibri Light", 0, 24)); // NOI18N
        jLabel20.setText("NOMBRE*");

        jLabel21.setFont(new java.awt.Font("Calibri Light", 0, 24)); // NOI18N
        jLabel21.setText("DIRECCION*");

        jLabel22.setFont(new java.awt.Font("Calibri Light", 0, 24)); // NOI18N
        jLabel22.setText("TELEFONO*");

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(empresa_T_direccion, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 293, Short.MAX_VALUE)
                    .addComponent(empresa_T_nombre, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(empresa_T_nit_empresa)
                    .addComponent(empresa_T_telefono))
                .addContainerGap())
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19)
                    .addComponent(empresa_T_nit_empresa, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20)
                    .addComponent(empresa_T_nombre, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel21)
                    .addComponent(empresa_T_direccion, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel22)
                    .addComponent(empresa_T_telefono, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(23, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(10, 10, 10))
        );

        empresa_Tabla.setFont(new java.awt.Font("Calibri Light", 0, 18)); // NOI18N
        empresa_Tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        empresa_Tabla.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                empresa_TablaMousePressed(evt);
            }
        });
        jScrollPane16.setViewportView(empresa_Tabla);

        javax.swing.GroupLayout jDesktopPane5Layout = new javax.swing.GroupLayout(jDesktopPane5);
        jDesktopPane5.setLayout(jDesktopPane5Layout);
        jDesktopPane5Layout.setHorizontalGroup(
            jDesktopPane5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDesktopPane5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jDesktopPane5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane16))
                .addContainerGap(560, Short.MAX_VALUE))
        );
        jDesktopPane5Layout.setVerticalGroup(
            jDesktopPane5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDesktopPane5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane16, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(256, Short.MAX_VALUE))
        );
        jDesktopPane5.setLayer(jPanel7, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane5.setLayer(jScrollPane16, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jScrollPane15.setViewportView(jDesktopPane5);

        pestaña_empresas.add(jScrollPane15, java.awt.BorderLayout.CENTER);

        jTabbedPane1.addTab("EMPRESAS", pestaña_empresas);

        javax.swing.GroupLayout pestaña_reportesLayout = new javax.swing.GroupLayout(pestaña_reportes);
        pestaña_reportes.setLayout(pestaña_reportesLayout);
        pestaña_reportesLayout.setHorizontalGroup(
            pestaña_reportesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1290, Short.MAX_VALUE)
        );
        pestaña_reportesLayout.setVerticalGroup(
            pestaña_reportesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 579, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("REPORTES", pestaña_reportes);

        javax.swing.GroupLayout pestaña_acerca_deLayout = new javax.swing.GroupLayout(pestaña_acerca_de);
        pestaña_acerca_de.setLayout(pestaña_acerca_deLayout);
        pestaña_acerca_deLayout.setHorizontalGroup(
            pestaña_acerca_deLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1290, Short.MAX_VALUE)
        );
        pestaña_acerca_deLayout.setVerticalGroup(
            pestaña_acerca_deLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 579, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("ACERCA DE ...", pestaña_acerca_de);

        jDesktopPane1.add(jTabbedPane1, java.awt.BorderLayout.CENTER);
        jTabbedPane1.setIconAt(1, new ImageIcon("Utilidades//Aguacate.jpg"));

        getContentPane().add(jDesktopPane1, java.awt.BorderLayout.CENTER);

        fileMenu.setMnemonic('f');
        fileMenu.setText("Archivo");

        openMenuItem.setMnemonic('o');
        openMenuItem.setText("Abrir");
        fileMenu.add(openMenuItem);

        saveMenuItem.setMnemonic('s');
        saveMenuItem.setText("Guardar");
        fileMenu.add(saveMenuItem);

        saveAsMenuItem.setMnemonic('a');
        saveAsMenuItem.setText("Guardar Como");
        fileMenu.add(saveAsMenuItem);

        exitMenuItem.setMnemonic('x');
        exitMenuItem.setText("Salir");
        exitMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(exitMenuItem);

        menuBar.add(fileMenu);

        editMenu.setMnemonic('e');
        editMenu.setText("Edit");

        cutMenuItem.setMnemonic('t');
        cutMenuItem.setText("Cortar");
        cutMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cutMenuItemActionPerformed(evt);
            }
        });
        editMenu.add(cutMenuItem);

        copyMenuItem.setMnemonic('y');
        copyMenuItem.setText("Copiar");
        editMenu.add(copyMenuItem);

        pasteMenuItem.setMnemonic('p');
        pasteMenuItem.setText("Pegar");
        editMenu.add(pasteMenuItem);

        deleteMenuItem.setMnemonic('d');
        deleteMenuItem.setText("Eliminar");
        editMenu.add(deleteMenuItem);

        menuBar.add(editMenu);

        helpMenu.setMnemonic('h');
        helpMenu.setText("Help");

        contentsMenuItem.setMnemonic('c');
        contentsMenuItem.setText("Comentarios");
        helpMenu.add(contentsMenuItem);

        aboutMenuItem.setMnemonic('a');
        aboutMenuItem.setText("Acerca de");
        helpMenu.add(aboutMenuItem);

        menuBar.add(helpMenu);
        menuBar.add(jMenu1);

        setJMenuBar(menuBar);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void exitMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitMenuItemActionPerformed
     System.exit(0);
    }//GEN-LAST:event_exitMenuItemActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened

        System.out.println("sonido reproducido");
        dm.setF_Ventana_Principal_Allto(this.getHeight());
         dm.setF_Ventana_Principal_Ancho(this.getWidth());
          Gestion_Usuarios gu =new Gestion_Usuarios();
         Usuarios usua= Inicio_Sesion.u;
         if (gu.ACTUALIZAR_TODO(usua)) {
             jMenu1.setText(usua.getNombre_De_Usuario());
            JOptionPane.showMessageDialog(this,"Bienvenido A CATTLEYA Sr(@) "+ usua.getNombre_De_Usuario());
            
        }

         
         
        
    }//GEN-LAST:event_formWindowOpened

    private void cutMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cutMenuItemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cutMenuItemActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
          Gestion_Usuarios gu =new Gestion_Usuarios();
         Usuarios usua= Inicio_Sesion.u;
         usua.setEstado_Sesion(0);
         gu.ACTUALIZAR_TODO(usua);

    }//GEN-LAST:event_formWindowClosing

    private void patornes_TA_observacionesKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_patornes_TA_observacionesKeyReleased
        int pos =patornes_TA_observaciones.getCaretPosition();
        patornes_TA_observaciones.setText(patornes_TA_observaciones.getText().toUpperCase());
        patornes_TA_observaciones.setCaretPosition(pos);
    }//GEN-LAST:event_patornes_TA_observacionesKeyReleased

    private void patornes_TA_observacionesKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_patornes_TA_observacionesKeyPressed
        if (evt.VK_ENTER==evt.getKeyCode()) {
            this.patrones_B_registrar.requestFocus();

        }
    }//GEN-LAST:event_patornes_TA_observacionesKeyPressed

    private void patornes_TA_observacionesFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_patornes_TA_observacionesFocusGained
        patornes_TA_observaciones.selectAll();        // TODO add your handling code here:
    }//GEN-LAST:event_patornes_TA_observacionesFocusGained

    private void patornes_T_alturaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_patornes_T_alturaKeyReleased
        CONVERSION_MAYUSCULAS(patornes_T_altura);
        // TODO add your handling code here:
    }//GEN-LAST:event_patornes_T_alturaKeyReleased

    private void patornes_T_alturaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_patornes_T_alturaKeyPressed
        if (evt.VK_ENTER==evt.getKeyCode()) {
            this.patornes_TA_observaciones.requestFocus();

        }
    }//GEN-LAST:event_patornes_T_alturaKeyPressed

    private void patornes_T_alturaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_patornes_T_alturaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_patornes_T_alturaActionPerformed

    private void patornes_T_alturaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_patornes_T_alturaFocusGained

        patornes_T_altura.selectAll();
    }//GEN-LAST:event_patornes_T_alturaFocusGained

    private void patornes_T_dapKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_patornes_T_dapKeyReleased
        CONVERSION_MAYUSCULAS(patornes_T_dap);
        // TODO add your handling code here:
    }//GEN-LAST:event_patornes_T_dapKeyReleased

    private void patornes_T_dapKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_patornes_T_dapKeyPressed
        if (evt.VK_ENTER==evt.getKeyCode()) {
            this.patornes_T_altura.requestFocus();

        }
    }//GEN-LAST:event_patornes_T_dapKeyPressed

    private void patornes_T_dapFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_patornes_T_dapFocusGained

        patornes_T_dap.selectAll();        // TODO add your handling code here:
    }//GEN-LAST:event_patornes_T_dapFocusGained

    private void patornes_T_especieKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_patornes_T_especieKeyReleased
        CONVERSION_MAYUSCULAS(patornes_T_especie);
        // TODO add your handling code here:
    }//GEN-LAST:event_patornes_T_especieKeyReleased

    private void patornes_T_especieKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_patornes_T_especieKeyPressed
        if (evt.VK_ENTER==evt.getKeyCode()) {
            this.patornes_T_dap.requestFocus();

        }
        // TODO add your handling code here:
    }//GEN-LAST:event_patornes_T_especieKeyPressed

    private void patornes_T_especieFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_patornes_T_especieFocusGained

        patornes_T_especie.selectAll();        // TODO add your handling code here:
    }//GEN-LAST:event_patornes_T_especieFocusGained

    private void patornes_T_generoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_patornes_T_generoKeyReleased
        CONVERSION_MAYUSCULAS(patornes_T_genero);
        // TODO add your handling code here:
    }//GEN-LAST:event_patornes_T_generoKeyReleased

    private void patornes_T_generoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_patornes_T_generoKeyPressed
        if (evt.VK_ENTER==evt.getKeyCode()) {
            this.patornes_T_especie.requestFocus();

        }
    }//GEN-LAST:event_patornes_T_generoKeyPressed

    private void patornes_T_generoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_patornes_T_generoFocusGained

        patornes_T_genero.selectAll();        // TODO add your handling code here:
    }//GEN-LAST:event_patornes_T_generoFocusGained

    private void patornes_T_altitudKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_patornes_T_altitudKeyReleased
        CONVERSION_MAYUSCULAS(patornes_T_altitud);
        // TODO add your handling code here:
    }//GEN-LAST:event_patornes_T_altitudKeyReleased

    private void patornes_T_altitudKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_patornes_T_altitudKeyPressed
        if (evt.VK_ENTER==evt.getKeyCode()) {
            this.patornes_T_genero.requestFocus();

        }
    }//GEN-LAST:event_patornes_T_altitudKeyPressed

    private void patornes_T_altitudFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_patornes_T_altitudFocusGained

        patornes_T_altitud.selectAll();
    }//GEN-LAST:event_patornes_T_altitudFocusGained

    private void patornes_T_longitudKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_patornes_T_longitudKeyReleased
        CONVERSION_MAYUSCULAS(patornes_T_longitud);
        // TODO add your handling code here:
    }//GEN-LAST:event_patornes_T_longitudKeyReleased

    private void patornes_T_longitudKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_patornes_T_longitudKeyPressed
        if (evt.VK_ENTER==evt.getKeyCode()) {
            this.patornes_T_altitud.requestFocus();

        }
    }//GEN-LAST:event_patornes_T_longitudKeyPressed

    private void patornes_T_longitudFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_patornes_T_longitudFocusGained

        patornes_T_longitud.selectAll();        // TODO add your handling code here:
    }//GEN-LAST:event_patornes_T_longitudFocusGained

    private void patornes_T_latitudKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_patornes_T_latitudKeyReleased
        CONVERSION_MAYUSCULAS(patornes_T_latitud);
        // TODO add your handling code here:
    }//GEN-LAST:event_patornes_T_latitudKeyReleased

    private void patornes_T_latitudKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_patornes_T_latitudKeyPressed
        if (evt.VK_ENTER==evt.getKeyCode()) {
            this.patornes_T_longitud.requestFocus();

        }
    }//GEN-LAST:event_patornes_T_latitudKeyPressed

    private void patornes_T_latitudFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_patornes_T_latitudFocusGained

        patornes_T_latitud.selectAll();        // TODO add your handling code here:
    }//GEN-LAST:event_patornes_T_latitudFocusGained

    private void patornes_T_fuente_coleciconKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_patornes_T_fuente_coleciconKeyReleased
        CONVERSION_MAYUSCULAS(patornes_T_fuente_colecicon);
        // TODO add your handling code here:
    }//GEN-LAST:event_patornes_T_fuente_coleciconKeyReleased

    private void patornes_T_fuente_coleciconKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_patornes_T_fuente_coleciconKeyPressed

        if (evt.VK_ENTER==evt.getKeyCode()) {
            this.patornes_T_latitud.requestFocus();

        }
    }//GEN-LAST:event_patornes_T_fuente_coleciconKeyPressed

    private void patornes_T_fuente_coleciconFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_patornes_T_fuente_coleciconFocusGained

        patornes_T_fuente_colecicon.selectAll();        // TODO add your handling code here:
    }//GEN-LAST:event_patornes_T_fuente_coleciconFocusGained

    private void patornes_T_estado_accesionKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_patornes_T_estado_accesionKeyReleased
        CONVERSION_MAYUSCULAS(patornes_T_estado_accesion);
        // TODO add your handling code here:
    }//GEN-LAST:event_patornes_T_estado_accesionKeyReleased

    private void patornes_T_estado_accesionKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_patornes_T_estado_accesionKeyPressed
        if (evt.VK_ENTER==evt.getKeyCode()) {
            this.patornes_T_fuente_colecicon.requestFocus();

        }
    }//GEN-LAST:event_patornes_T_estado_accesionKeyPressed

    private void patornes_T_estado_accesionFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_patornes_T_estado_accesionFocusGained

        patornes_T_estado_accesion.selectAll();        // TODO add your handling code here:
    }//GEN-LAST:event_patornes_T_estado_accesionFocusGained

    private void patornes_T_nombre_c_accesionKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_patornes_T_nombre_c_accesionKeyReleased
        CONVERSION_MAYUSCULAS(patornes_T_nombre_c_accesion);
    }//GEN-LAST:event_patornes_T_nombre_c_accesionKeyReleased

    private void patornes_T_nombre_c_accesionKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_patornes_T_nombre_c_accesionKeyPressed
        if (evt.VK_ENTER==evt.getKeyCode()) {
            this.patornes_T_estado_accesion.requestFocus();

        }
    }//GEN-LAST:event_patornes_T_nombre_c_accesionKeyPressed

    private void patornes_T_nombre_c_accesionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_patornes_T_nombre_c_accesionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_patornes_T_nombre_c_accesionActionPerformed

    private void patornes_T_nombre_c_accesionFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_patornes_T_nombre_c_accesionFocusGained
        patornes_T_nombre_c_accesion.selectAll();
    }//GEN-LAST:event_patornes_T_nombre_c_accesionFocusGained

    private void patornes_T_nombre_c_cultivoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_patornes_T_nombre_c_cultivoKeyReleased
        CONVERSION_MAYUSCULAS(patornes_T_nombre_c_cultivo);
    }//GEN-LAST:event_patornes_T_nombre_c_cultivoKeyReleased

    private void patornes_T_nombre_c_cultivoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_patornes_T_nombre_c_cultivoKeyPressed
        if (evt.VK_ENTER==evt.getKeyCode()) {
            this.patornes_T_nombre_c_accesion.requestFocus();

        }
    }//GEN-LAST:event_patornes_T_nombre_c_cultivoKeyPressed

    private void patornes_T_nombre_c_cultivoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_patornes_T_nombre_c_cultivoFocusGained
        patornes_T_nombre_c_cultivo.selectAll();
    }//GEN-LAST:event_patornes_T_nombre_c_cultivoFocusGained

    private void patornes_D_fechaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_patornes_D_fechaKeyPressed
        if (evt.VK_ENTER==evt.getKeyCode()) {
            this.patornes_T_nombre_c_cultivo.requestFocus();

        }
    }//GEN-LAST:event_patornes_D_fechaKeyPressed

    private void patornes_B_donanteKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_patornes_B_donanteKeyPressed
        if (evt.VK_ENTER==evt.getKeyCode()) {
          new D_Seleccion_Donante_Patrones(this, true).setVisible(true);

        }
    }//GEN-LAST:event_patornes_B_donanteKeyPressed

    private void patornes_B_donanteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_patornes_B_donanteActionPerformed
      D_Seleccion_Donante_Patrones dsdp=        new D_Seleccion_Donante_Patrones(this, true);
       dsdp.setLocationRelativeTo(this);
       dsdp.setVisible(true);
    }//GEN-LAST:event_patornes_B_donanteActionPerformed

    private void patornes_CB_departamentoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_patornes_CB_departamentoKeyPressed
        if (evt.VK_ENTER==evt.getKeyCode()) {
            this.patornes_D_fecha.requestFocus();

        }
    }//GEN-LAST:event_patornes_CB_departamentoKeyPressed

    private void patornes_CB_colectorKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_patornes_CB_colectorKeyPressed
        if (evt.VK_ENTER==evt.getKeyCode()) {
            this.patornes_B_donante.requestFocus();

        }
    }//GEN-LAST:event_patornes_CB_colectorKeyPressed

    private void patornes_T_fincaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_patornes_T_fincaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_patornes_T_fincaActionPerformed

    private void patornes_T_municipioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_patornes_T_municipioActionPerformed

    }//GEN-LAST:event_patornes_T_municipioActionPerformed

    private void patornes_T_cod_patronKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_patornes_T_cod_patronKeyPressed
        if (evt.VK_ENTER==evt.getKeyCode()) {
            this.patornes_CB_colector.requestFocus();

        }
    }//GEN-LAST:event_patornes_T_cod_patronKeyPressed

    private void patornes_T_cod_patronActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_patornes_T_cod_patronActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_patornes_T_cod_patronActionPerformed

    private void patrones_T_filtrarpatronesporKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_patrones_T_filtrarpatronesporKeyReleased
        Gestion_Patron gp= new Gestion_Patron();
        PATRONES_TEXTO=this.patrones_T_filtrarpatronespor.getText();
        this.patrones_tabla.setModel(gp.FILTRO(PATRONES_COLUMNAS, PATRONES_TEXTO));
    }//GEN-LAST:event_patrones_T_filtrarpatronesporKeyReleased

    private void patrones_T_filtrarpatronesporKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_patrones_T_filtrarpatronesporKeyPressed
        if (evt.VK_ENTER==evt.getKeyCode()) {
            this.patornes_CB_colector.requestFocus();

        }
    }//GEN-LAST:event_patrones_T_filtrarpatronesporKeyPressed

    private void patrones_RB_veredaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_patrones_RB_veredaActionPerformed
        this.patrones_T_filtrarpatronespor.setText("");
        this.patrones_T_filtrarpatronespor.requestFocus();
        PATRONES_COLUMNAS="vereda";
    }//GEN-LAST:event_patrones_RB_veredaActionPerformed

    private void patrones_RB_donantreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_patrones_RB_donantreActionPerformed
        this.patrones_T_filtrarpatronespor.setText("");
        this.patrones_T_filtrarpatronespor.requestFocus();
        PATRONES_COLUMNAS="nombre";
    }//GEN-LAST:event_patrones_RB_donantreActionPerformed

    private void patrones_B_limpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_patrones_B_limpiarActionPerformed
        PATRONES_LIMPIAR();
    }//GEN-LAST:event_patrones_B_limpiarActionPerformed

    private void patrones_B_eliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_patrones_B_eliminarActionPerformed
        if (this.patornes_T_cod_patron.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "SELECCIONE UN PATRON ");
        }else{

            Gestion_Patron gp = new Gestion_Patron();
            int opcion;
            opcion= JOptionPane.showConfirmDialog(this,"ESTA A PUNTO DE ELIMINAR UN PATRON!!!","ALERTA",JOptionPane.INFORMATION_MESSAGE);
            if (opcion==JOptionPane.YES_OPTION) {
                if (gp.ELIMINAR(this.patornes_T_cod_patron.getText())) {
                    JOptionPane.showMessageDialog(this,"PATRON ELIMINADO");
                    PATRONES_LIMPIAR();

                }

            }
        }
    }//GEN-LAST:event_patrones_B_eliminarActionPerformed

    private void patrones_B_actualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_patrones_B_actualizarActionPerformed
        ResultSet rs;
        Connection con = new Conexion().getCon();
        try {
            //            rs=con.createStatement().executeQuery("select copas.cod_copa,colectores.nombre,donante_copas.cod_donante,donante_copas.departamento,donante_copas.municipio,donante_copas.vereda,donante_copas.finca,copas.fecha_colecta,copas.nombre_c_cultivo,copas.nombre_c_accesion,copas.estado_accesion,copas.fuente_coleccion,copas.latitud,copas.longitud,copas.altitud,copas.genero,copas.especie,copas.d_a_p,copas.altura,copas.observaciones from copas inner join donante_copas on donante_copas.cod_donante=copas.cod_donante inner join colectores on colectores.identificacion_colector=copas.identificacion_colector group by  copas.cod_copa ;");
            rs=con.createStatement().executeQuery("select * from patrones;");
            if (rs.next()) {

                Patrones p = new Patrones();
                Gestion_Patron gp=new Gestion_Patron();
                if(this.patornes_CB_colector.getSelectedIndex()==0){
                    JOptionPane.showMessageDialog(this,"debe seleccionar un colector valido para actualizar");

                } else if (this.patornes_T_donante.getText().isEmpty()){
                    JOptionPane.showMessageDialog(this,"Seleccione al menos un donante valido para actualizacion");
                }
                else{

                    rs=con.createStatement().executeQuery("select identificacion_colector from colectores where nombre= '"+String.valueOf(this.patornes_CB_colector.getSelectedItem())+"';");
                    if (rs.next()) {
                        long identificacion_colector ;
                        identificacion_colector=rs.getLong(1);

                        p.setCod_Patron(Integer.parseInt(this.patornes_T_cod_patron.getText()));
                        p.setIdentificacion_colector(identificacion_colector);
                        p.setCod_Donante(this.patornes_T_donante.getText());
                        p.setFecha_Colecta(this.patornes_D_fecha.getDate());
                        p.setNombre_C_Cultivo(this.patornes_T_nombre_c_cultivo.getText());
                        p.setNombre_Comun_Accesion(this.patornes_T_nombre_c_accesion.getText());
                        p.setEstado_Accesion(this.patornes_T_estado_accesion.getText());
                        p.setFuente_Coleccion(this.patornes_T_fuente_colecicon.getText());
                        p.setLatitud(this.patornes_T_latitud.getText());
                        p.setLongitud(this.patornes_T_longitud.getText());
                        p.setAltitud(this.patornes_T_altitud.getText());
                        p.setGenero(this.patornes_T_genero.getText());
                        p.setEspecie(this.patornes_T_especie.getText());
                        p.setD_A_P(this.patornes_T_dap.getText());
                        p.setAltura(this.patornes_T_altura.getText());
                        p.setObservaciones(this.patornes_TA_observaciones.getText());
                        p.setEstado_Enlazado(Integer.parseInt(patornes_L_mostrar_numerodeenlaces.getText()));

                        if(gp.ACTUALIZAR(p)){
                            JOptionPane.showMessageDialog(this,"ACTUALIZACION EXITOSA");
                            PATRONES_LIMPIAR();

                        }
                    }

                }

            }

        } catch (SQLException ex) {
            Logger.getLogger(Accesador.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_patrones_B_actualizarActionPerformed

    private void patrones_B_registrarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_patrones_B_registrarKeyPressed
        if (evt.VK_ENTER==evt.getKeyCode()) {
            if (PATRONES_VALIDATE_SAVE()) {
                PATRONEES_SAVE();
            }
        }
    }//GEN-LAST:event_patrones_B_registrarKeyPressed

    private void patrones_B_registrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_patrones_B_registrarActionPerformed
        if (PATRONES_VALIDATE_SAVE()) {
            PATRONEES_SAVE();
        }
    }//GEN-LAST:event_patrones_B_registrarActionPerformed

    private void patrones_B_nuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_patrones_B_nuevoActionPerformed
        PATRONES_CARGAR_PROXIMMO_COD_PATRON();
    }//GEN-LAST:event_patrones_B_nuevoActionPerformed

    private void patrones_tablaMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_patrones_tablaMouseReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_patrones_tablaMouseReleased

    private void patrones_tablaMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_patrones_tablaMousePressed
        ResultSet rs;
        Connection con = new Conexion().getCon();
        try {
            rs=con.createStatement().executeQuery("select patrones.cod_patron,colectores.nombre,donante_patrones.cod_donante,donante_patrones.departamento,donante_patrones.municipio,donante_patrones.vereda,donante_patrones.finca,patrones.fecha_colecta,patrones.nombre_c_cultivo,patrones.nombre_c_accesion,patrones.estado_accesion,patrones.fuente_coleccion,patrones.latitud,patrones.longitud,patrones.altitud,patrones.genero,patrones.especie,patrones.d_a_p,patrones.altura,patrones.observaciones from patrones inner join donante_patrones on donante_patrones.cod_donante=patrones.cod_donante inner join colectores on colectores.identificacion_colector=patrones.identificacion_colector where  patrones.cod_patron ='"+((String.valueOf(this.patrones_tabla.getValueAt(this.patrones_tabla.getSelectedRow(),0))))+"';");
            if (rs.next()) {
                this.patornes_T_cod_patron.setText((String.valueOf(this.patrones_tabla.getValueAt(this.patrones_tabla.getSelectedRow(),0))));
                this.patornes_CB_colector.setSelectedItem(rs.getString(2));
                this.patornes_T_donante.setText(rs.getString(3));
                this.patornes_CB_departamento.setSelectedItem(rs.getString(4));
                this.patornes_T_municipio.setText(String.valueOf(rs.getString(5)));
                this.patornes_T_vereda.setText(rs.getString(6));
                this.patornes_T_finca.setText(rs.getString(7));
                this.patornes_D_fecha.setDate(rs.getDate(8));
                this.patornes_T_nombre_c_cultivo.setText(rs.getString(9));
                this.patornes_T_nombre_c_accesion.setText(rs.getString(10));
                this.patornes_T_estado_accesion.setText(rs.getString(11));
                this.patornes_T_fuente_colecicon.setText(rs.getString(12));
                this.patornes_T_latitud.setText(rs.getString(13));
                this.patornes_T_longitud.setText(rs.getString(14));
                this.patornes_T_altitud.setText(rs.getString(15));
                this.patornes_T_genero.setText(rs.getString(16));
                this.patornes_T_especie.setText(rs.getString(17));
                this.patornes_T_dap.setText(rs.getString(18));
                this.patornes_T_altura.setText(rs.getString(19));
                this.patornes_TA_observaciones.setText(rs.getString(20));
                this.patornes_L_mostrar_numerodeenlaces.setText(String.valueOf(patrones_tabla.getValueAt(patrones_tabla.getSelectedRow(), 10)));

            }

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this,"ERROR "+ ex);
        }
    }//GEN-LAST:event_patrones_tablaMousePressed

    private void copas_TA_observacionesKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_copas_TA_observacionesKeyReleased
        int pos=copas_TA_observaciones.getCaretPosition();
        copas_TA_observaciones.setText(copas_TA_observaciones.getText().toUpperCase());
        copas_TA_observaciones.setCaretPosition(pos);
    }//GEN-LAST:event_copas_TA_observacionesKeyReleased

    private void copas_TA_observacionesKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_copas_TA_observacionesKeyPressed
        if (evt.VK_ENTER==evt.getKeyCode()) {
            this.copas_b_guardar.requestFocus();

        }
    }//GEN-LAST:event_copas_TA_observacionesKeyPressed

    private void copas_TA_observacionesFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_copas_TA_observacionesFocusGained

        copas_TA_observaciones.selectAll();        // TODO add your handling code here:
    }//GEN-LAST:event_copas_TA_observacionesFocusGained

    private void copas_T_generoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_copas_T_generoKeyReleased
        CONVERSION_MAYUSCULAS(copas_T_genero);
        // TODO add your handling code here:
    }//GEN-LAST:event_copas_T_generoKeyReleased

    private void copas_T_generoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_copas_T_generoKeyPressed
        if (evt.VK_ENTER==evt.getKeyCode()) {
            this.copas_T_especie.requestFocus();

        }
    }//GEN-LAST:event_copas_T_generoKeyPressed

    private void copas_T_generoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_copas_T_generoFocusGained

        copas_T_genero.selectAll();        // TODO add your handling code here:
    }//GEN-LAST:event_copas_T_generoFocusGained

    private void copas_T_especieKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_copas_T_especieKeyReleased
        CONVERSION_MAYUSCULAS(copas_T_especie);
        // TODO add your handling code here:
    }//GEN-LAST:event_copas_T_especieKeyReleased

    private void copas_T_especieKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_copas_T_especieKeyPressed
        if (evt.VK_ENTER==evt.getKeyCode()) {
            this.copas_T_dap.requestFocus();

        }
        // TODO add your handling code here:
    }//GEN-LAST:event_copas_T_especieKeyPressed

    private void copas_T_especieFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_copas_T_especieFocusGained

        copas_T_especie.selectAll();        // TODO add your handling code here:
    }//GEN-LAST:event_copas_T_especieFocusGained

    private void copas_T_altitudKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_copas_T_altitudKeyReleased
        CONVERSION_MAYUSCULAS(copas_T_altitud);
    }//GEN-LAST:event_copas_T_altitudKeyReleased

    private void copas_T_altitudKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_copas_T_altitudKeyPressed
        if (evt.VK_ENTER==evt.getKeyCode()) {
            this.copas_T_genero.requestFocus();

        }
    }//GEN-LAST:event_copas_T_altitudKeyPressed

    private void copas_T_altitudFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_copas_T_altitudFocusGained

        copas_T_altitud.selectAll();
    }//GEN-LAST:event_copas_T_altitudFocusGained

    private void copas_T_alturaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_copas_T_alturaKeyReleased
        CONVERSION_MAYUSCULAS(copas_T_altura);
        // TODO add your handling code here:
    }//GEN-LAST:event_copas_T_alturaKeyReleased

    private void copas_T_alturaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_copas_T_alturaKeyPressed
        if (evt.VK_ENTER==evt.getKeyCode()) {
            this.copas_TA_observaciones.requestFocus();

        }
    }//GEN-LAST:event_copas_T_alturaKeyPressed

    private void copas_T_alturaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_copas_T_alturaFocusGained

        copas_T_altura.selectAll();
    }//GEN-LAST:event_copas_T_alturaFocusGained

    private void copas_T_dapKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_copas_T_dapKeyReleased
        CONVERSION_MAYUSCULAS(copas_T_dap);
        // TODO add your handling code here:
    }//GEN-LAST:event_copas_T_dapKeyReleased

    private void copas_T_dapKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_copas_T_dapKeyPressed
        if (evt.VK_ENTER==evt.getKeyCode()) {
            this.copas_T_altura.requestFocus();

        }
    }//GEN-LAST:event_copas_T_dapKeyPressed

    private void copas_T_dapFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_copas_T_dapFocusGained

        copas_T_dap.selectAll();        // TODO add your handling code here:
    }//GEN-LAST:event_copas_T_dapFocusGained

    private void copas_DT_fechaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_copas_DT_fechaKeyPressed
        if (evt.VK_ENTER==evt.getKeyCode()) {
            this.copas_T_nombrecultivo.requestFocus();

        }
    }//GEN-LAST:event_copas_DT_fechaKeyPressed

    private void copas_T_longitudKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_copas_T_longitudKeyReleased
        CONVERSION_MAYUSCULAS(copas_T_longitud);
    }//GEN-LAST:event_copas_T_longitudKeyReleased

    private void copas_T_longitudKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_copas_T_longitudKeyPressed
        if (evt.VK_ENTER==evt.getKeyCode()) {
            this.copas_T_altitud.requestFocus();

        }
    }//GEN-LAST:event_copas_T_longitudKeyPressed

    private void copas_T_longitudFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_copas_T_longitudFocusGained

        copas_T_longitud.selectAll();        // TODO add your handling code here:
    }//GEN-LAST:event_copas_T_longitudFocusGained

    private void copas_T_latitudKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_copas_T_latitudKeyReleased
        CONVERSION_MAYUSCULAS(copas_T_latitud);
    }//GEN-LAST:event_copas_T_latitudKeyReleased

    private void copas_T_latitudKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_copas_T_latitudKeyPressed
        if (evt.VK_ENTER==evt.getKeyCode()) {
            this.copas_T_longitud.requestFocus();

        }
    }//GEN-LAST:event_copas_T_latitudKeyPressed

    private void copas_T_latitudFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_copas_T_latitudFocusGained

        copas_T_latitud.selectAll();        // TODO add your handling code here:
    }//GEN-LAST:event_copas_T_latitudFocusGained

    private void copas_T_fuentecoleccionKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_copas_T_fuentecoleccionKeyReleased
        CONVERSION_MAYUSCULAS(copas_T_fuentecoleccion);
    }//GEN-LAST:event_copas_T_fuentecoleccionKeyReleased

    private void copas_T_fuentecoleccionKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_copas_T_fuentecoleccionKeyPressed

        if (evt.VK_ENTER==evt.getKeyCode()) {
            this.copas_T_latitud.requestFocus();

        }
    }//GEN-LAST:event_copas_T_fuentecoleccionKeyPressed

    private void copas_T_fuentecoleccionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_copas_T_fuentecoleccionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_copas_T_fuentecoleccionActionPerformed

    private void copas_T_fuentecoleccionFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_copas_T_fuentecoleccionFocusGained

        copas_T_fuentecoleccion.selectAll();        // TODO add your handling code here:
    }//GEN-LAST:event_copas_T_fuentecoleccionFocusGained

    private void copas_T_estadoaccesionKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_copas_T_estadoaccesionKeyReleased
        CONVERSION_MAYUSCULAS(copas_T_estadoaccesion);
    }//GEN-LAST:event_copas_T_estadoaccesionKeyReleased

    private void copas_T_estadoaccesionKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_copas_T_estadoaccesionKeyPressed
        if (evt.VK_ENTER==evt.getKeyCode()) {
            this.copas_T_fuentecoleccion.requestFocus();

        }
    }//GEN-LAST:event_copas_T_estadoaccesionKeyPressed

    private void copas_T_estadoaccesionFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_copas_T_estadoaccesionFocusGained

        copas_T_estadoaccesion.selectAll();        // TODO add your handling code here:
    }//GEN-LAST:event_copas_T_estadoaccesionFocusGained

    private void copas_T_nombreaccesionKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_copas_T_nombreaccesionKeyReleased
        CONVERSION_MAYUSCULAS(copas_T_nombreaccesion);
    }//GEN-LAST:event_copas_T_nombreaccesionKeyReleased

    private void copas_T_nombreaccesionKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_copas_T_nombreaccesionKeyPressed
        if (evt.VK_ENTER==evt.getKeyCode()) {
            this.copas_T_estadoaccesion.requestFocus();

        }
    }//GEN-LAST:event_copas_T_nombreaccesionKeyPressed

    private void copas_T_nombreaccesionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_copas_T_nombreaccesionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_copas_T_nombreaccesionActionPerformed

    private void copas_T_nombreaccesionFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_copas_T_nombreaccesionFocusGained
        copas_T_nombreaccesion.selectAll();
    }//GEN-LAST:event_copas_T_nombreaccesionFocusGained

    private void copas_T_nombrecultivoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_copas_T_nombrecultivoKeyReleased

        CONVERSION_MAYUSCULAS(copas_T_nombrecultivo);
    }//GEN-LAST:event_copas_T_nombrecultivoKeyReleased

    private void copas_T_nombrecultivoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_copas_T_nombrecultivoKeyPressed
        if (evt.VK_ENTER==evt.getKeyCode()) {
            this.copas_T_nombreaccesion.requestFocus();

        }
    }//GEN-LAST:event_copas_T_nombrecultivoKeyPressed

    private void copas_T_nombrecultivoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_copas_T_nombrecultivoFocusGained
        copas_T_nombrecultivo.selectAll();
    }//GEN-LAST:event_copas_T_nombrecultivoFocusGained

    private void copas_B_donanteKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_copas_B_donanteKeyPressed
        if (evt.VK_ENTER==evt.getKeyCode()) {
         new D_Seleccion_Donante_Copas(this, true).setVisible(true);

        }
    }//GEN-LAST:event_copas_B_donanteKeyPressed

    private void copas_B_donanteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_copas_B_donanteActionPerformed
       D_Seleccion_Donante_Copas dsdc=  new D_Seleccion_Donante_Copas(this, true);
        dsdc.setLocationRelativeTo(this);
       dsdc.setVisible(true);
    }//GEN-LAST:event_copas_B_donanteActionPerformed

    private void copas_CB_departamentoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_copas_CB_departamentoKeyPressed
        if (evt.VK_ENTER==evt.getKeyCode()) {
            this.copas_DT_fecha.requestFocus();

        }
    }//GEN-LAST:event_copas_CB_departamentoKeyPressed

    private void copas_CB_colectorKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_copas_CB_colectorKeyPressed
        if (evt.VK_ENTER==evt.getKeyCode()) {
            this.copas_B_donante.requestFocus();

        }
    }//GEN-LAST:event_copas_CB_colectorKeyPressed

    private void copas_T_fincaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_copas_T_fincaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_copas_T_fincaActionPerformed

    private void copas_T_municipioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_copas_T_municipioActionPerformed

    }//GEN-LAST:event_copas_T_municipioActionPerformed

    private void copas_T_codcopaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_copas_T_codcopaKeyPressed
        if (evt.VK_ENTER==evt.getKeyCode()) {
            this.copas_CB_colector.requestFocus();

        }
    }//GEN-LAST:event_copas_T_codcopaKeyPressed

    private void copas_T_codcopaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_copas_T_codcopaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_copas_T_codcopaActionPerformed

    private void copas_t_filtrar_copas_porKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_copas_t_filtrar_copas_porKeyReleased
        Gestion_Copa gc= new Gestion_Copa();
        COPAS_TEXTO=this.copas_t_filtrar_copas_por.getText();
        this.copa_tabla.setModel(gc.FILTRO(COPAS_COLUMNAS,  COPAS_TEXTO));
    }//GEN-LAST:event_copas_t_filtrar_copas_porKeyReleased

    private void copas_rsdiobuton_veredaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_copas_rsdiobuton_veredaActionPerformed
        this.copas_t_filtrar_copas_por.setText("");
        this.copas_t_filtrar_copas_por.requestFocus();
        COPAS_COLUMNAS="vereda";
    }//GEN-LAST:event_copas_rsdiobuton_veredaActionPerformed

    private void copas_radio_b_donanteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_copas_radio_b_donanteActionPerformed
        this.copas_t_filtrar_copas_por.setText("");
        this.copas_t_filtrar_copas_por.requestFocus();
        COPAS_COLUMNAS="nombre";
    }//GEN-LAST:event_copas_radio_b_donanteActionPerformed

    private void copas_b_limpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_copas_b_limpiarActionPerformed
        COPAS_LIMPIAR();
    }//GEN-LAST:event_copas_b_limpiarActionPerformed

    private void copas_b_eliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_copas_b_eliminarActionPerformed

        if (this.copas_T_codcopa.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "SELECCIONE UNA COPA ");
        }else{

            Gestion_Copa gc = new Gestion_Copa();
            int opcion;
            opcion= JOptionPane.showConfirmDialog(this,"ESTA A PUNTO DE ELIMINAR UNA COPA!!!","ALERTA",JOptionPane.INFORMATION_MESSAGE);
            if (opcion==JOptionPane.YES_OPTION) {
                if (gc.ELIMINAR(this.copas_T_codcopa.getText())) {
                    JOptionPane.showMessageDialog(this,"COPA ELIMINADA");
                    COPAS_LIMPIAR();

                }

            }
        }
    }//GEN-LAST:event_copas_b_eliminarActionPerformed

    private void copas_b_actualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_copas_b_actualizarActionPerformed
        if (COPAS_VALIDATE_UPDATE()) {
            COPAS_UPDATE();
        }
    }//GEN-LAST:event_copas_b_actualizarActionPerformed

    private void copas_b_guardarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_copas_b_guardarKeyPressed
        if (evt.VK_ENTER==evt.getKeyCode()) {

            if (COPAS_VALIDATE_SAVE()) {
                COPAS_SAVE();
            }
        }
    }//GEN-LAST:event_copas_b_guardarKeyPressed

    private void copas_b_guardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_copas_b_guardarActionPerformed
        if (COPAS_VALIDATE_SAVE()) {
            COPAS_SAVE();
        }
    }//GEN-LAST:event_copas_b_guardarActionPerformed

    private void copas_b_nuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_copas_b_nuevoActionPerformed
        COPAS_CARGAR_PROXIMMO_COD_COPA();
    }//GEN-LAST:event_copas_b_nuevoActionPerformed

    private void copa_tablaMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_copa_tablaMousePressed
        COPAS_CARGARTABLA();
    }//GEN-LAST:event_copa_tablaMousePressed

    private void donante_tablaMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_donante_tablaMousePressed
        DONANTE_CARGAR_TABLA();
    }//GEN-LAST:event_donante_tablaMousePressed

    private void donante_ta_observacionesKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_donante_ta_observacionesKeyReleased
        int pos = donante_ta_observaciones.getCaretPosition();
        donante_ta_observaciones.setText(donante_ta_observaciones.getText().toUpperCase());
        donante_ta_observaciones.setCaretPosition(pos);
    }//GEN-LAST:event_donante_ta_observacionesKeyReleased

    private void donante_l_limpiarcamposMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_donante_l_limpiarcamposMousePressed
        DONANTE_LIMPIAR();
    }//GEN-LAST:event_donante_l_limpiarcamposMousePressed

    private void donante_l_limpiarcamposMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_donante_l_limpiarcamposMouseEntered

    }//GEN-LAST:event_donante_l_limpiarcamposMouseEntered

    private void donante_b_eliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_donante_b_eliminarActionPerformed
        if (DONANTE_VALIDAR_ELIMINAR()) {
            DONANTE_ELIMINAR();
        }
    }//GEN-LAST:event_donante_b_eliminarActionPerformed

    private void donante_b_modificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_donante_b_modificarActionPerformed
        if (DONANTE_VALIDAR_ACTUALIZAR()) {
            DONANTE_ACTUALIZAR();
        }
    }//GEN-LAST:event_donante_b_modificarActionPerformed

    private void donante_b_registrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_donante_b_registrarActionPerformed
        if (DONANTE_VALIDAR_GURDAR()) {
            DONANTE_GUARDAR();
        }
    }//GEN-LAST:event_donante_b_registrarActionPerformed

    private void donante_t_fincaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_donante_t_fincaKeyReleased
        CONVERSION_MAYUSCULAS(donante_t_finca);
    }//GEN-LAST:event_donante_t_fincaKeyReleased

    private void donante_t_veredaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_donante_t_veredaKeyReleased
        CONVERSION_MAYUSCULAS(donante_t_vereda);
    }//GEN-LAST:event_donante_t_veredaKeyReleased

    private void donante_t_municipioKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_donante_t_municipioKeyReleased
        CONVERSION_MAYUSCULAS(donante_t_municipio);
    }//GEN-LAST:event_donante_t_municipioKeyReleased

    private void donante_t_municipioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_donante_t_municipioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_donante_t_municipioActionPerformed

    private void donante_t_direccionKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_donante_t_direccionKeyReleased
        CONVERSION_MAYUSCULAS(donante_t_direccion);
    }//GEN-LAST:event_donante_t_direccionKeyReleased

    private void donante_t_telefonoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_donante_t_telefonoKeyReleased

    }//GEN-LAST:event_donante_t_telefonoKeyReleased

    private void donante_t_nombreKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_donante_t_nombreKeyReleased
        CONVERSION_MAYUSCULAS(donante_t_nombre);
    }//GEN-LAST:event_donante_t_nombreKeyReleased

    private void donante_cb_empresaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_donante_cb_empresaKeyReleased

    }//GEN-LAST:event_donante_cb_empresaKeyReleased

    private void donante_cb_empresaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_donante_cb_empresaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_donante_cb_empresaActionPerformed

    private void donante_t_codigoPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_donante_t_codigoPropertyChange

    }//GEN-LAST:event_donante_t_codigoPropertyChange

    private void donante_t_codigoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_donante_t_codigoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_donante_t_codigoActionPerformed

    private void donante_t_codigoComponentAdded(java.awt.event.ContainerEvent evt) {//GEN-FIRST:event_donante_t_codigoComponentAdded

        // TODO add your handling code here:
    }//GEN-LAST:event_donante_t_codigoComponentAdded

    private void Inicio_Tabla1MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Inicio_Tabla1MouseReleased

    }//GEN-LAST:event_Inicio_Tabla1MouseReleased

    private void Inicio_Tabla1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Inicio_Tabla1MousePressed
        if (Inicio_Tabla1.getSelectedColumn()!=-1) {
            Inicio_T_n_nombre.setText(String.valueOf(Inicio_Tabla1.getValueAt(Inicio_Tabla1.getSelectedRow(),2)));
            Inicio_L_cod_control.setText(""+String.valueOf(Inicio_Tabla1.getValueAt(Inicio_Tabla1.getSelectedRow(),0)));

        }
    }//GEN-LAST:event_Inicio_Tabla1MousePressed

    private void Inicio_Tabla1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_Inicio_Tabla1FocusGained

    }//GEN-LAST:event_Inicio_Tabla1FocusGained

    private void Inicio_jradio_patronActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Inicio_jradio_patronActionPerformed

        Inicio_T_filtro.setEnabled(true);

        INICIO_COLUMNA="donante_patrones.nombre";
    }//GEN-LAST:event_Inicio_jradio_patronActionPerformed

    private void Inicio_jradio_copaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Inicio_jradio_copaActionPerformed
        Inicio_T_filtro.setEnabled(true);

        INICIO_COLUMNA="donante_copas.nombre";
    }//GEN-LAST:event_Inicio_jradio_copaActionPerformed

    private void Inicio_jradio_veredaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Inicio_jradio_veredaActionPerformed

        Inicio_T_filtro.setEnabled(true);
        INICIO_COLUMNA="arboles.VEREDA";
    }//GEN-LAST:event_Inicio_jradio_veredaActionPerformed

    private void Inicio_T_filtroKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Inicio_T_filtroKeyReleased
        Gestion_Arboles ga =new Gestion_Arboles();
        INICIO_TEXTO=Inicio_T_filtro.getText();
        this.Inicio_Tabla1.setModel(ga.FILTRO(INICIO_COLUMNA, INICIO_TEXTO));
        ga.AJUSTARCOLUMNAS(Inicio_Tabla1);
    }//GEN-LAST:event_Inicio_T_filtroKeyReleased

    private void Inicio_B_limpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Inicio_B_limpiarActionPerformed

        INICIO_REFRESCAR();
       
       
    }//GEN-LAST:event_Inicio_B_limpiarActionPerformed

    private void Inicio_B_cargar_informacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Inicio_B_cargar_informacionActionPerformed
        if (Inicio_L_cod_control.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this,"DEBE SELECCIONAR UN ARBOL PARA CARGAR SU INFORMACION","NO VALIDO",JOptionPane.INFORMATION_MESSAGE);
        }else{

            ResultSet rs;
            Connection Con = new Conexion().getCon();
            try {
                rs= Con.createStatement().executeQuery("select * from arboles where cod_control='"+Inicio_L_cod_control.getText()+"';");
                if (rs.next()) {
                    arbol_L_muestra_codigo.setText(Inicio_L_cod_control.getText());
                    String cod_beneficiario=rs.getString("IDENTIFICACION_CULTIVADOR");
                    INICIO_NUMEROS(rs.getString("cod_copa"));
                    arbol_T_cod_copa.setText(longitud+rs.getString("cod_copa"));
                    INICIO_NUMEROS(rs.getString("cod_patron"));
                    arbol_T_cod_patron.setText (longitud+rs.getString("cod_patron"));
                    arbol_T_codiigo_arbol.setText(rs.getString("cod_arbol"));
                    arbol_CB_departamento.setSelectedItem(rs.getString("departamento"));
                    arbol_T_municipio.setText(rs.getString("municipio"));
                    arbol_T_vereda.setText(rs.getString("vereda"));
                   arbol_T_finca.setText(rs.getString("finca"));
                    arbol_T_latitud.setText(rs.getString("latitud"));
                    arbol_T_longitud.setText(rs.getString("longitud"));
                    arbol_T_altitud.setText(rs.getString("altitud"));
                    arbol_Ta_observacion.setText(rs.getString("observaciones"));

                    rs=Con.createStatement().executeQuery("select colectores.nombre, donante_copas.nombre from copas  inner join colectores on colectores.identificacion_colector=copas.identificacion_colector inner join donante_copas on donante_copas.cod_donante=copas.cod_donante where copas.cod_copa= "+arbol_T_cod_copa.getText()+";");
                    if (rs.next()) {
                        arbol_T_colector_copa.setText(rs.getString(1));
                        arbol_T_donante_copa.setText(rs.getString(2));

                    }else{
                        JOptionPane.showMessageDialog(this,"ERROR CON LA COPA");
                    }
                    rs=Con.createStatement().executeQuery("select colectores.nombre, donante_patrones.nombre from patrones  inner join colectores on colectores.identificacion_colector=patrones.identificacion_colector inner join donante_patrones on donante_patrones.cod_donante=patrones.cod_donante where cod_patron= "+arbol_T_cod_patron.getText()+";");
                    if (rs.next()) {
                        arbol_T_colector_patron.setText(rs.getString(1));
                        arbol_T_donante_patron.setText(rs.getString(2));

                    }else{
                        JOptionPane.showMessageDialog(this,"ERROR CON EL PATRON");
                    }

                    rs=Con.createStatement().executeQuery("select nombre from beneficiarios where identificacion_cultivador= "+cod_beneficiario+";");
                    if (rs.next()) {
                        arbol_CB_beneficiario.setSelectedItem(rs.getString(1));

                    }else{
                        JOptionPane.showMessageDialog(this,"ERROR CON EL BENEFICIARIO");
                    }

                }
              jTabbedPane1.setSelectedComponent(pestaña_resgistro_arbol);
            } catch (SQLException ex) {
                Logger.getLogger(Vista.Accesador.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        
    }//GEN-LAST:event_Inicio_B_cargar_informacionActionPerformed

    private void Inicio_T_n_nombreKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Inicio_T_n_nombreKeyReleased
        Gestion_Arboles ga = new Gestion_Arboles();
        this.Inicio_Tabla1.setModel(ga.FILTRO("arboles.cod_arbol",Inicio_T_n_nombre.getText()));
        ga.AJUSTARCOLUMNAS(Inicio_Tabla1);
    }//GEN-LAST:event_Inicio_T_n_nombreKeyReleased

    private void Inicio_T_n_nombreKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Inicio_T_n_nombreKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_Inicio_T_n_nombreKeyPressed

    private void Inicio_T_n_nombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Inicio_T_n_nombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Inicio_T_n_nombreActionPerformed

    private void arbol_T_municipioKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_arbol_T_municipioKeyReleased
        CONVERSION_MAYUSCULAS(arbol_T_municipio);
    }//GEN-LAST:event_arbol_T_municipioKeyReleased

    private void arbol_T_veredaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_arbol_T_veredaKeyReleased
        CONVERSION_MAYUSCULAS(arbol_T_vereda);
    }//GEN-LAST:event_arbol_T_veredaKeyReleased

    private void arbol_T_fincaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_arbol_T_fincaKeyReleased
        CONVERSION_MAYUSCULAS(arbol_T_finca);
    }//GEN-LAST:event_arbol_T_fincaKeyReleased

    private void arbol_Ta_observacionKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_arbol_Ta_observacionKeyReleased
        int pos = arbol_Ta_observacion.getCaretPosition();
        arbol_Ta_observacion.setText(arbol_Ta_observacion.getText().toUpperCase());
        arbol_Ta_observacion.setCaretPosition(pos);

    }//GEN-LAST:event_arbol_Ta_observacionKeyReleased

    private void arbol_B_registrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_arbol_B_registrarActionPerformed
        if (ARBOL_VALIDAR_GUARDAR()) {
            ARBOL_GUARDAR();
        }

    }//GEN-LAST:event_arbol_B_registrarActionPerformed

    private void arbol_B_registrarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_arbol_B_registrarKeyPressed

    }//GEN-LAST:event_arbol_B_registrarKeyPressed

    private void arbol_B_actualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_arbol_B_actualizarActionPerformed
        if (ARBOL_VALIDAR_ACTUALIZAR()) {
            ARBOL_ACTUALIZAR();
        }

    }//GEN-LAST:event_arbol_B_actualizarActionPerformed

    private void arbol_B_eliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_arbol_B_eliminarActionPerformed
        if (arbol_L_muestra_codigo.getText().isEmpty()) {

            JOptionPane.showMessageDialog(this,"PRIMERO DEBE SELECCIONAR UN USUARIO PARA LUEGO ELIMINARLO","ERROR",JOptionPane.ERROR_MESSAGE);

        }else{
            Gestion_Arboles ga = new Gestion_Arboles();
            int opcion;
            opcion= JOptionPane.showConfirmDialog(this,"ESTA A PUNTO DE ELIMINAR UN ARBOL!!!","ALERTA",JOptionPane.WARNING_MESSAGE);
            if (opcion==JOptionPane.YES_OPTION) {
                if (ga.ELIMINAR(Integer.parseInt(arbol_L_muestra_codigo.getText()))) {
                    ga.updateenlacescopa(Integer.parseInt(arbol_T_cod_copa.getText()));
                    ga.updateenlacespatron(Integer.parseInt(arbol_T_cod_patron.getText()));
                    JOptionPane.showMessageDialog(this,"ARBOL ELIMINADO","FINALIZAR",JOptionPane.INFORMATION_MESSAGE);
                    ARBOLES_LIMPIAR_CAMPOS();
                }
            }
        }
    }//GEN-LAST:event_arbol_B_eliminarActionPerformed

    private void arbol_B_limpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_arbol_B_limpiarActionPerformed

        Gestion_Arboles ga= new Gestion_Arboles();
        ARBOLES_LIMPIAR_CAMPOS();

    }//GEN-LAST:event_arbol_B_limpiarActionPerformed

    private void arbol_B_cod_copaMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_arbol_B_cod_copaMousePressed

    }//GEN-LAST:event_arbol_B_cod_copaMousePressed

    private void arbol_B_cod_copaMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_arbol_B_cod_copaMouseReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_arbol_B_cod_copaMouseReleased

    private void arbol_B_cod_copaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_arbol_B_cod_copaActionPerformed

        new D_Seleccion_Copa(this, true).setVisible(true);

        if (!(arbol_T_cod_copa.getText().isEmpty())&&!(arbol_T_cod_patron.getText().isEmpty())) {
            arbol_T_codiigo_arbol.setText("C"+arbol_T_cod_copa.getText()+" - "+"P"+arbol_T_cod_patron.getText());
        }
    }//GEN-LAST:event_arbol_B_cod_copaActionPerformed

    private void arbol_B_ver_informacion_copaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_arbol_B_ver_informacion_copaActionPerformed
        if (arbol_T_cod_copa.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this,"SELECCIONE AL MENOS UNA COPA PARA PODER EDITARLA","ERROR",JOptionPane.INFORMATION_MESSAGE);
        }else {
            ResultSet rs;Connection Con =new Conexion().getCon();
            try {
                rs=Con.createStatement().executeQuery("select copas.cod_copa,colectores.nombre,donante_copas.cod_donante,donante_copas.departamento,donante_copas.municipio,donante_copas.vereda,donante_copas.finca,copas.fecha_colecta,copas.nombre_c_cultivo,copas.nombre_c_accesion,copas.estado_accesion,copas.fuente_coleccion,copas.latitud,copas.longitud,copas.altitud,copas.genero,copas.especie,copas.d_a_p,copas.altura,copas.observaciones,copas.estado_enlazado,donante_copas.nombre from copas inner join donante_copas on donante_copas.cod_donante=copas.cod_donante inner join colectores on colectores.identificacion_colector=copas.identificacion_colector where  copas.cod_copa ="+arbol_T_cod_copa.getText()+";");
                if (rs.next()) {
                    copas_T_codcopa.setText(arbol_T_cod_copa.getText());
                    copas_CB_colector.setSelectedItem(rs.getString(2));
                    copas_T_donante.setText(rs.getString(3));
                    copas_CB_departamento.setSelectedItem(rs.getString(4));
                    copas_T_municipio.setText(String.valueOf(rs.getString(5)));
                    copas_T_vereda.setText(rs.getString(6));
                    copas_T_finca.setText(rs.getString(7));
                    copas_DT_fecha.setDate(rs.getDate(8));
                    copas_T_nombrecultivo.setText(rs.getString(9));
                    copas_T_nombreaccesion.setText(rs.getString(10));
                    copas_T_estadoaccesion.setText(rs.getString(11));
                    copas_T_fuentecoleccion.setText(rs.getString(12));
                    copas_T_latitud.setText(rs.getString(13));
                    copas_T_longitud.setText(rs.getString(14));
                    copas_T_altitud.setText(rs.getString(15));
                    copas_T_genero.setText(rs.getString(16));
                    copas_T_especie.setText(rs.getString(17));
                    copas_T_dap.setText(rs.getString(18));
                    copas_T_altura.setText(rs.getString(19));
                    copas_TA_observaciones.setText(rs.getString(20));
                    copas_L_muestraenlacescopa.setText(rs.getString(21));
                    jTabbedPane1.setSelectedComponent(pestaña_copas);
                    

                }
            } catch (SQLException ex) {
                Logger.getLogger(Accesador.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_arbol_B_ver_informacion_copaActionPerformed

    private void arbol_B_cod_patronMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_arbol_B_cod_patronMousePressed

        // TODO add your handling code here:
    }//GEN-LAST:event_arbol_B_cod_patronMousePressed

    private void arbol_B_cod_patronMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_arbol_B_cod_patronMouseReleased

    }//GEN-LAST:event_arbol_B_cod_patronMouseReleased

    private void arbol_B_cod_patronActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_arbol_B_cod_patronActionPerformed

        new D_Seleccion_Patron(this, true).setVisible(true);
        if (!(arbol_T_cod_copa.getText().isEmpty())&&!(arbol_T_cod_patron.getText().isEmpty())) {
            arbol_T_codiigo_arbol.setText("C"+arbol_T_cod_copa.getText()+" - "+"P"+arbol_T_cod_patron.getText());
        }

    }//GEN-LAST:event_arbol_B_cod_patronActionPerformed

    private void arbol_B_ver_informacion_patronActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_arbol_B_ver_informacion_patronActionPerformed
        if (arbol_T_cod_patron.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this,"SELECCIONE AL MENOS UN PATRON PARA PODER EDITARLO","ERROR",JOptionPane.INFORMATION_MESSAGE);
        }else {
            ResultSet rs;Connection Con =new Conexion().getCon();
            try {
                rs=Con.createStatement().executeQuery("select patrones.cod_patron,colectores.nombre,donante_patrones.cod_donante,donante_patrones.departamento,donante_patrones.municipio,donante_patrones.vereda,donante_patrones.finca,patrones.fecha_colecta,patrones.nombre_c_cultivo,patrones.nombre_c_accesion,patrones.estado_accesion,patrones.fuente_coleccion,patrones.latitud,patrones.longitud,patrones.altitud,patrones.genero,patrones.especie,patrones.d_a_p,patrones.altura,patrones.observaciones,patrones.estado_enlazado,donante_patrones.nombre from patrones inner join donante_patrones on donante_patrones.cod_donante=patrones.cod_donante inner join colectores on colectores.identificacion_colector=patrones.identificacion_colector where  patrones.cod_patron ="+arbol_T_cod_patron.getText()+";");
                if (rs.next()) {

                        patornes_T_cod_patron.setText(arbol_T_cod_patron.getText());
                    patornes_CB_colector.setSelectedItem(rs.getString(2));
                    patornes_T_donante.setText(rs.getString(3));
                    patornes_CB_departamento.setSelectedItem(rs.getString(4));
                    patornes_T_municipio.setText(String.valueOf(rs.getString(5)));
                    patornes_T_vereda.setText(rs.getString(6));
                    patornes_T_finca.setText(rs.getString(7));
                    patornes_D_fecha.setDate(rs.getDate(8));
                    patornes_T_nombre_c_cultivo.setText(rs.getString(9));
                    patornes_T_nombre_c_accesion.setText(rs.getString(10));
                    patornes_T_estado_accesion.setText(rs.getString(11));
                    patornes_T_fuente_colecicon.setText(rs.getString(12));
                    patornes_T_latitud.setText(rs.getString(13));
                    patornes_T_longitud.setText(rs.getString(14));
                    patornes_T_altitud.setText(rs.getString(15));
                    patornes_T_genero.setText(rs.getString(16));
                    patornes_T_especie.setText(rs.getString(17));
                    patornes_T_dap.setText(rs.getString(18));
                    patornes_T_altura.setText(rs.getString(19));
                    patornes_TA_observaciones.setText(rs.getString(20));
                    patornes_L_mostrar_numerodeenlaces.setText(rs.getString(21));
                    jTabbedPane1.setSelectedComponent(pestaña_patrones);
                    

                }
            } catch (SQLException ex) {
                Logger.getLogger(Accesador.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_arbol_B_ver_informacion_patronActionPerformed

    private void arbol_tablaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_arbol_tablaFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_arbol_tablaFocusLost

    private void arbol_tablaMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_arbol_tablaMousePressed
        ARBOL_CARGAR_TABLA();
    }//GEN-LAST:event_arbol_tablaMousePressed

    private void beneficiario_T_identificacionFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_beneficiario_T_identificacionFocusGained
        beneficiario_T_identificacion.selectAll();
    }//GEN-LAST:event_beneficiario_T_identificacionFocusGained

    private void beneficiario_T_identificacionFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_beneficiario_T_identificacionFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_beneficiario_T_identificacionFocusLost

    private void beneficiario_T_identificacionKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_beneficiario_T_identificacionKeyPressed

    }//GEN-LAST:event_beneficiario_T_identificacionKeyPressed

    private void beneficiario_T_identificacionKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_beneficiario_T_identificacionKeyReleased
        if (evt.VK_PERIOD==evt.getKeyCode()||(evt.VK_DECIMAL==evt.getKeyCode())) {

            beneficiario_T_identificacion.setText(beneficiario_T_identificacion.getText().substring(0, beneficiario_T_identificacion.getText().length()-1));
        }
    }//GEN-LAST:event_beneficiario_T_identificacionKeyReleased

    private void beneficiario_T_nombreFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_beneficiario_T_nombreFocusGained
        beneficiario_T_nombre.selectAll();        // TODO add your handling code here:
    }//GEN-LAST:event_beneficiario_T_nombreFocusGained

    private void beneficiario_T_nombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_beneficiario_T_nombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_beneficiario_T_nombreActionPerformed

    private void beneficiario_T_nombreKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_beneficiario_T_nombreKeyReleased
        CONVERSION_MAYUSCULAS(beneficiario_T_nombre);
    }//GEN-LAST:event_beneficiario_T_nombreKeyReleased

    private void beneficiario_T_telefonoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_beneficiario_T_telefonoFocusGained
        beneficiario_T_telefono.selectAll();        // TODO add your handling code here:
    }//GEN-LAST:event_beneficiario_T_telefonoFocusGained

    private void beneficiario_T_telefonoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_beneficiario_T_telefonoKeyReleased

    }//GEN-LAST:event_beneficiario_T_telefonoKeyReleased

    private void beneficiario_T_direccionFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_beneficiario_T_direccionFocusGained
        beneficiario_T_direccion.selectAll();        // TODO add your handling code here:
    }//GEN-LAST:event_beneficiario_T_direccionFocusGained

    private void beneficiario_T_direccionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_beneficiario_T_direccionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_beneficiario_T_direccionActionPerformed

    private void beneficiario_T_direccionKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_beneficiario_T_direccionKeyReleased
        CONVERSION_MAYUSCULAS(beneficiario_T_direccion);
    }//GEN-LAST:event_beneficiario_T_direccionKeyReleased

    private void beneficiario_CB_departamentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_beneficiario_CB_departamentoActionPerformed

    }//GEN-LAST:event_beneficiario_CB_departamentoActionPerformed

    private void beneficiario_T_municipioFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_beneficiario_T_municipioFocusGained
        beneficiario_T_municipio.selectAll();        // TODO add your handling code here:
    }//GEN-LAST:event_beneficiario_T_municipioFocusGained

    private void beneficiario_T_municipioKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_beneficiario_T_municipioKeyReleased
        CONVERSION_MAYUSCULAS(beneficiario_T_municipio);        // TODO add your handling code here:
    }//GEN-LAST:event_beneficiario_T_municipioKeyReleased

    private void beneficiario_T_veredaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_beneficiario_T_veredaFocusGained
        beneficiario_T_vereda.selectAll();        // TODO add your handling code here:
    }//GEN-LAST:event_beneficiario_T_veredaFocusGained

    private void beneficiario_T_veredaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_beneficiario_T_veredaKeyReleased
        CONVERSION_MAYUSCULAS(beneficiario_T_vereda);        // TODO add your handling code here:
    }//GEN-LAST:event_beneficiario_T_veredaKeyReleased

    private void beneficiario_T_fincaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_beneficiario_T_fincaFocusGained
        beneficiario_T_finca.selectAll();        // TODO add your handling code here:
    }//GEN-LAST:event_beneficiario_T_fincaFocusGained

    private void beneficiario_T_fincaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_beneficiario_T_fincaKeyReleased
        CONVERSION_MAYUSCULAS(beneficiario_T_finca);        // TODO add your handling code here:
    }//GEN-LAST:event_beneficiario_T_fincaKeyReleased

    private void beneficiario_TA_observacionesFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_beneficiario_TA_observacionesFocusGained
        beneficiario_TA_observaciones.selectAll();        // TODO add your handling code here:
    }//GEN-LAST:event_beneficiario_TA_observacionesFocusGained

    private void beneficiario_TA_observacionesKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_beneficiario_TA_observacionesKeyReleased
        int pos = beneficiario_TA_observaciones.getCaretPosition();
        beneficiario_TA_observaciones.setText(beneficiario_TA_observaciones.getText().toUpperCase());
        beneficiario_TA_observaciones.setCaretPosition(pos);
        // TODO add your handling code here:
    }//GEN-LAST:event_beneficiario_TA_observacionesKeyReleased

    private void beneficiario_RB_nombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_beneficiario_RB_nombreActionPerformed

        beneficiario_T_identificacion.setText("");
        beneficiario_T_identificacion.requestFocus();
        BENEFICIARIO_COLUMNA="nombre";

    }//GEN-LAST:event_beneficiario_RB_nombreActionPerformed

    private void beneficiario_RB_veredaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_beneficiario_RB_veredaActionPerformed
        beneficiario_T_identificacion.setText("");
        beneficiario_T_identificacion.requestFocus();
        BENEFICIARIO_COLUMNA="vereda";
    }//GEN-LAST:event_beneficiario_RB_veredaActionPerformed

    private void beneficiario_T_filtrarporKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_beneficiario_T_filtrarporKeyReleased
        Gestion_Beneficiarios gc = new Gestion_Beneficiarios();
        BENEFICIARIO_TEXTO=beneficiario_T_filtrarpor.getText();
        this.beneficiario_Tabla.setModel(gc.FILTRO(BENEFICIARIO_COLUMNA, BENEFICIARIO_TEXTO));
    }//GEN-LAST:event_beneficiario_T_filtrarporKeyReleased

    private void beneficiario_TablaMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_beneficiario_TablaMousePressed
        BENEFICIARIO_CARGAR_DATOS();        // TODO add your handling code here:
    }//GEN-LAST:event_beneficiario_TablaMousePressed

    private void beneficiario_B_guardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_beneficiario_B_guardarActionPerformed
        if (BENEFICIARIO_VALIDAR_GUARDAR()) {
            BENEFICIARIO_GUARDAR();

        }
    }//GEN-LAST:event_beneficiario_B_guardarActionPerformed

    private void beneficiario_B_actualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_beneficiario_B_actualizarActionPerformed
        if (BENEFICIARIO_COMPROBAR_ACTUALIZAR()) {
            BENEFICIARIO_ACTUALIZAR();

        }
    }//GEN-LAST:event_beneficiario_B_actualizarActionPerformed

    private void beneficiario_BeliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_beneficiario_BeliminarActionPerformed
        if (BENEFICIARIO_VALIDAR_ELIMINAR()) {
            BENEFICIARIO_ELIMINAR();
        }

    }//GEN-LAST:event_beneficiario_BeliminarActionPerformed

    private void beneficiario_B_limpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_beneficiario_B_limpiarActionPerformed
        BENEFICIARIO_LIMPIAR();
    }//GEN-LAST:event_beneficiario_B_limpiarActionPerformed

    private void colectores_T_nombreKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_colectores_T_nombreKeyReleased
        CONVERSION_MAYUSCULAS(colectores_T_nombre);

    }//GEN-LAST:event_colectores_T_nombreKeyReleased

    private void colectores_T_telefonoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_colectores_T_telefonoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_colectores_T_telefonoActionPerformed

    private void colectores_CB_empresaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_colectores_CB_empresaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_colectores_CB_empresaActionPerformed

    private void colectores_T_direccionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_colectores_T_direccionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_colectores_T_direccionActionPerformed

    private void colectores_T_direccionKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_colectores_T_direccionKeyReleased
        CONVERSION_MAYUSCULAS(colectores_T_direccion);
    }//GEN-LAST:event_colectores_T_direccionKeyReleased

    private void colectores_T_observacionesKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_colectores_T_observacionesKeyReleased

        int pos = colectores_T_observaciones.getCaretPosition();
        colectores_T_observaciones.setText(colectores_T_observaciones.getText().toUpperCase());
        colectores_T_observaciones.setCaretPosition(pos);

    }//GEN-LAST:event_colectores_T_observacionesKeyReleased

    private void colectores_B_eliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_colectores_B_eliminarActionPerformed
        if (COLECTORES_VALIDAR_ELIMINAR()) {
            COLECTORES_ELIMINAR();
        }

    }//GEN-LAST:event_colectores_B_eliminarActionPerformed

    private void colectores_B_modificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_colectores_B_modificarActionPerformed
        if (COLECTORES_COMPROBAR_ACTUALIZAR()) {
            COLECTORES_ACTUALIZAR();
        }

    }//GEN-LAST:event_colectores_B_modificarActionPerformed

    private void colectores_B_registrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_colectores_B_registrarActionPerformed
        if (COLECTORES_VALIDAR_GUARDAR()) {
            COLECTORES_GUARDAR();
        }

    }//GEN-LAST:event_colectores_B_registrarActionPerformed

    private void colectores_B_filtrarporActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_colectores_B_filtrarporActionPerformed

    }//GEN-LAST:event_colectores_B_filtrarporActionPerformed

    private void colectores_TablaMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_colectores_TablaMousePressed
        ResultSet rs;
        Connection con = new Conexion().getCon();
        try {
            rs=con.createStatement().executeQuery("select colectores.identificacion_colector,empresa.nombre,colectores.nombre,colectores.telefono,colectores.direccion,colectores.observaciones from colectores inner join empresa on empresa.nit_empresa=colectores.nit_empresa where colectores.identificacion_colector ="+(String.valueOf(colectores_Tabla.getValueAt(colectores_Tabla.getSelectedRow(), 0)))+";");
            if (rs.next()) {
                colectores_T_identificacion.setText(String.valueOf(rs.getLong(1)));
                colectores_CB_empresa.setSelectedItem(rs.getString(2));
                colectores_T_nombre.setText(rs.getString(3));
                colectores_T_telefono.setText(String.valueOf(rs.getLong(4)));
                colectores_T_direccion.setText(rs.getString(5));

                colectores_T_observaciones.setText(rs.getString(6));

            }

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this,"ERROR "+ ex);
        }
    }//GEN-LAST:event_colectores_TablaMousePressed

    private void empresa_B_nuevaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_empresa_B_nuevaActionPerformed
        String ACCION = empresa_B_nueva.getText();

        switch (ACCION) {
            case "NUEVA":

            EMPRESA_HAGA_NUEVA();
            EMPRESA_PASE_A_GUARDAR();
            break;
            case "GUARDAR":

            if (EMPRESA_VALIDAR_CAMPOS_ALL()) {

                if (EMPRESA_HAGA_GUARDAR()) {
                    EMPRESA_PASE_A_NUEVA();
                }

            }
            break;
        }
    }//GEN-LAST:event_empresa_B_nuevaActionPerformed

    private void empresa_T_modificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_empresa_T_modificarActionPerformed
        if (EMPRESA_VALIDAR_CAMPOS_AL_mODIFICAR()) {

            Empresa e = new Empresa();
            Gestion_Empresa ge=new Gestion_Empresa();

            e.setNit_Empresa(empresa_T_nit_empresa.getText());
            e.setNombre(empresa_T_nombre.getText());
            e.setDireccion(empresa_T_direccion.getText());
            e.setTelefono(Long.valueOf(empresa_T_telefono.getText()));
            if(ge.ACTUALIZAR(e)){
                JOptionPane.showMessageDialog(this,"Empresa exitosamente actualizada");
                EMPRESA_LIMPIAR();

            }

        }
    }//GEN-LAST:event_empresa_T_modificarActionPerformed

    private void empresa_T_eliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_empresa_T_eliminarActionPerformed
        Gestion_Empresa ge = new Gestion_Empresa();
        int opcion;
        opcion= JOptionPane.showConfirmDialog(this,"Esta a punto de eliminar una empresa");
        if (opcion==JOptionPane.YES_OPTION) {
            if (ge.ELIMINAR(empresa_T_nit_empresa.getText())==true) {
                JOptionPane.showMessageDialog(this,"EMPRESA ELIMINADA!");
                EMPRESA_LIMPIAR();

            }

        }
    }//GEN-LAST:event_empresa_T_eliminarActionPerformed

    private void empresa_T_telefonoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_empresa_T_telefonoFocusGained
        empresa_T_telefono.selectAll();        // TODO add your handling code here:
    }//GEN-LAST:event_empresa_T_telefonoFocusGained

    private void empresa_T_direccionFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_empresa_T_direccionFocusGained
        empresa_T_direccion.selectAll();        // TODO add your handling code here:
    }//GEN-LAST:event_empresa_T_direccionFocusGained

    private void empresa_T_direccionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_empresa_T_direccionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_empresa_T_direccionActionPerformed

    private void empresa_T_nombreFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_empresa_T_nombreFocusGained
        empresa_T_nombre.selectAll();
    }//GEN-LAST:event_empresa_T_nombreFocusGained

    private void empresa_T_nit_empresaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_empresa_T_nit_empresaFocusGained
        empresa_T_nit_empresa.selectAll();        // TODO add your handling code here:
    }//GEN-LAST:event_empresa_T_nit_empresaFocusGained

    private void empresa_T_nit_empresaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_empresa_T_nit_empresaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_empresa_T_nit_empresaActionPerformed

    private void empresa_TablaMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_empresa_TablaMousePressed
        if(empresa_Tabla.getSelectedColumn() !=-1){
            empresa_T_nit_empresa.setEnabled(false);
            empresa_T_nit_empresa.setText((String.valueOf(empresa_Tabla.getValueAt(empresa_Tabla.getSelectedRow(),0))));
            empresa_T_nombre.setText(String.valueOf(empresa_Tabla.getValueAt(empresa_Tabla.getSelectedRow(),1)));
            empresa_T_direccion.setText(String.valueOf(empresa_Tabla.getValueAt(empresa_Tabla.getSelectedRow(),2)));
            empresa_T_telefono.setText(String.valueOf(empresa_Tabla.getValueAt(empresa_Tabla.getSelectedRow(),3)));

            if (empresa_T_nit_empresa.getText().isEmpty()) {
                empresa_T_modificar.setEnabled(false);
                empresa_T_eliminar.setEnabled(false);
            }else{
                empresa_T_modificar.setEnabled(true);
                empresa_T_eliminar.setEnabled(true);
            }
            if (empresa_B_nueva.getText().equals("GUARDAR")) {
                EMPRESA_PASE_A_NUEVA();
            }

        }
    }//GEN-LAST:event_empresa_TablaMousePressed

    private void arbol_T_latitudKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_arbol_T_latitudKeyReleased
        CONVERSION_MAYUSCULAS(arbol_T_latitud);
    }//GEN-LAST:event_arbol_T_latitudKeyReleased

    private void arbol_T_longitudKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_arbol_T_longitudKeyReleased
        CONVERSION_MAYUSCULAS(arbol_T_longitud) ;
    }//GEN-LAST:event_arbol_T_longitudKeyReleased

    private void arbol_T_altitudKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_arbol_T_altitudKeyReleased
        CONVERSION_MAYUSCULAS(arbol_T_altitud);
    }//GEN-LAST:event_arbol_T_altitudKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Accesador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Accesador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Accesador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Accesador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Accesador().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Inicio_B_cargar_informacion;
    private javax.swing.JButton Inicio_B_limpiar;
    private javax.swing.JLabel Inicio_L_cod_control;
    private javax.swing.JLabel Inicio_L_n_arbol;
    private javax.swing.JTextField Inicio_T_filtro;
    private javax.swing.JTextField Inicio_T_n_nombre;
    private javax.swing.JTable Inicio_Tabla1;
    private javax.swing.JLabel Inicio_filtrar_arboles;
    private javax.swing.JRadioButton Inicio_jradio_copa;
    private javax.swing.JRadioButton Inicio_jradio_patron;
    private javax.swing.JRadioButton Inicio_jradio_vereda;
    private javax.swing.JMenuItem aboutMenuItem;
    private javax.swing.JButton arbol_B_actualizar;
    private javax.swing.JButton arbol_B_cod_copa;
    private javax.swing.JButton arbol_B_cod_patron;
    private javax.swing.JButton arbol_B_eliminar;
    private javax.swing.JButton arbol_B_limpiar;
    private javax.swing.JButton arbol_B_registrar;
    private javax.swing.JButton arbol_B_ver_informacion_copa;
    private javax.swing.JButton arbol_B_ver_informacion_patron;
    private javax.swing.JComboBox arbol_CB_beneficiario;
    private javax.swing.JComboBox arbol_CB_departamento;
    private javax.swing.JLabel arbol_L_altitud;
    private javax.swing.JLabel arbol_L_beneficiario;
    private javax.swing.JLabel arbol_L_cod_copa;
    private javax.swing.JLabel arbol_L_cod_patron;
    private javax.swing.JLabel arbol_L_codigo;
    private javax.swing.JLabel arbol_L_colector_copas;
    private javax.swing.JLabel arbol_L_colector_patorn;
    private javax.swing.JLabel arbol_L_departamento;
    private javax.swing.JLabel arbol_L_donante_copas;
    private javax.swing.JLabel arbol_L_donante_patrones;
    private javax.swing.JLabel arbol_L_finca;
    private javax.swing.JLabel arbol_L_latitud;
    private javax.swing.JLabel arbol_L_longitud;
    private javax.swing.JLabel arbol_L_muestra_codigo;
    private javax.swing.JLabel arbol_L_municipio;
    private javax.swing.JLabel arbol_L_observaciones;
    private javax.swing.JLabel arbol_L_vereda;
    private javax.swing.JTextField arbol_T_altitud;
    public static javax.swing.JTextField arbol_T_cod_copa;
    public static javax.swing.JTextField arbol_T_cod_patron;
    public static javax.swing.JTextField arbol_T_codiigo_arbol;
    public static javax.swing.JTextField arbol_T_colector_copa;
    public static javax.swing.JTextField arbol_T_colector_patron;
    public static javax.swing.JTextField arbol_T_donante_copa;
    public static javax.swing.JTextField arbol_T_donante_patron;
    private javax.swing.JTextField arbol_T_finca;
    private javax.swing.JTextField arbol_T_latitud;
    private javax.swing.JTextField arbol_T_longitud;
    private javax.swing.JTextField arbol_T_municipio;
    private javax.swing.JTextField arbol_T_vereda;
    private javax.swing.JTextArea arbol_Ta_observacion;
    private javax.swing.JDesktopPane arbol_desktoppane;
    private javax.swing.JPanel arbol_panel_Botones_acciones;
    private javax.swing.JPanel arbol_panel_campos_arbol;
    private javax.swing.JPanel arbol_panel_copa;
    private javax.swing.JPanel arbol_panel_copa_patron;
    private javax.swing.JPanel arbol_panel_patron;
    private javax.swing.JScrollPane arbol_scroolpane;
    private javax.swing.JScrollPane arbol_scroolpane2;
    private javax.swing.JTable arbol_tabla;
    public static javax.swing.JButton beneficiario_B_actualizar;
    public static javax.swing.JButton beneficiario_B_guardar;
    public static javax.swing.JButton beneficiario_B_limpiar;
    public static javax.swing.JButton beneficiario_Beliminar;
    public static javax.swing.JComboBox beneficiario_CB_departamento;
    public static javax.swing.JComboBox beneficiario_CB_empresa;
    private javax.swing.JRadioButton beneficiario_RB_nombre;
    private javax.swing.JRadioButton beneficiario_RB_vereda;
    private javax.swing.JTextArea beneficiario_TA_observaciones;
    public static javax.swing.JTextField beneficiario_T_direccion;
    private javax.swing.JTextField beneficiario_T_filtrarpor;
    public static javax.swing.JTextField beneficiario_T_finca;
    public static javax.swing.JTextField beneficiario_T_identificacion;
    public static javax.swing.JTextField beneficiario_T_municipio;
    public static javax.swing.JTextField beneficiario_T_nombre;
    public static javax.swing.JTextField beneficiario_T_telefono;
    public static javax.swing.JTextField beneficiario_T_vereda;
    private javax.swing.JTable beneficiario_Tabla;
    private javax.swing.JButton colectores_B_eliminar;
    private javax.swing.JButton colectores_B_filtrarpor;
    private javax.swing.JButton colectores_B_modificar;
    private javax.swing.JButton colectores_B_registrar;
    private javax.swing.JComboBox colectores_CB_empresa;
    private javax.swing.JTextField colectores_T_direccion;
    private javax.swing.JTextField colectores_T_identificacion;
    private javax.swing.JTextField colectores_T_nombre;
    private javax.swing.JTextArea colectores_T_observaciones;
    private javax.swing.JTextField colectores_T_telefono;
    private javax.swing.JTable colectores_Tabla;
    private javax.swing.JMenuItem contentsMenuItem;
    public static javax.swing.JTable copa_tabla;
    private javax.swing.JButton copas_B_donante;
    public static javax.swing.JComboBox copas_CB_colector;
    public static javax.swing.JComboBox copas_CB_departamento;
    public static com.toedter.calendar.JDateChooser copas_DT_fecha;
    private javax.swing.JLabel copas_L_altitud;
    private javax.swing.JLabel copas_L_altura;
    private javax.swing.JLabel copas_L_dap;
    private javax.swing.JLabel copas_L_enlacescopa;
    private javax.swing.JLabel copas_L_especie;
    private javax.swing.JLabel copas_L_estadoaccesion;
    private javax.swing.JLabel copas_L_fecha;
    private javax.swing.JLabel copas_L_fuente_colecicon;
    private javax.swing.JLabel copas_L_genero;
    private javax.swing.JLabel copas_L_latitud;
    private javax.swing.JLabel copas_L_longitud;
    private javax.swing.JLabel copas_L_muestraenlacescopa;
    private javax.swing.JLabel copas_L_nombreaccesion;
    private javax.swing.JLabel copas_L_nombrecultivo;
    public static javax.swing.JTextArea copas_TA_observaciones;
    public static javax.swing.JTextField copas_T_altitud;
    public static javax.swing.JTextField copas_T_altura;
    public static javax.swing.JTextField copas_T_codcopa;
    public static javax.swing.JTextField copas_T_dap;
    public static javax.swing.JTextField copas_T_donante;
    public static javax.swing.JTextField copas_T_especie;
    public static javax.swing.JTextField copas_T_estadoaccesion;
    public static javax.swing.JTextField copas_T_finca;
    public static javax.swing.JTextField copas_T_fuentecoleccion;
    public static javax.swing.JTextField copas_T_genero;
    public static javax.swing.JTextField copas_T_latitud;
    public static javax.swing.JTextField copas_T_longitud;
    public static javax.swing.JTextField copas_T_municipio;
    public static javax.swing.JTextField copas_T_nombreaccesion;
    public static javax.swing.JTextField copas_T_nombrecultivo;
    public static javax.swing.JTextField copas_T_vereda;
    public static javax.swing.JButton copas_b_actualizar;
    public static javax.swing.JButton copas_b_eliminar;
    public static javax.swing.JButton copas_b_guardar;
    public static javax.swing.JButton copas_b_limpiar;
    private javax.swing.JButton copas_b_nuevo;
    private javax.swing.JDesktopPane copas_descktoppane;
    private javax.swing.JLabel copas_l_codcopa;
    private javax.swing.JLabel copas_l_colector;
    private javax.swing.JLabel copas_l_departamento;
    private javax.swing.JLabel copas_l_diltrar_copas_por;
    private javax.swing.JLabel copas_l_donante;
    private javax.swing.JLabel copas_l_finca;
    private javax.swing.JLabel copas_l_municipio;
    private javax.swing.JLabel copas_l_vereda;
    private javax.swing.JPanel copas_panel_botones;
    public static javax.swing.JPanel copas_panel_campos;
    private javax.swing.JPanel copas_panel_campos_a;
    private javax.swing.JPanel copas_panel_campos_a_a;
    private javax.swing.JPanel copas_panel_campos_a_b;
    private javax.swing.JPanel copas_panel_campos_b;
    private javax.swing.JPanel copas_panel_campos_b_a;
    private javax.swing.JPanel copas_panel_campos_b_b;
    private javax.swing.JPanel copas_panel_campos_c;
    private javax.swing.JPanel copas_panel_campos_c_a;
    private javax.swing.JPanel copas_panel_campos_c_b;
    private javax.swing.JPanel copas_panel_campos_d;
    private javax.swing.JLabel copas_panel_campos_d_l_observaciones;
    private javax.swing.JScrollPane copas_panel_campos_d_scrollpane;
    private javax.swing.JPanel copas_panel_filtro;
    private javax.swing.JRadioButton copas_radio_b_donante;
    private javax.swing.JRadioButton copas_rsdiobuton_vereda;
    private javax.swing.JScrollPane copas_scollpane;
    private javax.swing.JTextField copas_t_filtrar_copas_por;
    private javax.swing.JMenuItem copyMenuItem;
    private javax.swing.JMenuItem cutMenuItem;
    private javax.swing.JMenuItem deleteMenuItem;
    private javax.swing.JButton donante_b_eliminar;
    private javax.swing.JButton donante_b_enlazar;
    private javax.swing.JButton donante_b_modificar;
    private javax.swing.JButton donante_b_registrar;
    private javax.swing.JComboBox donante_cb_departamento;
    private javax.swing.JComboBox donante_cb_empresa;
    private javax.swing.JLabel donante_l_codigo;
    private javax.swing.JLabel donante_l_departamento;
    private javax.swing.JLabel donante_l_direccion;
    private javax.swing.JLabel donante_l_empresa;
    private javax.swing.JLabel donante_l_finca;
    private javax.swing.JLabel donante_l_limpiarcampos;
    private javax.swing.JLabel donante_l_municipio;
    private javax.swing.JLabel donante_l_nombre;
    private javax.swing.JLabel donante_l_observaciones;
    private javax.swing.JLabel donante_l_telefono;
    private javax.swing.JLabel donante_l_vereda;
    private javax.swing.JPanel donante_panel_botones;
    private javax.swing.JPanel donante_panel_campos;
    private javax.swing.JScrollPane donante_panel_general;
    private javax.swing.JTextField donante_t_codigo;
    private javax.swing.JTextField donante_t_direccion;
    private javax.swing.JTextField donante_t_finca;
    private javax.swing.JTextField donante_t_municipio;
    private javax.swing.JTextField donante_t_nombre;
    private javax.swing.JTextField donante_t_telefono;
    private javax.swing.JTextField donante_t_vereda;
    private javax.swing.JTextArea donante_ta_observaciones;
    private javax.swing.JTable donante_tabla;
    private javax.swing.JMenu editMenu;
    private javax.swing.JButton empresa_B_nueva;
    private javax.swing.JTextField empresa_T_direccion;
    private javax.swing.JButton empresa_T_eliminar;
    private javax.swing.JButton empresa_T_modificar;
    private javax.swing.JTextField empresa_T_nit_empresa;
    private javax.swing.JTextField empresa_T_nombre;
    private javax.swing.JTextField empresa_T_telefono;
    private javax.swing.JTable empresa_Tabla;
    private javax.swing.JMenuItem exitMenuItem;
    private javax.swing.JMenu fileMenu;
    private javax.swing.JMenu helpMenu;
    private javax.swing.ButtonGroup inicio_botongroup;
    private javax.swing.JDesktopPane jDesktopPane1;
    private javax.swing.JDesktopPane jDesktopPane2;
    private javax.swing.JDesktopPane jDesktopPane3;
    private javax.swing.JDesktopPane jDesktopPane4;
    private javax.swing.JDesktopPane jDesktopPane5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JScrollPane jScrollPane12;
    private javax.swing.JScrollPane jScrollPane13;
    private javax.swing.JScrollPane jScrollPane14;
    private javax.swing.JScrollPane jScrollPane15;
    private javax.swing.JScrollPane jScrollPane16;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JMenuItem openMenuItem;
    private javax.swing.JMenuItem pasteMenuItem;
    private javax.swing.JButton patornes_B_donante;
    public static javax.swing.JComboBox patornes_CB_colector;
    public static javax.swing.JComboBox patornes_CB_departamento;
    public static com.toedter.calendar.JDateChooser patornes_D_fecha;
    private javax.swing.JLabel patornes_L_D_A_P;
    private javax.swing.JLabel patornes_L_altitud;
    private javax.swing.JLabel patornes_L_altura;
    private javax.swing.JLabel patornes_L_cod_patron;
    private javax.swing.JLabel patornes_L_colector;
    private javax.swing.JLabel patornes_L_departamento;
    private javax.swing.JLabel patornes_L_donante;
    private javax.swing.JLabel patornes_L_especie;
    private javax.swing.JLabel patornes_L_estadoaccesion;
    private javax.swing.JLabel patornes_L_fecha;
    private javax.swing.JLabel patornes_L_finca;
    private javax.swing.JLabel patornes_L_fuentecoleccion;
    private javax.swing.JLabel patornes_L_genero;
    private javax.swing.JLabel patornes_L_latitud;
    private javax.swing.JLabel patornes_L_longitud;
    private javax.swing.JLabel patornes_L_mostrar_numerodeenlaces;
    private javax.swing.JLabel patornes_L_municipio;
    private javax.swing.JLabel patornes_L_nombre_c_accesion;
    private javax.swing.JLabel patornes_L_nombre_c_cultivo;
    private javax.swing.JLabel patornes_L_numerodeenlaces;
    private javax.swing.JLabel patornes_L_vereda;
    public static javax.swing.JTextArea patornes_TA_observaciones;
    public static javax.swing.JTextField patornes_T_altitud;
    public static javax.swing.JTextField patornes_T_altura;
    public static javax.swing.JTextField patornes_T_cod_patron;
    public static javax.swing.JTextField patornes_T_dap;
    public static javax.swing.JTextField patornes_T_donante;
    public static javax.swing.JTextField patornes_T_especie;
    public static javax.swing.JTextField patornes_T_estado_accesion;
    public static javax.swing.JTextField patornes_T_finca;
    public static javax.swing.JTextField patornes_T_fuente_colecicon;
    public static javax.swing.JTextField patornes_T_genero;
    public static javax.swing.JTextField patornes_T_latitud;
    public static javax.swing.JTextField patornes_T_longitud;
    public static javax.swing.JTextField patornes_T_municipio;
    public static javax.swing.JTextField patornes_T_nombre_c_accesion;
    public static javax.swing.JTextField patornes_T_nombre_c_cultivo;
    public static javax.swing.JTextField patornes_T_vereda;
    private javax.swing.JLabel patornes_panel_campos_L_Observaciones;
    private javax.swing.JPanel patornes_panel_campos_a;
    private javax.swing.JPanel patornes_panel_campos_a_a;
    private javax.swing.JPanel patornes_panel_campos_a_b;
    private javax.swing.JPanel patornes_panel_campos_b;
    private javax.swing.JPanel patornes_panel_campos_b_a;
    private javax.swing.JPanel patornes_panel_campos_b_b;
    private javax.swing.JPanel patornes_panel_campos_c;
    private javax.swing.JPanel patornes_panel_campos_c_a;
    private javax.swing.JPanel patornes_panel_campos_c_b;
    private javax.swing.JPanel patornes_panel_campos_d;
    private javax.swing.JScrollPane patornes_panel_campos_scollpane;
    public static javax.swing.JButton patrones_B_actualizar;
    public static javax.swing.JButton patrones_B_eliminar;
    public static javax.swing.JButton patrones_B_limpiar;
    public static javax.swing.JButton patrones_B_nuevo;
    public static javax.swing.JButton patrones_B_registrar;
    private javax.swing.JLabel patrones_L_filtrarpatronespor;
    private javax.swing.JRadioButton patrones_RB_donantre;
    private javax.swing.JRadioButton patrones_RB_vereda;
    private javax.swing.JTextField patrones_T_filtrarpatronespor;
    private javax.swing.JDesktopPane patrones_desktoppane;
    private javax.swing.JPanel patrones_panel_botones;
    public static javax.swing.JPanel patrones_panel_campos;
    private javax.swing.JPanel patrones_panel_filtro;
    private javax.swing.JScrollPane patrones_scroolpane;
    public static javax.swing.JTable patrones_tabla;
    private javax.swing.JPanel pestaña_acerca_de;
    private javax.swing.JPanel pestaña_beneficiarios;
    private javax.swing.JPanel pestaña_colectores;
    private javax.swing.JPanel pestaña_copas;
    private javax.swing.JPanel pestaña_donantes;
    private javax.swing.JPanel pestaña_empresas;
    private javax.swing.JPanel pestaña_inicio;
    private javax.swing.JPanel pestaña_patrones;
    private javax.swing.JPanel pestaña_reportes;
    private javax.swing.JPanel pestaña_resgistro_arbol;
    private javax.swing.JMenuItem saveAsMenuItem;
    private javax.swing.JMenuItem saveMenuItem;
    // End of variables declaration//GEN-END:variables
    //INICIO
    private void INICIO_NUMEROS (String codigo){
                    if (codigo.length()==1) {
                       longitud= "0000";
                     }if (codigo.length()==2) {
                        longitud= "000";
                    }if (codigo.length()==3) {
                        longitud= "00";
                    }if (codigo.length()==4) {
                        longitud= "0";
                    }if (codigo.length()==5) {
                        longitud="";
                    }

}
    private void INICIO_REFRESCAR(){
    Gestion_Arboles ga = new Gestion_Arboles();
    Inicio_T_filtro.setText("");
    Inicio_T_n_nombre.setText("");
    Inicio_L_cod_control.setText("");
    INICIO_ACTUALIZAR_TABLA();
    Inicio_T_n_nombre.requestFocus();
    Inicio_T_n_nombre.setEnabled(true);
}
    private void INICIO_ACTUALIZAR_TABLA(){
    Gestion_Arboles ga= new Gestion_Arboles();
    this.Inicio_Tabla1.setModel(ga.LISTARTABLA());
    ga.AJUSTARCOLUMNAS(Inicio_Tabla1);
    
}
    public final void EMPEZAR_INICIO(){
         Gestion_Arboles ga = new Gestion_Arboles();
        Inicio_T_n_nombre.requestFocus();
        Inicio_jradio_vereda.setSelected(true);
        setExtendedState(MAXIMIZED_BOTH); 
        INICIO_COLUMNA="arboles.VEREDA";
        Inicio_Sesion.inicio=true;
        this.Inicio_Tabla1.setModel(ga.LISTARTABLA());
         Inicio_Tabla1.setShowHorizontalLines(true);
         Inicio_Tabla1.setShowVerticalLines(true);
         INICIO_ACTUALIZAR_TABLA();
}
    //INICIO
    
    //DONANTES
    public final void EMPEZAR_DONANTES(){
     Gestion_Donantes GD = new Gestion_Donantes();
        donante_tabla.setModel(GD.LISTARTABLA());
        donante_cb_empresa.setModel(GD.LISTARJCOMBOBOX("empresa","").getModel());
        donante_cb_departamento.setModel(GD.LISTARJCOMBOBOX("departamentos", "").getModel());
        donante_t_codigo.requestFocus();
         donante_tabla.setShowHorizontalLines(true);
         donante_tabla.setShowVerticalLines(true);
}
    public void DONANTE_CARGAR_TABLA(){
     ResultSet rs;
Connection con = new Conexion().getCon();
        try {
            rs=con.createStatement().executeQuery("select DONANTE_COPAS.COD_DONANTE,EMPRESA.NOMBRE,DONANTE_COPAS.NOMBRE,DONANTE_COPAS.TELEFONO,DONANTE_COPAS.DIRECCION,DONANTE_COPAS.DEPARTAMENTO,DONANTE_COPAS.MUNICIPIO,DONANTE_COPAS.VEREDA,DONANTE_COPAS.FINCA,DONANTE_COPAS.OBSERVACIONES FROM DONANTE_COPAS INNER JOIN EMPRESA ON EMPRESA.NIT_EMPRESA=DONANTE_COPAS.NIT_EMPRESA where DONANTE_COPAS.COD_DONANTE="+(String.valueOf(donante_tabla.getValueAt(donante_tabla.getSelectedRow(), 0)))+";");
            if (rs.next()) {
            donante_t_codigo.setText(rs.getString(1));
            donante_t_codigo.setEnabled(false);
            donante_cb_empresa.setSelectedItem(rs.getString(2));
            donante_t_nombre.setText(rs.getString(3));
            donante_t_telefono.setText(rs.getString(4));
            donante_t_direccion.setText(rs.getString(5));
            donante_cb_departamento.setSelectedItem(rs.getString(6));
            donante_t_municipio.setText(rs.getString(7));
            donante_t_vereda.setText(rs.getString(8));
            donante_t_finca.setText(rs.getString(9));
            donante_ta_observaciones.setText(rs.getString(10));
            }
        } catch (SQLException ex) {
          JOptionPane.showMessageDialog(this,"ERROR "+ ex);
    }       
}
    public void DONANTE_ELIMINAR(){
        Gestion_Donantes gd = new Gestion_Donantes();
        int opcion;
        opcion= JOptionPane.showConfirmDialog(this,"ESTA A PUNTO DE ELIMINAR UN DONANTE!!!","ALERTA",JOptionPane.WARNING_MESSAGE);
        if (opcion==JOptionPane.YES_OPTION) {
            if (gd.ELIMINAR(donante_t_codigo.getText())) {
                JOptionPane.showMessageDialog(this,"DONANTE ELIMINADO");
                DONANTE_LIMPIAR();
                


            }

        }
        }
    public boolean DONANTE_VALIDAR_ELIMINAR(){
              
       ResultSet rs;
       Connection Conn = new Conexion().getCon();
            if (!donante_t_codigo.getText().isEmpty()) {
           try {
               rs=Conn.createStatement().executeQuery("select *  from donante_copas where cod_donante='"+donante_t_codigo.getText()+"';");
               if (rs.next()) {
                   return true;
               }else{
                   JOptionPane.showMessageDialog(this, "EL CODIGO QUE INTENTA ELIMINAR NO ESTA ENLAZADO A NINGUN DONANTE\n"
                           +                           "                       (NO EXISTE EN LA B.D)                      ","ERROR",JOptionPane.ERROR_MESSAGE);
                   return false;
                   
               }
           } catch (SQLException ex) {
               Logger.getLogger(Accesador.class.getName()).log(Level.SEVERE, null, ex);
               return false;
           }
            }else{
                JOptionPane.showMessageDialog(this,"EL CAMPO CODIGO ESTA VACIO !", "ERROR",JOptionPane.ERROR_MESSAGE);
                return false;
            }
       
        }
    public void DONANTE_ACTUALIZAR(){
        try {
            ResultSet rs;
            Connection con = new Conexion().getCon();
            Donante_Copas dc = new Donante_Copas();
            Gestion_Donantes gd = new Gestion_Donantes();
            
            
            
            rs=con.createStatement().executeQuery("Select nit_Empresa from empresa where NOMBRE ="+"'"+donante_cb_empresa.getSelectedItem()+"';");
            if (rs.next()) {
                dc.setCod_Donante(donante_t_codigo.getText());
                dc.setNit_Empresa(rs.getString(1));
                dc.setNombre(donante_t_nombre.getText());
                dc.setTelefono(Long.parseLong(donante_t_telefono.getText()));
                dc.setDireccion(donante_t_direccion.getText());
                dc.setDepartamento(String.valueOf(donante_cb_departamento.getSelectedItem()));
                dc.setMunicipio(donante_t_municipio.getText());
                dc.setVereda(donante_t_vereda.getText());
                dc.setFinca(donante_t_finca.getText());
                dc.setObservaciones(donante_ta_observaciones.getText());
                
                
                if(gd.ACTUALIZAR(dc)==true){
                    JOptionPane.showMessageDialog(this,"ACTUALIZACION EXITOSA");
                   DONANTE_LIMPIAR();
                    
                }
            }
        } catch (SQLException ex) {
            Logger.getLogger(Accesador.class.getName()).log(Level.SEVERE, null, ex);
        }
                    
     }
    public boolean DONANTE_VALIDAR_ACTUALIZAR(){
    if (!(donante_t_codigo.getText().isEmpty())) {
             try {
                 ResultSet rs;
                 Connection Conn = new Conexion().getCon();
                 rs= Conn.createStatement().executeQuery("select * from donante_copas where cod_donante='"+this.donante_t_codigo.getText()+"';");
                 if (rs.next()) {
            if (!(donante_cb_empresa.getSelectedIndex()==0)){
                         if (!(donante_t_nombre.getText().isEmpty())){
                             if (!(donante_t_telefono.getText().isEmpty())){
                                  try {
                                     long ASD;
                                     ASD=Long.parseLong(donante_t_telefono.getText());
                                 } catch (Exception e) {
                                     JOptionPane.showMessageDialog(this,"EL TELEFONO DEBE CONTENER SOLO NUMEROS","ERROR",JOptionPane.ERROR_MESSAGE);
                                     return false;
                                 }
                                 if (!(donante_t_direccion.getText().isEmpty())) {
                                     if (!(donante_cb_departamento.getSelectedIndex()==0)) {
                                         if (!donante_t_municipio.getText().isEmpty()) {
                                             if (!donante_t_vereda.getText().isEmpty()) {
                                                 if (!donante_t_finca.getText().isEmpty()) {
                                                     return true;
                                                 }else{
                                                     JOptionPane.showMessageDialog(this,"EL CAMPO FINCA SE ENCUENTRA VACIO !","ERROR",JOptionPane.ERROR_MESSAGE);
                                                     return false;
                                                 }
                                             }else{
                                                 JOptionPane.showMessageDialog(this,"EL CAMPO VEREDA SE ENCUENTRA VACIO !","ERROR",JOptionPane.ERROR_MESSAGE);
                                                 return false;
                                             }
                                         }else{
                                             JOptionPane.showMessageDialog(this,"EL CAMPO MUNICIPIO SE ENCUENTRA VACIO !","ERROR",JOptionPane.ERROR_MESSAGE);
                                             return false;
                                         }
                                     }else{
                                         JOptionPane.showMessageDialog(this,"EL DEPARTAMENTO SELECCIONADO NO ES VALIDO ! !","ERROR",JOptionPane.ERROR_MESSAGE);
                                         return false;
                                     }
                                 }else{
                                     JOptionPane.showMessageDialog(this,"EL CAMPO DIRECCION SE ENCUENTRA VACIO !","ERROR",JOptionPane.ERROR_MESSAGE);
                                     return false;
                                     
                                 }
                             }else{
                                 JOptionPane.showMessageDialog(this,"EL CAMPO TELEFONO SE ENCUENTRA VACIO !","ERROR",JOptionPane.ERROR_MESSAGE);
                                 return false;
                             }
                         }else{
                             JOptionPane.showMessageDialog(this,"EL CAMPO NOMBRE SE ENCUENTRA VACIO !","ERROR",JOptionPane.ERROR_MESSAGE);
                             return false;
                         }
                     }else{
                         JOptionPane.showMessageDialog(this,"LA EMPRESA SELECCIONADA NO ES VALIDA !","ERROR",JOptionPane.ERROR_MESSAGE);
                         return false;
                     }
                 }else{
                   JOptionPane.showMessageDialog(this,"ESTE DONANTE NO  SE ENCUENTRA REGISTRADO EN LA B.D; REGISTRELO \n PARA LUEGO PODER ACTUALIZARLO !","ERROR",JOptionPane.ERROR_MESSAGE); 
                   return false;
                           
                 }} catch (SQLException ex) {
                 Logger.getLogger(Accesador.class.getName()).log(Level.SEVERE, null, ex);
                 return false;
             }
             }else{
                     JOptionPane.showMessageDialog(this,"EL CAMPO CODIGO SE ENCUENTRA VACIO !","ERROR",JOptionPane.ERROR_MESSAGE); 
                     return false;
                 } 
}
    public void DONANTE_LIMPIAR(){
      Gestion_Donantes gd=new Gestion_Donantes();
                        donante_t_codigo.setText("");
                        donante_t_codigo.setEnabled(true);
                        donante_cb_empresa.setSelectedIndex(0);
                        donante_t_nombre.setText("");
                        donante_t_telefono.setText("");
                        donante_t_direccion.setText("");
                        donante_cb_departamento.setSelectedIndex(0);
                        donante_t_municipio.setText("");
                        donante_t_vereda.setText("");
                        donante_t_finca.setText("");
                        donante_ta_observaciones.setText("");
                        donante_t_codigo.requestFocus();
                        donante_tabla.setModel(gd.LISTARTABLA());
       
}
    public void DONANTE_GUARDAR(){
    Gestion_Donantes gd = new Gestion_Donantes();
     Donante_Copas   dc = new Donante_Copas();
            ResultSet rs;
            Connection con = new Conexion().getCon();
           
            try {
                rs=con.createStatement().executeQuery("select nit_empresa from empresa where nombre= '"+(String.valueOf(donante_cb_empresa.getSelectedItem()))+"';");
                if (rs.next()) {
            String nit_empresa= rs.getString(1);
            dc.setCod_Donante(donante_t_codigo.getText());
            dc.setNit_Empresa(nit_empresa);
            dc.setNombre(donante_t_nombre.getText());
            dc.setTelefono(Long.parseLong(donante_t_telefono.getText()));
            dc.setDireccion(donante_t_direccion.getText());
            dc.setDepartamento(String.valueOf(donante_cb_departamento.getSelectedItem()));
            dc.setMunicipio(donante_t_municipio.getText());
            dc.setVereda(donante_t_vereda.getText());
            dc.setFinca(donante_t_finca.getText());
            dc.setObservaciones(donante_ta_observaciones.getText());
                    if (gd.GUARDAR(dc)==true) {
                       DONANTE_LIMPIAR();
                        JOptionPane.showMessageDialog(this,"DONANTE REGISTRADO", "EXITO",JOptionPane.INFORMATION_MESSAGE);
                    }
                }
            } catch (SQLException ex) {
                Logger.getLogger(Accesador.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            
        }
    public boolean DONANTE_VALIDAR_GURDAR(){
         if (!(donante_t_codigo.getText().isEmpty())) {
             try {
                 ResultSet rs;
                 Connection Conn = new Conexion().getCon();
                 rs= Conn.createStatement().executeQuery("select * from donante_copas where cod_donante='"+this.donante_t_codigo.getText()+"';");
                 
                 if (!rs.next()) {
                if (!(donante_cb_empresa.getSelectedIndex()==0)){
                         if (!(donante_t_nombre.getText().isEmpty())){
                             if (!(donante_t_telefono.getText().isEmpty())){
                                 try {
                                     long ASD;
                                     ASD=Long.parseLong(donante_t_telefono.getText());
                                 } catch (Exception e) {
                                     JOptionPane.showMessageDialog(this,"EL TELEFONO DEBE CONTENER SOLO NUMEROS","ERROR",JOptionPane.ERROR_MESSAGE);
                                     return false;
                                 }
                                 if (!(donante_t_direccion.getText().isEmpty())) {
                                     if (!(donante_cb_departamento.getSelectedIndex()==0)) {
                                         if (!donante_t_municipio.getText().isEmpty()) {
                                             if (!donante_t_vereda.getText().isEmpty()) {
                                                 if (!donante_t_finca.getText().isEmpty()) {
                                                     return true;
                                                 }else{
                                                     JOptionPane.showMessageDialog(this,"EL CAMPO FINCA SE ENCUENTRA VACIO !","ERROR",JOptionPane.ERROR_MESSAGE);
                                                     return false;
                                                 }
                                             }else{
                                                 JOptionPane.showMessageDialog(this,"EL CAMPO VEREDA SE ENCUENTRA VACIO !","ERROR",JOptionPane.ERROR_MESSAGE);
                                                 return false;
                                             }
                                         }else{
                                             JOptionPane.showMessageDialog(this,"EL CAMPO MUNICIPIO SE ENCUENTRA VACIO !","ERROR",JOptionPane.ERROR_MESSAGE);
                                             return false;
                                         }
                                     }else{
                                         JOptionPane.showMessageDialog(this,"EL DEPARTAMENTO SELECCIONADO NO ES VALIDO ! !","ERROR",JOptionPane.ERROR_MESSAGE);
                                         return false;
                                     }
                                 }else{
                                     JOptionPane.showMessageDialog(this,"EL CAMPO DIRECCION SE ENCUENTRA VACIO !","ERROR",JOptionPane.ERROR_MESSAGE);
                                     return false;
                                     
                                 }
                             }else{
                                 JOptionPane.showMessageDialog(this,"EL CAMPO TELEFONO SE ENCUENTRA VACIO !","ERROR",JOptionPane.ERROR_MESSAGE);
                                 return false;
                             }
                         }else{
                             JOptionPane.showMessageDialog(this,"EL CAMPO NOMBRE SE ENCUENTRA VACIO !","ERROR",JOptionPane.ERROR_MESSAGE);
                             return false;
                         }
                     }else{
                         JOptionPane.showMessageDialog(this,"LA EMPRESA SELECCIONADA NO ES VALIDA !","ERROR",JOptionPane.ERROR_MESSAGE);
                         return false;
                     }
                 }else{
                   JOptionPane.showMessageDialog(this,"EL CODIGO DIGITADO SE ENCUENTRA REGISTRADO EN LA B.D !","ERROR",JOptionPane.ERROR_MESSAGE); 
                   return false;
                           
                 }} catch (SQLException ex) {
                 Logger.getLogger(Accesador.class.getName()).log(Level.SEVERE, null, ex);
                 return false;
             }
             }else{
                     JOptionPane.showMessageDialog(this,"EL CAMPO CODIGO SE ENCUENTRA VACIO !","ERROR",JOptionPane.ERROR_MESSAGE); 
                     return false;
                 }
     }
    //DONANTES
    
    //COPAS
    public final void EMPEZAR_COPAS(){
                 Gestion_Copa gc = new Gestion_Copa();
        this.copa_tabla.setModel(gc.LISTARTABLA());
    
        this.copas_CB_colector.setModel(gc.LISTARJCOMBOBOX("colectores","").getModel());
        this.copas_CB_departamento.setModel(gc.LISTARJCOMBOBOX("departamentos","").getModel());
        this.copas_CB_colector.requestFocus();
        FormatoTabla ft = new FormatoTabla(10,"0");
        this.copa_tabla.setDefaultRenderer (Object.class, ft );
        this.copas_radio_b_donante.setSelected(true);
        COPAS_COLUMNAS="nombre";
        this.copas_t_filtrar_copas_por.requestFocus();
        this.copa_tabla.setShowHorizontalLines(true);
        this.copa_tabla.setShowVerticalLines(true);
        
        
           }
    
    public void COPAS_ENLAZAR(){
if(!(this.copas_T_codcopa.getText().isEmpty())){
    
 String cod_copa=(this.copas_T_codcopa.getText()); 
 ResultSet rs;
 Connection con = new Conexion().getCon();
 
    try {
        rs= con.createStatement().executeQuery("select  COPAS.cod_copa,colectores.nombre,DONANTE_COPAS.NOMBRE from COPAS INNER JOIN DONANTE_COPAS ON COPAS.COD_DONANTE=DONANTE_COPAS.COD_DONANTE INNER JOIN COLECTORES ON COPAS.IDENTIFICACION_COLECTOR=COLECTORES.IDENTIFICACION_COLECTOR where cod_copa= "+this.copas_T_codcopa.getText()+";");
        if (rs.next()) {
         
         
         arbol_T_colector_copa.setText(rs.getString(2));
         arbol_T_donante_copa.setText(rs.getString(3));
         arbol_T_cod_copa.setText(copas_T_codcopa.getText());
         if (!(arbol_T_cod_copa.getText().isEmpty())&&!(arbol_T_cod_patron.getText().isEmpty())) {
            arbol_T_codiigo_arbol.setText("C"+arbol_T_cod_copa.getText()+" - "+"P"+arbol_T_cod_patron.getText());
           ARBOL_CONTROL="C"+arbol_T_cod_copa.getText()+" - "+"P"+arbol_T_cod_patron.getText();
        }
         
         
        }
        
 
    } catch (SQLException ex) {
        Logger.getLogger(D_Seleccion_Donante_Copas.class.getName()).log(Level.SEVERE, null, ex);
    }
 
 }
}
    
    
    public void COPAS_CARGAR_PROXIMMO_COD_COPA(){
     
     try {
         
        ResultSet RS;
        PreparedStatement PS;
        Connection Con = new Conexion().getCon();
        RS = Con.createStatement().executeQuery("SELECT U_COD_COPA FROM ULTIMOS;");
        if (RS.next()) {
            
        COPAS_U_COD_COPA= RS.getInt(1);

        }else{
           COPAS_U_COD_COPA=0 ;
        }
        int proxima_copa = COPAS_U_COD_COPA;
        proxima_copa++;
        
        Gestion_Copa gc = new Gestion_Copa();
       String njda= gc.numeros(String.valueOf(proxima_copa));
        this.copas_T_codcopa.setText(njda);
       
        
    } catch (SQLException ex) {
        Logger.getLogger(Accesador.class.getName()).log(Level.SEVERE, null, ex);
    }
     
 }
    public void COPAS_LIMPIAR(){
       Gestion_Copa gc= new Gestion_Copa();
                            this.copas_T_codcopa.setText("");
                            this.copas_T_nombreaccesion.setText("");
                            this.copas_T_estadoaccesion.setText("");
                            this.copas_T_fuentecoleccion.setText("");
                            this.copas_T_municipio.setText("");
                            this.copas_T_vereda.setText("");
                            this.copas_T_finca.setText("");
                            this.copas_T_dap.setText("");
                            this.copas_T_nombrecultivo.setText("");
                            this.copas_T_altura.setText("");
                            this.copas_T_latitud.setText("");
                            this.copas_T_longitud.setText("");
                            this.copas_T_altitud.setText("");
                            this.copas_T_especie.setText("");
                            this.copas_T_genero.setText("");
                            this.copas_T_donante.setText("");
                            this.copas_DT_fecha.setDate(null);
                            this.copas_CB_colector.setSelectedIndex(0);
                            this.copas_CB_departamento.setSelectedIndex(0);
                            this.copas_TA_observaciones.setText("");
                            copas_L_muestraenlacescopa.setText("");
                            this.copa_tabla.setModel(gc.LISTARTABLA());
   }
    public boolean COPAS_VALIDATE_SAVE(){
               if (!copas_T_codcopa.getText().isEmpty()) {
           if (!(copas_CB_colector.getSelectedIndex()==0)) {
             if (!copas_T_donante.getText().isEmpty()) {
                 if (!(copas_DT_fecha.getDate()==null)){
                     if (!copas_T_nombrecultivo.getText().isEmpty()) {
                         if (!copas_T_nombreaccesion.getText().isEmpty()) {
                             if (!copas_T_estadoaccesion.getText().isEmpty()) {
                                 if (!copas_T_latitud.getText().isEmpty()) {
                                     if (!copas_T_longitud.getText().isEmpty()) {
                                         if (!copas_T_altitud.getText().isEmpty()) {
                                             if (!copas_T_genero.getText().isEmpty()) {
                                                 if (!copas_T_especie.getText().isEmpty()) {
                                                     if (!copas_T_dap.getText().isEmpty()) {
                                                         if (! copas_T_altura.getText().isEmpty()) {
                                                            return true;
                                                         }else{
                                                             JOptionPane.showMessageDialog(this,"EL CAMPO ALTURA ESTA VACIO !","ERROR",JOptionPane.ERROR_MESSAGE);
                                                             return false;
                                                         }
                                                     }else{
                                                             JOptionPane.showMessageDialog(this,"EL CAMPO D_A_P ESTA VACIO !","ERROR",JOptionPane.ERROR_MESSAGE);
                                                             return false;
                                                         }
                                                 }else{
                                                             JOptionPane.showMessageDialog(this,"EL CAMPO ESPECIE ESTA VACIO !","ERROR",JOptionPane.ERROR_MESSAGE);
                                                             return false;
                                                         }
                                             }else{
                                                             JOptionPane.showMessageDialog(this,"EL CAMPO GENERO ESTA VACIO !","ERROR",JOptionPane.ERROR_MESSAGE);
                                                             return false;
                                                         }
   
                                         }else{
                                                             JOptionPane.showMessageDialog(this,"EL CAMPO ALTITUD ESTA VACIO !","ERROR",JOptionPane.ERROR_MESSAGE);
                                                             return false;
                                                         }
                                     }else{
                                                             JOptionPane.showMessageDialog(this,"EL CAMPO LONGITUD ESTA VACIO !","ERROR",JOptionPane.ERROR_MESSAGE);
                                                             return false;
                                                         }
                                 }else{
                                                             JOptionPane.showMessageDialog(this,"EL CAMPO LATITUD ESTA VACIO !","ERROR",JOptionPane.ERROR_MESSAGE);
                                                             return false;
                                                         }
                             }else{
                                                             JOptionPane.showMessageDialog(this,"EL CAMPO ESTADO_C_ACCESION ESTA VACIO !","ERROR",JOptionPane.ERROR_MESSAGE);
                                                             return false;
                                                         }
   
                         
                     }else{
                                                             JOptionPane.showMessageDialog(this,"EL CAMPO NOMBRE_C_ACCESION ESTA VACIO !","ERROR",JOptionPane.ERROR_MESSAGE);
                                    return false;
                                                         }
                 }else{
                                                             JOptionPane.showMessageDialog(this,"EL CAMPO NOMBRE_C_CULTIVO ESTA VACIO !","ERROR",JOptionPane.ERROR_MESSAGE);
                                    return false;
                                                         }
            
        }else{
                                                             JOptionPane.showMessageDialog(this,"EL CAMPO FECHA_COLECCION ESTA VACIO !","ERROR",JOptionPane.ERROR_MESSAGE);
                                    return false;
                                                         }

        }else{
                                                             JOptionPane.showMessageDialog(this,"SELECCIONE UN DONANTE  !","ERROR",JOptionPane.ERROR_MESSAGE);
                                    return false;
                                                         }
        }else{
                                                             JOptionPane.showMessageDialog(this,"SELECCIONE UN COLECTOR VALIDO !","ERROR",JOptionPane.ERROR_MESSAGE);
                                    return false;
                                                         }

 
   }else{
                                                             JOptionPane.showMessageDialog(this,"EL CAMPO COD_COPA ESTA VACIO, POR FAVOR PRESIONE EL BOTON 'NUEVO' !","ERROR",JOptionPane.ERROR_MESSAGE);
                                    return false;
                                                         }
               
 }
    public void COPAS_SAVE(){
            Connection Con = new Conexion().getCon(); 
            ResultSet rs; 
            Copas c = new Copas(); 
            Gestion_Copa gc = new Gestion_Copa();
            try {
                rs= Con.createStatement().executeQuery("Select identificacion_colector from colectores where nombre = '"+String.valueOf(this.copas_CB_colector.getSelectedItem()+"';"));
                if (rs.next()) {
                    c.setCod_Copa(Integer.parseInt(this.copas_T_codcopa.getText()));
                    c.setIdentificacion_colector(rs.getLong(1));
                    c.setCod_Donante(this.copas_T_donante.getText());
                    c.setEstado_Enlazado(0);
                    c.setFecha_Colecta(this.copas_DT_fecha.getDate());
                    c.setNombre_C_Cultivo(this.copas_T_nombrecultivo.getText());
                    c.setNombre_Comun_Accesion(this.copas_T_nombreaccesion.getText());
                    c.setEstado_Accesion(this.copas_T_estadoaccesion.getText());
                    c.setFuente_Coleccion(this.copas_T_fuentecoleccion.getText());
                    c.setLatitud(this.copas_T_latitud.getText());
                    c.setLongitud(this.copas_T_longitud.getText());
                    c.setAltitud(this.copas_T_altitud.getText());
                    c.setGenero(this.copas_T_genero.getText());
                    c.setEspecie(this.copas_T_especie.getText());
                    c.setD_A_P(this.copas_T_dap.getText());
                    c.setAltura(this.copas_T_altura.getText());
                    c.setObservaciones(this.copas_TA_observaciones.getText()); 
                    Gestion_Ultimos gu= new Gestion_Ultimos();
                    Ultimos u = new Ultimos();
                    u.setU_cod_copa(Integer.parseInt(this.copas_T_codcopa.getText()));
                    gu.ACTUALIZAR_ULTIMA_COPA(u,this.COPAS_U_COD_COPA);
                    if (gc.GUARDAR(c)==true) {
                        JOptionPane.showMessageDialog(this,"COPA REGISTRADA!");
                        COPAS_LIMPIAR();
                        
                    }

                }
            } catch (SQLException ex) {
               JOptionPane.showMessageDialog(this, "ERROR "+ ex.toString());
            }
   }
    public void COPAS_CARGARTABLA(){
        ResultSet rs;
        Connection con = new Conexion().getCon();
        Gestion_Copa gc= new Gestion_Copa();
        try {
            rs=con.createStatement().executeQuery("select copas.cod_copa,colectores.nombre,donante_copas.cod_donante,donante_copas.departamento,donante_copas.municipio,donante_copas.vereda,donante_copas.finca,copas.fecha_colecta,copas.nombre_c_cultivo,copas.nombre_c_accesion,copas.estado_accesion,copas.fuente_coleccion,copas.latitud,copas.longitud,copas.altitud,copas.genero,copas.especie,copas.d_a_p,copas.altura,copas.observaciones,copas.estado_enlazado from copas inner join donante_copas on donante_copas.cod_donante=copas.cod_donante inner join colectores on colectores.identificacion_colector=copas.identificacion_colector where  copas.cod_copa ='"+((String.valueOf(this.copa_tabla.getValueAt(this.copa_tabla.getSelectedRow(),0))))+"';");
            if (rs.next()) {
               this.copas_T_codcopa.setText((String.valueOf(this.copa_tabla.getValueAt(this.copa_tabla.getSelectedRow(),0)))); 
                this.copas_CB_colector.setSelectedItem(rs.getString(2));
                String codigo= gc.numeros(gc.numeros(String.valueOf(rs.getString(3))));
                this.copas_T_donante.setText(codigo);
                this.copas_CB_departamento.setSelectedItem(rs.getString(4));
                this.copas_T_municipio.setText(String.valueOf(rs.getString(5)));
                this.copas_T_vereda.setText(rs.getString(6));
                this.copas_T_finca.setText(rs.getString(7));
                this.copas_DT_fecha.setDate(rs.getDate(8));
                this.copas_T_nombrecultivo.setText(rs.getString(9));
                this.copas_T_nombreaccesion.setText(rs.getString(10));
                this.copas_T_estadoaccesion.setText(rs.getString(11));
                this.copas_T_fuentecoleccion.setText(rs.getString(12));
                this.copas_T_latitud.setText(rs.getString(13));
                this.copas_T_longitud.setText(rs.getString(14));
                this.copas_T_altitud.setText(rs.getString(15));
                this.copas_T_genero.setText(rs.getString(16));
                this.copas_T_especie.setText(rs.getString(17));
                this.copas_T_dap.setText(rs.getString(18));
                this.copas_T_altura.setText(rs.getString(19));
                this.copas_TA_observaciones.setText(rs.getString(20));
                this.copas_L_muestraenlacescopa.setText(rs.getString(21));
                

            }

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this,"ERROR "+ ex);
        }
   }
    public void COPAS_UPDATE(){
        ResultSet rs;
        Connection con = new Conexion().getCon();
        Copas c = new Copas();
        Gestion_Copa gc=new Gestion_Copa();
        try {
            
                    rs=con.createStatement().executeQuery("select identificacion_colector from colectores where nombre= '"+String.valueOf(this.copas_CB_colector.getSelectedItem())+"';");
                    if (rs.next()) {
                        c.setCod_Copa(Integer.parseInt(this.copas_T_codcopa.getText()));
                        c.setIdentificacion_colector(rs.getLong(1));
                        c.setCod_Donante(this.copas_T_donante.getText());
                        c.setFecha_Colecta(this.copas_DT_fecha.getDate());
                        c.setNombre_C_Cultivo(this.copas_T_nombrecultivo.getText());
                        c.setNombre_Comun_Accesion(this.copas_T_nombreaccesion.getText());
                        c.setEstado_Accesion(this.copas_T_estadoaccesion.getText());
                        c.setFuente_Coleccion(this.copas_T_fuentecoleccion.getText());
                        c.setLatitud(this.copas_T_latitud.getText());
                        c.setLongitud(this.copas_T_longitud.getText());
                        c.setAltitud(this.copas_T_altitud.getText());
                        c.setGenero(this.copas_T_genero.getText());
                        c.setEspecie(this.copas_T_especie.getText());
                        c.setD_A_P(this.copas_T_dap.getText());
                        c.setAltura(this.copas_T_altura.getText());
                        c.setObservaciones(this.copas_TA_observaciones.getText());
                        c.setEstado_Enlazado(Integer.parseInt(this.copas_L_muestraenlacescopa.getText()));
                        if(gc.ACTUALIZAR(c)){
                            JOptionPane.showMessageDialog(this,"ACTUALIZACION EXITOSA ","COMPLETADO",JOptionPane.INFORMATION_MESSAGE);
                          COPAS_LIMPIAR();

                        }
                    }
        } catch (SQLException ex) {
            Logger.getLogger(Accesador.class.getName()).log(Level.SEVERE, null, ex);
        }
           }
    public boolean COPAS_VALIDATE_UPDATE(){
       ResultSet rs;
       Connection con= new Conexion().getCon();
         if (!copas_T_codcopa.getText().isEmpty()) {
           try {
               rs=con.createStatement().executeQuery("SELECT * FROM COPAS WHERE COD_COPA = "+copas_T_codcopa.getText());
               if ( rs.next()) {
               if (!(copas_CB_colector.getSelectedIndex()==0)) {
                   if (!copas_T_donante.getText().isEmpty()) {
                       if (!(copas_DT_fecha.getDate()==null)){
                           if (!copas_T_nombrecultivo.getText().isEmpty()) {
                               if (!copas_T_nombreaccesion.getText().isEmpty()) {
                                   if (!copas_T_estadoaccesion.getText().isEmpty()) {
                                       if (!copas_T_latitud.getText().isEmpty()) {
                                           if (!copas_T_longitud.getText().isEmpty()) {
                                               if (!copas_T_altitud.getText().isEmpty()) {
                                                   if (!copas_T_genero.getText().isEmpty()) {
                                                       if (!copas_T_especie.getText().isEmpty()) {
                                                           if (!copas_T_dap.getText().isEmpty()) {
                                                               if (! copas_T_altura.getText().isEmpty()) {
                                                                   return true;
                                                               }else{
                                                                   JOptionPane.showMessageDialog(this,"EL CAMPO ALTURA ESTA VACIO !","ERROR",JOptionPane.ERROR_MESSAGE);
                                                                   return false;
                                                               }
                                                           }else{
                                                               JOptionPane.showMessageDialog(this,"EL CAMPO D_A_P ESTA VACIO !","ERROR",JOptionPane.ERROR_MESSAGE);
                                                               return false;
                                                           }
                                                       }else{
                                                           JOptionPane.showMessageDialog(this,"EL CAMPO ESPECIE ESTA VACIO !","ERROR",JOptionPane.ERROR_MESSAGE);
                                                           return false;
                                                       }
                                                   }else{
                                                       JOptionPane.showMessageDialog(this,"EL CAMPO GENERO ESTA VACIO !","ERROR",JOptionPane.ERROR_MESSAGE);
                                                       return false;
                                                   }
                                                   
                                               }else{
                                                   JOptionPane.showMessageDialog(this,"EL CAMPO ALTITUD ESTA VACIO !","ERROR",JOptionPane.ERROR_MESSAGE);
                                                   return false;
                                               }
                                           }else{
                                               JOptionPane.showMessageDialog(this,"EL CAMPO LONGITUD ESTA VACIO !","ERROR",JOptionPane.ERROR_MESSAGE);
                                               return false;
                                           }
                                       }else{
                                           JOptionPane.showMessageDialog(this,"EL CAMPO LATITUD ESTA VACIO !","ERROR",JOptionPane.ERROR_MESSAGE);
                                           return false;
                                       }
                                   }else{
                                       JOptionPane.showMessageDialog(this,"EL CAMPO ESTADO_C_ACCESION ESTA VACIO !","ERROR",JOptionPane.ERROR_MESSAGE);
                                       return false;
                                   }
                                   
                                   
                               }else{
                                   JOptionPane.showMessageDialog(this,"EL CAMPO NOMBRE_C_ACCESION ESTA VACIO !","ERROR",JOptionPane.ERROR_MESSAGE);
                                   return false;
                               }
                           }else{
                               JOptionPane.showMessageDialog(this,"EL CAMPO NOMBRE_C_CULTIVO ESTA VACIO !","ERROR",JOptionPane.ERROR_MESSAGE);
                               return false;
                           }
                           
                       }else{
                           JOptionPane.showMessageDialog(this,"EL CAMPO FECHA_COLECCION ESTA VACIO !","ERROR",JOptionPane.ERROR_MESSAGE);
                           return false;
                       }
                       
                   }else{
                       JOptionPane.showMessageDialog(this,"SELECCIONE UN DONANTE  !","ERROR",JOptionPane.ERROR_MESSAGE);
                       return false;
                   }
               }else{
                   JOptionPane.showMessageDialog(this,"SELECCIONE UN COLECTOR VALIDO !","ERROR",JOptionPane.ERROR_MESSAGE);
                   return false;
               }
                   }else{
                   JOptionPane.showMessageDialog(this,"ESTA COPA NO SE ENCUENTRA EN LA B.D !","ERROR",JOptionPane.ERROR_MESSAGE);
                   return false;
               }
           } catch (SQLException ex) {
               Logger.getLogger(Accesador.class.getName()).log(Level.SEVERE, null, ex);
               return false;
           }

 
   }else{
      JOptionPane.showMessageDialog(this,"EL CAMPO COD_COPA ESTA VACIO, !","ERROR",JOptionPane.ERROR_MESSAGE);
                                    return false;
                                                         }
      
   }
    //COPAS
    
    //PATRONES
    public final void EMPEZAR_PATRONES(){
        Gestion_Patron gp = new Gestion_Patron();
        patrones_tabla.setModel(gp.LISTARTABLA());
        patornes_CB_colector.setModel(gp.LISTARJCOMBOBOX("colectores","").getModel());
        patornes_CB_departamento.setModel(gp.LISTARJCOMBOBOX("departamentos","").getModel());
        FormatoTabla ft = new FormatoTabla(10,"0");
        patrones_tabla.setDefaultRenderer (Object.class, ft );
        patrones_RB_donantre.setSelected(true);
        PATRONES_COLUMNAS="nombre";
        patrones_T_filtrarpatronespor.requestFocus();
        patrones_tabla.setShowHorizontalLines(true);
        patrones_tabla.setShowVerticalLines(true);
    }
    
    public void PATRONES_ENLAZAR(){
        
if(!(this.patornes_T_cod_patron.getText().isEmpty())){
    
 String cod_patron=(this.patornes_T_cod_patron.getText()); 
 ResultSet rs;
 Connection con = new Conexion().getCon();
 
    try {
        rs= con.createStatement().executeQuery("select  PATRONES.cod_PATRON,colectores.nombre,DONANTE_PATRONES.NOMBRE from patrones INNER JOIN DONANTE_PATRONES ON patrones.COD_DONANTE=DONANTE_PATRONES.COD_DONANTE INNER JOIN COLECTORES ON patrones.IDENTIFICACION_COLECTOR=COLECTORES.IDENTIFICACION_COLECTOR where cod_patron= "+patornes_T_cod_patron.getText()+";");
        if (rs.next()) {
         
         
         arbol_T_colector_patron.setText(rs.getString(2));
         arbol_T_donante_patron.setText(rs.getString(3));
         arbol_T_cod_patron.setText(patornes_T_cod_patron.getText());
          if (!(arbol_T_cod_copa.getText().isEmpty())&&!(arbol_T_cod_patron.getText().isEmpty())) {
            arbol_T_codiigo_arbol.setText("C"+arbol_T_cod_copa.getText()+" - "+"P"+arbol_T_cod_patron.getText());
        }
         
        }
        
 
    } catch (SQLException ex) {
        Logger.getLogger(D_Seleccion_Donante_Patrones.class.getName()).log(Level.SEVERE, null, ex);
    }
 
 }
    
}
    
   public void PATRONES_CARGAR_PROXIMMO_COD_PATRON(){
     
     try {
         
        ResultSet RS;
        PreparedStatement PS;
        Connection Con = new Conexion().getCon();
        RS = Con.createStatement().executeQuery("SELECT U_COD_PATRON FROM ULTIMOS;");
        if (RS.next()) {
            
        PATRONES_U_COD_PATRON= RS.getInt(1);

        }else{
           PATRONES_U_COD_PATRON=0 ;
        }
        int proximo_patron = PATRONES_U_COD_PATRON;
        proximo_patron++;
        
        Gestion_Patron gp = new Gestion_Patron();
       String njda= gp.numeros(String.valueOf(proximo_patron));
        this.patornes_T_cod_patron.setText(njda);
       
        
    } catch (SQLException ex) {
        Logger.getLogger(Accesador.class.getName()).log(Level.SEVERE, null, ex);
    }
     
 }
   public void PATRONES_LIMPIAR(){
     Gestion_Patron gp = new Gestion_Patron();
      this.patornes_T_cod_patron.setText("");
        this.patornes_T_nombre_c_accesion.setText("");
        this.patornes_T_estado_accesion.setText("");
        this.patornes_T_fuente_colecicon.setText("");                               
        this.patornes_T_municipio.setText("");
        this.patornes_T_dap.setText("");
        this.patornes_T_nombre_c_cultivo.setText("");
        this.patornes_T_altura.setText("");
        this.patornes_T_latitud.setText("");
        this.patornes_T_longitud.setText("");
        this.patornes_T_altitud.setText("");
        this.patornes_T_especie.setText("");
        this.patornes_T_genero.setText("");
        this.patornes_T_donante.setText("");
        this.patornes_CB_colector.setSelectedIndex(0);
        this.patornes_CB_departamento.setSelectedIndex(0);
        this.patornes_T_finca.setText("");
        this.patornes_T_vereda.setText("");
        this.patornes_TA_observaciones.setText("");
        this.patornes_D_fecha.setDate(null);
        patornes_L_mostrar_numerodeenlaces.setText("");
        this.patrones_tabla.setModel(gp.LISTARTABLA());
        
         
                      
 }
   public boolean PATRONES_VALIDATE_SAVE(){
               if (!patornes_T_cod_patron.getText().isEmpty()) {
           if (!(patornes_CB_colector.getSelectedIndex()==0)) {
             if (!patornes_T_donante.getText().isEmpty()) {
                 if (!(patornes_D_fecha.getDate()==null)){
                     if (!patornes_T_nombre_c_cultivo.getText().isEmpty()) {
                         if (!patornes_T_nombre_c_accesion.getText().isEmpty()) {
                             if (!patornes_T_estado_accesion.getText().isEmpty()) {
                                 if (!patornes_T_latitud.getText().isEmpty()) {
                                     if (!patornes_T_longitud.getText().isEmpty()) {
                                         if (!patornes_T_altitud.getText().isEmpty()) {
                                             if (!patornes_T_genero.getText().isEmpty()) {
                                                 if (!patornes_T_especie.getText().isEmpty()) {
                                                     if (!patornes_T_dap.getText().isEmpty()) {
                                                         if (! patornes_T_altura.getText().isEmpty()) {
                                                            return true;
                                                         }else{
                                                             JOptionPane.showMessageDialog(this,"EL CAMPO ALTURA ESTA VACIO !","ERROR",JOptionPane.ERROR_MESSAGE);
                                                             return false;
                                                         }
                                                     }else{
                                                             JOptionPane.showMessageDialog(this,"EL CAMPO D_A_P ESTA VACIO !","ERROR",JOptionPane.ERROR_MESSAGE);
                                                             return false;
                                                         }
                                                 }else{
                                                             JOptionPane.showMessageDialog(this,"EL CAMPO ESPECIE ESTA VACIO !","ERROR",JOptionPane.ERROR_MESSAGE);
                                                             return false;
                                                         }
                                             }else{
                                                             JOptionPane.showMessageDialog(this,"EL CAMPO GENERO ESTA VACIO !","ERROR",JOptionPane.ERROR_MESSAGE);
                                                             return false;
                                                         }
   
                                         }else{
                                                             JOptionPane.showMessageDialog(this,"EL CAMPO ALTITUD ESTA VACIO !","ERROR",JOptionPane.ERROR_MESSAGE);
                                                             return false;
                                                         }
                                     }else{
                                                             JOptionPane.showMessageDialog(this,"EL CAMPO LONGITUD ESTA VACIO !","ERROR",JOptionPane.ERROR_MESSAGE);
                                                             return false;
                                                         }
                                 }else{
                                                             JOptionPane.showMessageDialog(this,"EL CAMPO LATITUD ESTA VACIO !","ERROR",JOptionPane.ERROR_MESSAGE);
                                                             return false;
                                                         }
                             }else{
                                                             JOptionPane.showMessageDialog(this,"EL CAMPO ESTADO_C_ACCESION ESTA VACIO !","ERROR",JOptionPane.ERROR_MESSAGE);
                                                             return false;
                                                         }
   
                         
                     }else{
                                                             JOptionPane.showMessageDialog(this,"EL CAMPO NOMBRE_C_ACCESION ESTA VACIO !","ERROR",JOptionPane.ERROR_MESSAGE);
                                    return false;
                                                         }
                 }else{
                                                             JOptionPane.showMessageDialog(this,"EL CAMPO NOMBRE_C_CULTIVO ESTA VACIO !","ERROR",JOptionPane.ERROR_MESSAGE);
                                    return false;
                                                         }
            
        }else{
                                                             JOptionPane.showMessageDialog(this,"EL CAMPO FECHA_COLECCION ESTA VACIO !","ERROR",JOptionPane.ERROR_MESSAGE);
                                    return false;
                                                         }

        }else{
                                                             JOptionPane.showMessageDialog(this,"SELECCIONE UN DONANTE  !","ERROR",JOptionPane.ERROR_MESSAGE);
                                    return false;
                                                         }
        }else{
                                                             JOptionPane.showMessageDialog(this,"SELECCIONE UN COLECTOR VALIDO !","ERROR",JOptionPane.ERROR_MESSAGE);
                                    return false;
                                                         }

 
   }else{
                                                             JOptionPane.showMessageDialog(this,"EL CAMPO COD_PATRON ESTA VACIO, POR FAVOR PRESIONE EL BOTON 'NUEVO' !","ERROR",JOptionPane.ERROR_MESSAGE);
                                    return false;
                                                         }
               
 }
   public void PATRONEES_SAVE(){
            Connection Con = new Conexion().getCon(); 
            ResultSet rs; 
            Patrones p = new Patrones(); 
            Gestion_Patron gp = new Gestion_Patron();
            try {
                rs= Con.createStatement().executeQuery("Select identificacion_colector from colectores where nombre = '"+String.valueOf(patornes_CB_colector.getSelectedItem()+"';"));
                if (rs.next()) {
                    p.setCod_Patron(Integer.parseInt(patornes_T_cod_patron.getText()));
                    p.setIdentificacion_colector(rs.getLong(1));
                    p.setCod_Donante(patornes_T_donante.getText());
                    p.setEstado_Enlazado(0);
                    p.setFecha_Colecta(patornes_D_fecha.getDate());
                    p.setNombre_C_Cultivo(patornes_T_nombre_c_cultivo.getText());
                    p.setNombre_Comun_Accesion(patornes_T_nombre_c_accesion.getText());
                    p.setEstado_Accesion(patornes_T_estado_accesion.getText());
                    p.setFuente_Coleccion(patornes_T_fuente_colecicon.getText());
                    p.setLatitud(patornes_T_latitud.getText());
                    p.setLongitud(patornes_T_longitud.getText());
                    p.setAltitud(patornes_T_altitud.getText());
                    p.setGenero(patornes_T_genero.getText());
                    p.setEspecie(patornes_T_especie.getText());
                    p.setD_A_P(patornes_T_dap.getText());
                    p.setAltura(patornes_T_altura.getText());
                    p.setObservaciones(patornes_TA_observaciones.getText()); 
                    Gestion_Ultimos gu= new Gestion_Ultimos();
                    Ultimos u = new Ultimos();
                    u.setU_cod_patron(Integer.parseInt(patornes_T_cod_patron.getText()));
                    gu.ACTUALIZAR_ULTIMO_PATRON(u,PATRONES_U_COD_PATRON);
                    if (gp.GUARDAR(p)==true) {
                        JOptionPane.showMessageDialog(this,"PATRON REGISTRADO!");
                        PATRONES_LIMPIAR();
                        
                    }

                }
            } catch (SQLException ex) {
               JOptionPane.showMessageDialog(this, "ERROR "+ ex.toString());
            }
   }
   public void PATRONES_CARGARTABLA(){
        ResultSet rs;
        Connection con = new Conexion().getCon();
        Gestion_Patron gp= new Gestion_Patron();
        try {
            rs=con.createStatement().executeQuery("select PATRONES.cod_PATRON,colectores.nombre,donante_PATRONES.cod_donante,donante_PATRONES.departamento,donante_PATRONES.municipio,donante_PATRONES.vereda,donante_PATRONES.finca,PATRONES.fecha_colecta,PATRONES.nombre_c_cultivo,PATRONES.nombre_c_accesion,PATRONES.estado_accesion,PATRONES.fuente_coleccion,PATRONES.latitud,PATRONES.longitud,PATRONES.altitud,PATRONES.genero,PATRONES.especie,PATRONES.d_a_p,PATRONES.altura,PATRONES.observaciones,PATRONES.estado_enlazado from PATRONES inner join donante_PATRONES on donante_PATRONES.cod_donante=PATRONES.cod_donante inner join colectores on colectores.identificacion_colector=PATRONES.identificacion_colector where  PATRONES.cod_PATRON ='"+((String.valueOf(patrones_tabla.getValueAt(patrones_tabla.getSelectedRow(),0))))+"';");
            if (rs.next()) {
               patornes_T_cod_patron.setText((String.valueOf(patrones_tabla.getValueAt(patrones_tabla.getSelectedRow(),0)))); 
                patornes_CB_colector.setSelectedItem(rs.getString(2));
                String codigo= gp.numeros(gp.numeros(String.valueOf(rs.getString(3))));
                patornes_T_donante.setText(codigo);
                patornes_CB_departamento.setSelectedItem(rs.getString(4));
                patornes_T_municipio.setText(String.valueOf(rs.getString(5)));
                patornes_T_vereda.setText(rs.getString(6));
                patornes_T_finca.setText(rs.getString(7));
                patornes_D_fecha.setDate(rs.getDate(8));
                patornes_T_nombre_c_cultivo.setText(rs.getString(9));
                patornes_T_nombre_c_accesion.setText(rs.getString(10));
                patornes_T_estado_accesion.setText(rs.getString(11));
                patornes_T_fuente_colecicon.setText(rs.getString(12));
                patornes_T_latitud.setText(rs.getString(13));
                patornes_T_longitud.setText(rs.getString(14));
                patornes_T_altitud.setText(rs.getString(15));
                patornes_T_genero.setText(rs.getString(16));
                patornes_T_especie.setText(rs.getString(17));
                patornes_T_dap.setText(rs.getString(18));
                patornes_T_altura.setText(rs.getString(19));
                patornes_TA_observaciones.setText(rs.getString(20));
                patornes_L_mostrar_numerodeenlaces.setText(rs.getString(21));
                

            }

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this,"ERROR "+ ex);
        }
   }
   public void PATRONES_UPDATE(){
        ResultSet rs;
        Connection con = new Conexion().getCon();
        Patrones p = new Patrones();
        Gestion_Patron gp=new Gestion_Patron();
        try {
            
                    rs=con.createStatement().executeQuery("select identificacion_colector from colectores where nombre= '"+String.valueOf(patornes_CB_colector.getSelectedItem())+"';");
                    if (rs.next()) {
                        p.setCod_Patron(Integer.parseInt(patornes_T_cod_patron.getText()));
                        p.setIdentificacion_colector(rs.getLong(1));
                        p.setCod_Donante(patornes_T_donante.getText());
                        p.setFecha_Colecta(patornes_D_fecha.getDate());
                        p.setNombre_C_Cultivo(patornes_T_nombre_c_cultivo.getText());
                        p.setNombre_Comun_Accesion(patornes_T_nombre_c_accesion.getText());
                        p.setEstado_Accesion(patornes_T_estado_accesion.getText());
                        p.setFuente_Coleccion(patornes_T_fuente_colecicon.getText());
                        p.setLatitud(patornes_T_latitud.getText());
                        p.setLongitud(patornes_T_longitud.getText());
                        p.setAltitud(patornes_T_altitud.getText());
                        p.setGenero(patornes_T_genero.getText());
                        p.setEspecie(patornes_T_especie.getText());
                        p.setD_A_P(patornes_T_dap.getText());
                        p.setAltura(patornes_T_altura.getText());
                        p.setObservaciones(patornes_TA_observaciones.getText());
                        p.setEstado_Enlazado(Integer.parseInt(patornes_L_mostrar_numerodeenlaces.getText()));
                        if(gp.ACTUALIZAR(p)){
                            JOptionPane.showMessageDialog(this,"ACTUALIZACION EXITOSA ","COMPLETADO",JOptionPane.INFORMATION_MESSAGE);
                          PATRONES_LIMPIAR();

                        }
                    }
        } catch (SQLException ex) {
            Logger.getLogger(Accesador.class.getName()).log(Level.SEVERE, null, ex);
        }
           }
   public boolean PATRONES_VALIDATE_UPDATE(){
       ResultSet rs;
       Connection con= new Conexion().getCon();
         if (!patornes_T_cod_patron.getText().isEmpty()) {
           try {
               rs=con.createStatement().executeQuery("SELECT * FROM patrones WHERE cod_patron = "+patornes_T_cod_patron.getText());
               if ( rs.next()) {
               if (!(patornes_CB_colector.getSelectedIndex()==0)) {
                   if (!patornes_T_donante.getText().isEmpty()) {
                       if (!(patornes_D_fecha.getDate()==null)){
                           if (!patornes_T_nombre_c_cultivo.getText().isEmpty()) {
                               if (!patornes_T_nombre_c_accesion.getText().isEmpty()) {
                                   if (!patornes_T_estado_accesion.getText().isEmpty()) {
                                       if (!patornes_T_latitud.getText().isEmpty()) {
                                           if (!patornes_T_longitud.getText().isEmpty()) {
                                               if (!patornes_T_altitud.getText().isEmpty()) {
                                                   if (!patornes_T_genero.getText().isEmpty()) {
                                                       if (!patornes_T_especie.getText().isEmpty()) {
                                                           if (!patornes_T_dap.getText().isEmpty()) {
                                                               if (! patornes_T_altura.getText().isEmpty()) {
                                                                   return true;
                                                               }else{
                                                                   JOptionPane.showMessageDialog(this,"EL CAMPO ALTURA ESTA VACIO !","ERROR",JOptionPane.ERROR_MESSAGE);
                                                                   return false;
                                                               }
                                                           }else{
                                                               JOptionPane.showMessageDialog(this,"EL CAMPO D_A_P ESTA VACIO !","ERROR",JOptionPane.ERROR_MESSAGE);
                                                               return false;
                                                           }
                                                       }else{
                                                           JOptionPane.showMessageDialog(this,"EL CAMPO ESPECIE ESTA VACIO !","ERROR",JOptionPane.ERROR_MESSAGE);
                                                           return false;
                                                       }
                                                   }else{
                                                       JOptionPane.showMessageDialog(this,"EL CAMPO GENERO ESTA VACIO !","ERROR",JOptionPane.ERROR_MESSAGE);
                                                       return false;
                                                   }
                                                   
                                               }else{
                                                   JOptionPane.showMessageDialog(this,"EL CAMPO ALTITUD ESTA VACIO !","ERROR",JOptionPane.ERROR_MESSAGE);
                                                   return false;
                                               }
                                           }else{
                                               JOptionPane.showMessageDialog(this,"EL CAMPO LONGITUD ESTA VACIO !","ERROR",JOptionPane.ERROR_MESSAGE);
                                               return false;
                                           }
                                       }else{
                                           JOptionPane.showMessageDialog(this,"EL CAMPO LATITUD ESTA VACIO !","ERROR",JOptionPane.ERROR_MESSAGE);
                                           return false;
                                       }
                                   }else{
                                       JOptionPane.showMessageDialog(this,"EL CAMPO ESTADO_C_ACCESION ESTA VACIO !","ERROR",JOptionPane.ERROR_MESSAGE);
                                       return false;
                                   }
                                   
                                   
                               }else{
                                   JOptionPane.showMessageDialog(this,"EL CAMPO NOMBRE_C_ACCESION ESTA VACIO !","ERROR",JOptionPane.ERROR_MESSAGE);
                                   return false;
                               }
                           }else{
                               JOptionPane.showMessageDialog(this,"EL CAMPO NOMBRE_C_CULTIVO ESTA VACIO !","ERROR",JOptionPane.ERROR_MESSAGE);
                               return false;
                           }
                           
                       }else{
                           JOptionPane.showMessageDialog(this,"EL CAMPO FECHA_COLECCION ESTA VACIO !","ERROR",JOptionPane.ERROR_MESSAGE);
                           return false;
                       }
                       
                   }else{
                       JOptionPane.showMessageDialog(this,"SELECCIONE UN DONANTE  !","ERROR",JOptionPane.ERROR_MESSAGE);
                       return false;
                   }
               }else{
                   JOptionPane.showMessageDialog(this,"SELECCIONE UN COLECTOR VALIDO !","ERROR",JOptionPane.ERROR_MESSAGE);
                   return false;
               }
                   }else{
                   JOptionPane.showMessageDialog(this,"ESTE PATRON NO SE ENCUENTRA EN LA B.D !","ERROR",JOptionPane.ERROR_MESSAGE);
                   return false;
               }
           } catch (SQLException ex) {
               Logger.getLogger(Accesador.class.getName()).log(Level.SEVERE, null, ex);
               return false;
           }

 
   }else{
      JOptionPane.showMessageDialog(this,"EL CAMPO COD_PATRON ESTA VACIO, !","ERROR",JOptionPane.ERROR_MESSAGE);
                                    return false;
                                                         }
      
   }
  
    //PATRONES

    //ARBOLES
public final void EMPEZAR_ARBOLES(){
    jLabel7.setText("CODIGO");
Gestion_Arboles ga= new Gestion_Arboles();

arbol_CB_departamento.setModel(ga.LISTARJCOMBOBOX("departamentos","").getModel());
arbol_CB_beneficiario.setModel(ga.LISTARJCOMBOBOX("beneficiarios", "").getModel());
arbol_tabla.setShowHorizontalLines(true);
arbol_tabla.setShowVerticalLines(true);
ARBOLES_LIMPIAR_CAMPOS();
}
    public void ARBOL_NUMEROS (String codigo){


       
                    if (codigo.length()==1) {
                       longitud= "0000";
                     }if (codigo.length()==2) {
                        longitud= "000";
                    }if (codigo.length()==3) {
                        longitud= "00";
                    }if (codigo.length()==4) {
                        longitud= "0";
                    }if (codigo.length()==5) {
                        longitud="";
                    }

}
  public void ARBOL_CARGAR_TABLA(){
    
        ResultSet rs;
        Connection Con = new Conexion().getCon();
        try {
            String codigo=String.valueOf(arbol_tabla.getValueAt(arbol_tabla.getSelectedRow(), 0));
            rs= Con.createStatement().executeQuery("select * from arboles where cod_control='"+codigo+"';");
            if (rs.next()) {
                
                String cod_beneficiario=rs.getString("IDENTIFICACION_CULTIVADOR");
                ARBOL_NUMEROS(rs.getString("cod_copa"));
                arbol_T_cod_copa.setText(longitud+rs.getString("cod_copa"));
                ARBOL_NUMEROS(rs.getString("cod_patron"));
                arbol_T_cod_patron.setText (longitud+rs.getString("cod_patron"));
                arbol_T_codiigo_arbol.setText(rs.getString("cod_arbol"));
                arbol_CB_departamento.setSelectedItem(rs.getString("departamento"));
                arbol_T_municipio.setText(rs.getString("municipio"));
                arbol_T_vereda.setText(rs.getString("vereda"));
                arbol_T_finca.setText(rs.getString("finca"));
                arbol_T_latitud.setText(rs.getString("latitud"));
                arbol_T_longitud.setText(rs.getString("longitud"));
                arbol_T_altitud.setText(rs.getString("altitud"));
                arbol_Ta_observacion.setText(rs.getString("observaciones"));
                arbol_L_muestra_codigo.setText(codigo);
                ARBOL_CODIGOINICIALCOPA=Integer.parseInt(arbol_T_cod_copa.getText());
                ARBOL_CODIGOINICIALPATRON=Integer.parseInt(arbol_T_cod_patron.getText());
                
                
                rs=Con.createStatement().executeQuery("select colectores.nombre, donante_copas.nombre from copas  inner join colectores on colectores.identificacion_colector=copas.identificacion_colector inner join donante_copas on donante_copas.cod_donante=copas.cod_donante where copas.cod_copa= "+arbol_T_cod_copa.getText()+";");
                if (rs.next()) {
                    arbol_T_colector_copa.setText(rs.getString(1));
                    arbol_T_donante_copa.setText(rs.getString(2));

                }else{
                    JOptionPane.showMessageDialog(this,"ERROR CON LA COPA","ERROR",JOptionPane.ERROR_MESSAGE);
                }
                rs=Con.createStatement().executeQuery("select colectores.nombre, donante_patrones.nombre from patrones  inner join colectores on colectores.identificacion_colector=patrones.identificacion_colector inner join donante_patrones on donante_patrones.cod_donante=patrones.cod_donante where cod_patron= "+arbol_T_cod_patron.getText()+";");
                if (rs.next()) {
                    arbol_T_colector_patron.setText(rs.getString(1));
                    arbol_T_donante_patron.setText(rs.getString(2));

                }else{
                    JOptionPane.showMessageDialog(this,"ERROR CON EL PATRON","ERROR",JOptionPane.ERROR_MESSAGE);
                }

                rs=Con.createStatement().executeQuery("select nombre from beneficiarios where identificacion_cultivador= "+cod_beneficiario+";");
                if (rs.next()) {
                    arbol_CB_beneficiario.setSelectedItem(rs.getString(1));

                }else{
                    JOptionPane.showMessageDialog(this,"ERROR CON EL BENEFICIARIO","ERROR",JOptionPane.ERROR_MESSAGE);
                }
                

            }
                   
        } catch (SQLException ex) {
            Logger.getLogger(Accesador.class.getName()).log(Level.SEVERE, null, ex);
        }
}
  public boolean ARBOL_VALIDAR_GUARDAR(){
     
     if (arbol_L_muestra_codigo.getText().isEmpty()) {
         if (!arbol_T_cod_copa.getText().isEmpty()&&!arbol_T_cod_patron.getText().isEmpty()) {
             if (!(arbol_CB_beneficiario.getSelectedIndex()==0)) {
                 if (!(arbol_CB_departamento.getSelectedIndex()==0)) {
                     if (!arbol_T_municipio.getText().isEmpty()) {
                         if (!arbol_T_vereda.getText().isEmpty()) {
                             if (!arbol_T_finca.getText().isEmpty()) {
                                 if (!arbol_T_latitud.getText().isEmpty()) {
                                     if (!arbol_T_longitud.getText().isEmpty()) {
                                         if (!arbol_T_altitud.getText().isEmpty()) {
                                              System.out.println("VALIDAR  RETURN TRUE");
                                             return true;
                                         }else{
                                             JOptionPane.showMessageDialog(this, "EL CAMPO ALTITUD ESTA VACIO !","ERROR",JOptionPane.ERROR_MESSAGE);
                                              System.out.println("VALIDAR  RETURN FALSE");
                                             return false;
                                         }
                                     }else{
                                         JOptionPane.showMessageDialog(this, "EL CAMPO LONGITUD ESTA VACIO !","ERROR",JOptionPane.ERROR_MESSAGE);
                                          System.out.println("VALIDAR  RETURN FALSE");
                                         return false;
                                     }
                                 }else{
                                     JOptionPane.showMessageDialog(this, "EL CAMPO LATITUD ESTA VACIO !","ERROR",JOptionPane.ERROR_MESSAGE);
                                      System.out.println("VALIDAR  RETURN FALSE");
                                     return false;
                                 }
                             }else{
                                 JOptionPane.showMessageDialog(this, "EL CAMPO FINCA ESTA VACIO !","ERROR",JOptionPane.ERROR_MESSAGE);
                                  System.out.println("VALIDAR  RETURN FALSE");
                                 return false;
                             }
                         }else{
                             JOptionPane.showMessageDialog(this, "EL CAMPO VEREDA ESTA VACIO !","ERROR",JOptionPane.ERROR_MESSAGE);
                              System.out.println("VALIDAR  RETURN FALSE");
                             return false;
                         }
                     }else{
                           JOptionPane.showMessageDialog(this, "EL CAMPO MUNICIPIO ESTA VACIO !","ERROR",JOptionPane.ERROR_MESSAGE);
                            System.out.println("VALIDAR  RETURN FALSE");
                           return false;
                     }
                 }else{
                       JOptionPane.showMessageDialog(this, "EL DEPARTAMENTO SELECCIONADO NO ES VALIDO !","ERROR",JOptionPane.ERROR_MESSAGE);
                        System.out.println("VALIDAR  RETURN FALSE");
                       return false;
                 }
             }else{
                   JOptionPane.showMessageDialog(this, "EL BENEFICIARIO SELECCIONADO NO ES VALIDO !","ERROR",JOptionPane.ERROR_MESSAGE);
                    System.out.println("VALIDAR  RETURN FALSE");
                   return false;
             }
         }else{
               JOptionPane.showMessageDialog(this, "DEBE SELECCIONAR UNA COPA + UN PATRON PARA PODER REGISTRAR UN ARBOL  !","ERROR",JOptionPane.ERROR_MESSAGE);
                System.out.println("VALIDAR  RETURN FALSE");
               return false;
         }
         
     }else{
           JOptionPane.showMessageDialog(this, "NO PUEDE GUARDAR UN ARBOL YA REGISTRADO; LIMPIE TODOS LOS CAMPOS \n Y PROCEDA A GUARDAR NUEVAMENTE !","ERROR",JOptionPane.ERROR_MESSAGE);
            System.out.println("VALIDAR  RETURN FALSE");
            return false;
     }
 }
  public void ARBOL_GUARDAR(){
            Connection Con = new Conexion().getCon();
            ResultSet rs;
            try {
                Gestion_Arboles ga= new Gestion_Arboles();
                Gestion_Copa gc= new Gestion_Copa();
                Gestion_Patron gp = new Gestion_Patron();
                Copas c = new Copas();
                Patrones p = new Patrones();
                Arboles a = new Arboles();
rs= Con.createStatement().executeQuery("Select identificacion_cultivador from beneficiarios where nombre = '"+String.valueOf(arbol_CB_beneficiario.getSelectedItem()+"';"));
                      if (rs.next()) {
                    a.setIdentificacion_Cultivador(rs.getLong(1));
                    a.setCod_Arbol(arbol_T_codiigo_arbol.getText());
                    a.setCod_Copa(Integer.parseInt(arbol_T_cod_copa.getText()));
                    a.setCod_Patron(Integer.parseInt(arbol_T_cod_patron.getText()));
                    a.setDepartamento(String.valueOf(arbol_CB_departamento.getSelectedItem()));
                    a.setMunicipio(arbol_T_municipio.getText());
                    a.setVereda(arbol_T_vereda.getText());
                    a.setFinca(arbol_T_finca.getText());
                    a.setLatitud(arbol_T_latitud.getText());
                    a.setLongitud(arbol_T_longitud.getText());
                    a.setAltitud(arbol_T_altitud.getText());
                    a.setObservaciones(arbol_Ta_observacion.getText());
                    if ((ga.GUARDAR(a))&&(gc.ACTUALIZARESTADO(c))&&(gp.ACTUALIZARESTADO(p))) {
                    ga.updateenlacescopa(Integer.parseInt(arbol_T_cod_copa.getText()));
                     ga.updateenlacespatron(Integer.parseInt(arbol_T_cod_patron.getText()));
                      JOptionPane.showMessageDialog(this,"ARBOL REGISTRADO!","FINALIZAR",JOptionPane.INFORMATION_MESSAGE);
                ARBOLES_LIMPIAR_CAMPOS();
                    }

            
                }
               
              
            } catch (SQLException ex) {
                Logger.getLogger(Accesador.class.getName()).log(Level.SEVERE, null, ex);
            }
}
  public void ARBOL_ACTUALIZAR(){
     try {
                ResultSet rs;
                Connection Con = new Conexion().getCon();
                rs= Con.createStatement().executeQuery("select identificacion_cultivador from beneficiarios where nombre='"+String.valueOf(arbol_CB_beneficiario.getSelectedItem())+"';");
                if (rs.next()) {
                    Arboles a = new Arboles();
                    Gestion_Arboles ga = new Gestion_Arboles();
                    a.setCod_control(Integer.parseInt(arbol_L_muestra_codigo.getText()));
                    a.setCod_Arbol(arbol_T_codiigo_arbol.getText());
                    a.setCod_Copa(Integer.parseInt(arbol_T_cod_copa.getText()));
                    a.setCod_Patron(Integer.parseInt(arbol_T_cod_patron.getText()));
                    a.setIdentificacion_Cultivador(rs.getLong(1));
                    a.setDepartamento(String.valueOf(arbol_CB_departamento.getSelectedItem()));
                    a.setMunicipio(arbol_T_municipio.getText());
                    a.setVereda(arbol_T_vereda.getText());
                    a.setFinca(arbol_T_finca.getText());
                    a.setLatitud(arbol_T_latitud.getText());
                    a.setLongitud(arbol_T_longitud.getText());
                    a.setAltitud(arbol_T_altitud.getText());
                    a.setObservaciones(arbol_Ta_observacion.getText());
                    
                    if (ga.ACTUALIZAR(a)) {
                        ga.updateenlacescopa(Integer.parseInt(arbol_T_cod_copa.getText()));
                        ga.updateenlacescopa(ARBOL_CODIGOINICIALCOPA);
                        ga.updateenlacespatron(Integer.parseInt(arbol_T_cod_patron.getText()));
                        ga.updateenlacespatron(ARBOL_CODIGOINICIALPATRON);
                        
                        JOptionPane.showMessageDialog(this,"ARBOL ACTUALIZADO.","FINALIZAR",JOptionPane.INFORMATION_MESSAGE);
                        ARBOLES_LIMPIAR_CAMPOS();

                    }
                }
            } catch (SQLException ex) {
                Logger.getLogger(Accesador.class.getName()).log(Level.SEVERE, null, ex);
            }
}
  public boolean ARBOL_VALIDAR_ACTUALIZAR(){
    if (!arbol_L_muestra_codigo.getText().isEmpty()) {
         if (!arbol_T_cod_copa.getText().isEmpty()&&!arbol_T_cod_patron.getText().isEmpty()) {
             if (!(arbol_CB_beneficiario.getSelectedIndex()==0)) {
                 if (!(arbol_CB_departamento.getSelectedIndex()==0)) {
                     if (!arbol_T_municipio.getText().isEmpty()) {
                         if (!arbol_T_vereda.getText().isEmpty()) {
                             if (!arbol_T_finca.getText().isEmpty()) {
                                 if (!arbol_T_latitud.getText().isEmpty()) {
                                     if (!arbol_T_longitud.getText().isEmpty()) {
                                         if (!arbol_T_altitud.getText().isEmpty()) {
                                            System.out.println("VALIDAR  RETURN TRUE");
                                             return true;
                                             
                                         }else{
                                             JOptionPane.showMessageDialog(this, "EL CAMPO ALTITUD ESTA VACIO !","ERROR",JOptionPane.ERROR_MESSAGE);
                                             System.out.println("VALIDAR  RETURN FALSE");
                                             return false;
                                         }
                                     }else{
                                         JOptionPane.showMessageDialog(this, "EL CAMPO LONGITUD ESTA VACIO !","ERROR",JOptionPane.ERROR_MESSAGE);
                                         System.out.println("VALIDAR  RETURN FALSE");
                                         return false;
                                     }
                                 }else{
                                     JOptionPane.showMessageDialog(this, "EL CAMPO LATITUD ESTA VACIO !","ERROR",JOptionPane.ERROR_MESSAGE);
                                     System.out.println("VALIDAR  RETURN FALSE");
                                     return false;
                                 }
                             }else{
                                 JOptionPane.showMessageDialog(this, "EL CAMPO FINCA ESTA VACIO !","ERROR",JOptionPane.ERROR_MESSAGE);
                                 System.out.println("VALIDAR  RETURN FALSE");
                                 return false;
                             }
                         }else{
                             JOptionPane.showMessageDialog(this, "EL CAMPO VEREDA ESTA VACIO !","ERROR",JOptionPane.ERROR_MESSAGE);
                             System.out.println("VALIDAR  RETURN FALSE");
                             return false;
                         }
                     }else{
                           JOptionPane.showMessageDialog(this, "EL CAMPO MUNICIPIO ESTA VACIO !","ERROR",JOptionPane.ERROR_MESSAGE);
                           System.out.println("VALIDAR  RETURN FALSE");
                           return false;
                     }
                 }else{
                       JOptionPane.showMessageDialog(this, "EL DEPARTAMENTO SELECCIONADO NO ES VALIDO !","ERROR",JOptionPane.ERROR_MESSAGE);
                       System.out.println("VALIDAR  RETURN FALSE");
                       return false;
                 }
             }else{
                   JOptionPane.showMessageDialog(this, "EL BENEFICIARIO SELECCIONADO NO ES VALIDO !","ERROR",JOptionPane.ERROR_MESSAGE);
                   System.out.println("VALIDAR  RETURN FALSE");
                   return false;
             }
         }else{
               JOptionPane.showMessageDialog(this, "DEBE SELECCIONAR UNA COPA + UN PATRON PARA PODER REGISTRAR UN ARBOL  !","ERROR",JOptionPane.ERROR_MESSAGE);
               System.out.println("VALIDAR  RETURN FALSE");
               return false;
         }
         
     }else{
           JOptionPane.showMessageDialog(this, "PARA ACTUALIZAR UN ARBOL DEBE SELECCIONARLO EN LA TABLA QUE ESTA EN LA PARTE INFERIOR !","ERROR",JOptionPane.ERROR_MESSAGE);
           System.out.println("VALIDAR  RETURN FALSE");
            return false;
     }
}
       public void ARBOLES_LIMPIAR_CAMPOS(){
    
    arbol_T_codiigo_arbol.setText("");
    arbol_T_codiigo_arbol.setText("");
    arbol_T_cod_copa.setText("");
    arbol_T_cod_patron.setText("");
    arbol_T_colector_copa.setText("");
    arbol_T_colector_patron.setText("");
   arbol_T_donante_copa.setText("");
    arbol_T_donante_patron.setText("");
    arbol_T_municipio.setText("");
    arbol_T_vereda.setText("");
    arbol_T_finca.setText("");
   arbol_T_latitud.setText("");
    arbol_T_longitud.setText("");
   arbol_T_altitud.setText("");
    arbol_CB_departamento.setSelectedIndex(0);
    arbol_CB_beneficiario.setSelectedIndex(0);
    arbol_L_muestra_codigo.setText("");
   ARBOL_ACTUALIZAR_TABLA();
}
       public void ARBOL_ACTUALIZAR_TABLA(){
    Gestion_Arboles ga= new Gestion_Arboles();
    arbol_tabla.setModel(ga.LISTARTABLA());
    ga.AJUSTARCOLUMNAS(arbol_tabla);
    
}

   
//ARBOLES
   
    //BENEFICIARIOS
       public final void EMPEZAR_BENEFICIARIO(){
           beneficiario_T_identificacion.requestFocus();
       Gestion_Beneficiarios  gb = new Gestion_Beneficiarios();
       this.beneficiario_Tabla.setModel(gb.LISTARTABLA());
       this.beneficiario_CB_empresa.setModel(gb.LISTARJCOMBOBOX("Empresa","").getModel());
       this.beneficiario_CB_departamento.setModel(gb.LISTARJCOMBOBOX("Departamentos","").getModel());
       
       
      beneficiario_Tabla.setShowHorizontalLines(true);
         beneficiario_Tabla.setShowVerticalLines(true);
       }
       public  void BENEFICIARIO_CARGAR_DATOS(){
    beneficiario_T_identificacion.setText(String.valueOf(this.beneficiario_Tabla.getValueAt(this.beneficiario_Tabla.getSelectedRow(), 1)));
    beneficiario_CB_empresa.setSelectedItem(String.valueOf(this.beneficiario_Tabla.getValueAt(this.beneficiario_Tabla.getSelectedRow(), 0)));
    beneficiario_T_nombre.setText(String.valueOf(this.beneficiario_Tabla.getValueAt(this.beneficiario_Tabla.getSelectedRow(), 2)));
    beneficiario_T_telefono.setText(String.valueOf(this.beneficiario_Tabla.getValueAt(this.beneficiario_Tabla.getSelectedRow(), 8)));
    beneficiario_T_direccion.setText(String.valueOf(this.beneficiario_Tabla.getValueAt(this.beneficiario_Tabla.getSelectedRow(), 7)));
    beneficiario_CB_departamento.setSelectedItem(String.valueOf(this.beneficiario_Tabla.getValueAt(this.beneficiario_Tabla.getSelectedRow(), 3)));
    beneficiario_T_municipio.setText(String.valueOf(this.beneficiario_Tabla.getValueAt(this.beneficiario_Tabla.getSelectedRow(), 4)));
    beneficiario_T_vereda.setText(String.valueOf(this.beneficiario_Tabla.getValueAt(this.beneficiario_Tabla.getSelectedRow(),5 )));
    beneficiario_T_finca.setText(String.valueOf(this.beneficiario_Tabla.getValueAt(this.beneficiario_Tabla.getSelectedRow(), 6)));
    beneficiario_TA_observaciones.setText(String.valueOf(this.beneficiario_Tabla.getValueAt(this.beneficiario_Tabla.getSelectedRow(), 9)));
}
public void BENEFICIARIO_GUARDAR(){
     
            ResultSet rs;
            Connection con = new Conexion().getCon();
            try {
                rs= con.createStatement().executeQuery("select nit_empresa from empresa where nombre = "+"'"+beneficiario_CB_empresa.getSelectedItem()+"' ;");
                if (rs.next()) {
                    Beneficiarios b=new Beneficiarios();
                    Gestion_Beneficiarios gb=new Gestion_Beneficiarios();
                    b.setIdentificacion_Cultivador(Long.valueOf(beneficiario_T_identificacion.getText()));
                    b.setNombre(beneficiario_T_nombre.getText());
                    b.setDireccion(beneficiario_T_direccion.getText());
                    b.setTelefono(Long.valueOf(beneficiario_T_telefono.getText()));
                    b.setDepartamento(String.valueOf(beneficiario_CB_departamento.getSelectedItem()));
                    b.setMunicipio(String.valueOf(beneficiario_T_municipio.getText()));
                    b.setVereda(beneficiario_T_vereda.getText());
                    b.setFinca(beneficiario_T_finca.getText());
                    b.setObservaciones(beneficiario_TA_observaciones.getText());
                    b.setNit_Empresa(rs.getString(1));
                    if (gb.GUARDAR(b)==true) {
                      
                        JOptionPane.showMessageDialog(this,"¡CULTIVADOR REGISTRADO!");
  BENEFICIARIO_LIMPIAR();
                    }
                }

            } catch (SQLException ex) {
                Logger.getLogger( Accesador.class.getName()).log(Level.SEVERE, null, ex);
            }

        
      
      
}
public boolean BENEFICIARIO_VALIDAR_GUARDAR(){
    if (!(beneficiario_T_identificacion.getText().isEmpty())) {
        if (!(beneficiario_CB_empresa.getSelectedIndex()==0)) {
            if (!(beneficiario_T_nombre.getText().isEmpty())) {
                if (!(beneficiario_T_telefono.getText().isEmpty())) {
                        try {
                                     long ASD;
                                     ASD=Long.parseLong(beneficiario_T_telefono.getText());
                                 } catch (Exception e) {
                                     JOptionPane.showMessageDialog(this,"EL TELEFONO DEBE CONTENER SOLO NUMEROS","ERROR",JOptionPane.ERROR_MESSAGE);
                                     return false;
                                 }
                    if (!(beneficiario_T_direccion.getText().isEmpty())) {
                        if (!(beneficiario_CB_departamento.getSelectedIndex()==0)) {
                            if (!(beneficiario_T_municipio.getText().isEmpty())) {
                                if (!(beneficiario_T_vereda.getText().isEmpty())) {
                                    if (!(beneficiario_T_finca.getText().isEmpty())) {
                                        return true;
                                    }else{
                                        JOptionPane.showMessageDialog(this, "EL CAMPO FINCA ESTA VACIO!","ERROR",JOptionPane.ERROR_MESSAGE);
        return false;
                                    }
                                    
                                }else{
                                    JOptionPane.showMessageDialog(this, "EL CAMPO VEREDA ESTA VACIO!","ERROR",JOptionPane.ERROR_MESSAGE);
        return false;
                                }
                                
                            }else{
                                JOptionPane.showMessageDialog(this, "EL CAMPO MUNICIPIO ESTA VACIO!","ERROR",JOptionPane.ERROR_MESSAGE);
        return false;
                            }
                        }else{
                            JOptionPane.showMessageDialog(this, "EL DEPARTAMENTO SELECCIONADO NO ES VALIDO!","ERROR",JOptionPane.ERROR_MESSAGE);
        return false;
                        }
                    }else{
                        JOptionPane.showMessageDialog(this, "EL CAMPO DIRECCION ESTA VACIO!","ERROR",JOptionPane.ERROR_MESSAGE);
        return false;
                    }
                    
                }else{
                    JOptionPane.showMessageDialog(this, "EL CAMPO TELEFONO ESTA VACIO!","ERROR",JOptionPane.ERROR_MESSAGE);
        return false;
                }
                
            }else{
                JOptionPane.showMessageDialog(this, "EL CAMPO NOMBRE ESTA VACIO!","ERROR",JOptionPane.ERROR_MESSAGE);
        return false;
            }
            
        }else{
           JOptionPane.showMessageDialog(this, "LA EMPRESA SELECCIONADA NO ES VALIDA!","ERROR",JOptionPane.ERROR_MESSAGE);
        return false; 
        }
        
    }else{
        JOptionPane.showMessageDialog(this, "EL CAMPO IDENTIFICACION ESTA VACIO!","ERROR",JOptionPane.ERROR_MESSAGE);
        return false;
               
    }
    
    
}


public void BENEFICIARIO_ACTUALIZAR(){
        try {
            ResultSet rs;
            Connection con = new Conexion().getCon();
            Beneficiarios b = new Beneficiarios();
            Gestion_Beneficiarios gb = new Gestion_Beneficiarios();
            
            b.setIdentificacion_Cultivador(Long.valueOf(beneficiario_T_identificacion.getText()));
            rs=con.createStatement().executeQuery("Select nit_Empresa from empresa where nombre= "+"'"+beneficiario_CB_empresa.getSelectedItem()+"';");
            if (rs.next()) {
                b.setNit_Empresa(rs.getString(1));
                b.setNombre(beneficiario_T_nombre.getText());
                b.setTelefono(Long.valueOf(beneficiario_T_telefono.getText()));
                b.setDireccion(beneficiario_T_direccion.getText());
                b.setDepartamento(String.valueOf(beneficiario_CB_departamento.getSelectedItem()));
                b.setMunicipio(beneficiario_T_municipio.getText());
                b.setVereda(beneficiario_T_vereda.getText());
                b.setFinca(beneficiario_T_finca.getText());
                b.setObservaciones(beneficiario_TA_observaciones.getText());
                
                if(gb.ACTUALIZAR(b)){
                                       

                    JOptionPane.showMessageDialog(this,"ACTUALIZACION EXITOSA");
                     BENEFICIARIO_LIMPIAR();
                }
            }
        } catch (SQLException ex) {
            Logger.getLogger(Accesador.class.getName()).log(Level.SEVERE, null, ex);
        }

         
}

public boolean BENEFICIARIO_COMPROBAR_ACTUALIZAR(){
        try {
            ResultSet rs;
            Connection con = new Conexion().getCon();

            
            
                if (!(beneficiario_T_identificacion.getText().isEmpty())) {
                 rs= con.createStatement().executeQuery("select * from Beneficiarios where identificacion_cultivador= "+beneficiario_T_identificacion.getText()+" ;");
                    if ((rs.next())) {
                    if (!(beneficiario_CB_empresa.getSelectedIndex()==0)) {
                        if (!(beneficiario_T_nombre.getText().isEmpty())) {
                            if (!(beneficiario_T_telefono.getText().isEmpty())) {
                                    try {
                                     long ASD;
                                     ASD=Long.parseLong(beneficiario_T_telefono.getText());
                                 } catch (Exception e) {
                                     JOptionPane.showMessageDialog(this,"EL TELEFONO DEBE CONTENER SOLO NUMEROS","ERROR",JOptionPane.ERROR_MESSAGE);
                                     return false;
                                 }
                                if (!(beneficiario_T_direccion.getText().isEmpty())) {
                                    if (!(beneficiario_CB_departamento.getSelectedIndex()==0)) {
                                        if (!(beneficiario_T_municipio.getText().isEmpty())) {
                                            if (!(beneficiario_T_vereda.getText().isEmpty())) {
                                                if (!(beneficiario_T_finca.getText().isEmpty())) {
                                                    return true;
                                                }else{
                                                    JOptionPane.showMessageDialog(this, "EL CAMPO FINCA ESTA VACIO!","ERROR",JOptionPane.ERROR_MESSAGE);
                                                    return false;
                                                }
                                                
                                            }else{
                                                JOptionPane.showMessageDialog(this, "EL CAMPO VEREDA ESTA VACIO!","ERROR",JOptionPane.ERROR_MESSAGE);
                                                return false;
                                            }
                                            
                                        }else{
                                            JOptionPane.showMessageDialog(this, "EL CAMPO MUNICIPIO ESTA VACIO!","ERROR",JOptionPane.ERROR_MESSAGE);
                                            return false;
                                        }
                                    }else{
                                        JOptionPane.showMessageDialog(this, "EL DEPARTAMENTO SELECCIONADO NO ES VALIDO!","ERROR",JOptionPane.ERROR_MESSAGE);
                                        return false;
                                    }
                                }else{
                                    JOptionPane.showMessageDialog(this, "EL CAMPO DIRECCION ESTA VACIO!","ERROR",JOptionPane.ERROR_MESSAGE);
                                    return false;
                                }
                                
                            }else{
                                JOptionPane.showMessageDialog(this, "EL CAMPO TELEFONO ESTA VACIO!","ERROR",JOptionPane.ERROR_MESSAGE);
                                return false;
                            }
                            
                        }else{
                            JOptionPane.showMessageDialog(this, "EL CAMPO NOMBRE ESTA VACIO!","ERROR",JOptionPane.ERROR_MESSAGE);
                            return false;
                        }
                        
                    }else{
                        JOptionPane.showMessageDialog(this, "LA EMPRESA SELECCIONADA NO ES VALIDA!","ERROR",JOptionPane.ERROR_MESSAGE);
                        return false;
                    }
                    
                 }else{
                JOptionPane.showMessageDialog(this,"ESTE BENEFICIARIO NO ESTA VINCULADO AUN; REGISTRELO \n PARA PODER REALIZAR MODIFICACIONES ");
                return false;
            }
                    }else{
                    JOptionPane.showMessageDialog(this, "EL CAMPO IDENTIFICACION ESTA VACIO!","ERROR",JOptionPane.ERROR_MESSAGE);
                    return false;
                    
                }
                
           
        } catch (SQLException ex) {
            Logger.getLogger(Accesador.class.getName()).log(Level.SEVERE, null, ex);
            return false;
        }
    
}

public void BENEFICIARIO_LIMPIAR(){
    Gestion_Beneficiarios gb = new Gestion_Beneficiarios();
     beneficiario_T_identificacion.setText("");
      beneficiario_T_nombre.setText("");
        beneficiario_T_telefono.setText("");
         beneficiario_T_direccion.setText("");
          beneficiario_T_municipio.setText("");
            beneficiario_T_vereda.setText("");
              beneficiario_T_finca.setText("");
                beneficiario_CB_empresa.setSelectedIndex(0);
                 beneficiario_CB_departamento.setSelectedIndex(0);
                   beneficiario_TA_observaciones.setText("");
                     beneficiario_Tabla.setModel(gb.LISTARTABLA());
}


 public boolean BENEFICIARIO_VALIDAR_ELIMINAR(){
        try {
            
            int opcion;
            ResultSet rs;
            Connection con = new Conexion().getCon();

            if (!(beneficiario_T_identificacion.getText().isEmpty())) {
                 rs= con.createStatement().executeQuery("select * from Beneficiarios where identificacion_cultivador= "+beneficiario_T_identificacion.getText()+" ;");
                if (rs.next()) {
                    opcion= JOptionPane.showConfirmDialog(this,"ESTA A PUNTO DE ELIMINAR UN BENEFICIARIO","ALERTA",JOptionPane.WARNING_MESSAGE);
                    if (opcion==JOptionPane.YES_OPTION) {
                        return true;
                    }else{
                        return false;
                    }
                }else{
                    JOptionPane.showMessageDialog(this, "ESTE NUMERO DE IDENTIFICACION NO PERTENECE A NINGUN BENEFICIARIO REGISTRADO","ERROR",JOptionPane.ERROR_MESSAGE);
                    return false;
                }
            }else{
                JOptionPane.showMessageDialog(this, "EL CAMPO IDENTIFICACION NO PUEDE ESTAR VACIO(¡ PARA ELIMINAR !)");
                return false;
            }
        } catch (SQLException ex) {
            Logger.getLogger(Accesador.class.getName()).log(Level.SEVERE, null, ex);
            return false;
        }
       
 }
 public void BENEFICIARIO_ELIMINAR(){
     Gestion_Beneficiarios gb = new Gestion_Beneficiarios();
     
      if (gb.ELIMINAR(Long.valueOf(beneficiario_T_identificacion.getText()))) {
                JOptionPane.showMessageDialog(this,"BENEFICIARIO ELIMINADO !");
                BENEFICIARIO_LIMPIAR();
            }
 }
       
       //BENEFICIARIOS
    

//COLECTORES
 public final void EMPEZAR_COLECTORES(){
    Gestion_Colectores gc=new Gestion_Colectores();
        colectores_Tabla.setModel(gc.LISTARTABLA());
        colectores_CB_empresa.setModel(gc.LISTARJCOMBOBOX("empresa","").getModel());
       colectores_Tabla.setShowHorizontalLines(true);
         colectores_Tabla.setShowVerticalLines(true);   
 }
     
 
 //COLECTORES
 
  
 public boolean COLECTORES_VALIDAR_GUARDAR(){
    
     if (!(colectores_T_identificacion.getText().isEmpty())) {
        if (!(colectores_CB_empresa.getSelectedIndex()==0)) {
            if (!(colectores_T_nombre.getText().isEmpty())) {
                if (!(colectores_T_telefono.getText().isEmpty())) {
                        try {
                                     long ASD;
                                     ASD=Long.parseLong(colectores_T_telefono.getText());
                                 } catch (Exception e) {
                                     JOptionPane.showMessageDialog(this,"EL TELEFONO DEBE CONTENER SOLO NUMEROS","ERROR",JOptionPane.ERROR_MESSAGE);
                                     return false;
                                 }
                    if (!(colectores_T_direccion.getText().isEmpty())) {
                 return true;
                    }else{
                        JOptionPane.showMessageDialog(this, "EL CAMPO DIRECCION ESTA VACIO!","ERROR",JOptionPane.ERROR_MESSAGE);
        return false;
                    }
                    
                }else{
                    JOptionPane.showMessageDialog(this, "EL CAMPO TELEFONO ESTA VACIO!","ERROR",JOptionPane.ERROR_MESSAGE);
        return false;
                }
                
            }else{
                JOptionPane.showMessageDialog(this, "EL CAMPO NOMBRE ESTA VACIO!","ERROR",JOptionPane.ERROR_MESSAGE);
        return false;
            }
            
        }else{
           JOptionPane.showMessageDialog(this, "LA EMPRESA SELECCIONADA NO ES VALIDA!","ERROR",JOptionPane.ERROR_MESSAGE);
        return false; 
        }
        
    }else{
        JOptionPane.showMessageDialog(this, "EL CAMPO IDENTIFICACION ESTA VACIO!","ERROR",JOptionPane.ERROR_MESSAGE);
        return false;
               
    }
    
  }
 
 public void COLECTORES_GUARDAR(){
          ResultSet rs;
            Connection con = new Conexion().getCon();
            try {
                rs= con.createStatement().executeQuery("select nit_empresa from empresa where nombre = "+"'"+colectores_CB_empresa.getSelectedItem()+"' ;");
                if (rs.next()) {
                    Colectores c=new Colectores();
                    Gestion_Colectores gc=new Gestion_Colectores();
                    c.setIdentificacion_Colector(Long.valueOf(colectores_T_identificacion.getText()));
                    c.setNombre(colectores_T_nombre.getText());
                    c.setDireccion(colectores_T_direccion.getText());
                    c.setTelefono(Long.valueOf(colectores_T_telefono.getText()));
                    c.setObservaciones(colectores_T_observaciones.getText());
                    c.setNit_Empresa(rs.getString(1));
                    if (gc.GUARDAR(c)) {
                        JOptionPane.showMessageDialog(this,"¡Colector Registrado!");
                    COLECTORES_LIMPIAR();
                    }
                }

            } catch (SQLException ex) {
                Logger.getLogger(Accesador.class.getName()).log(Level.SEVERE, null, ex);
            }
 }
 public void COLECTORES_LIMPIAR(){
     Gestion_Colectores gc= new Gestion_Colectores();
         colectores_CB_empresa.setSelectedIndex(0);
                        colectores_T_identificacion.setText("");
                        colectores_T_nombre.setText("");
                        colectores_T_telefono.setText("");
                        colectores_T_direccion.setText("");
                        colectores_T_observaciones.setText("");
                        this.colectores_Tabla.setModel(gc.LISTARTABLA());
 }
 
 public boolean COLECTORES_COMPROBAR_ACTUALIZAR(){
        try {
            ResultSet rs;
            Connection con = new Conexion().getCon();
                if (!(colectores_T_identificacion.getText().isEmpty())) {
                 rs= con.createStatement().executeQuery("select * from COLECTORES where identificacion_colector= "+colectores_T_identificacion.getText()+" ;");
                    if ((rs.next())) {
                    if (!(colectores_CB_empresa.getSelectedIndex()==0)) {
                        if (!(colectores_T_nombre.getText().isEmpty())) {
                            if (!(colectores_T_telefono.getText().isEmpty())) {
                                    try {
                                     long ASD;
                                     ASD=Long.parseLong(colectores_T_telefono.getText());
                                 } catch (Exception e) {
                                     JOptionPane.showMessageDialog(this,"EL TELEFONO DEBE CONTENER SOLO NUMEROS","ERROR",JOptionPane.ERROR_MESSAGE);
                                     return false;
                                 }
                                if (!(colectores_T_direccion.getText().isEmpty())) {
                                  return true;
                                }else{
                                    JOptionPane.showMessageDialog(this, "EL CAMPO DIRECCION ESTA VACIO!","ERROR",JOptionPane.ERROR_MESSAGE);
                                    return false;
                                }
                                
                            }else{
                                JOptionPane.showMessageDialog(this, "EL CAMPO TELEFONO ESTA VACIO!","ERROR",JOptionPane.ERROR_MESSAGE);
                                return false;
                            }
                            
                        }else{
                            JOptionPane.showMessageDialog(this, "EL CAMPO NOMBRE ESTA VACIO!","ERROR",JOptionPane.ERROR_MESSAGE);
                            return false;
                        }
                        
                    }else{
                        JOptionPane.showMessageDialog(this, "LA EMPRESA SELECCIONADA NO ES VALIDA!","ERROR",JOptionPane.ERROR_MESSAGE);
                        return false;
                    }
                    
                 }else{
                JOptionPane.showMessageDialog(this,"ESTE BENEFICIARIO NO ESTA VINCULADO AUN; REGISTRELO \n PARA PODER REALIZAR MODIFICACIONES ");
                return false;
            }
                    }else{
                    JOptionPane.showMessageDialog(this, "EL CAMPO IDENTIFICACION ESTA VACIO!","ERROR",JOptionPane.ERROR_MESSAGE);
                    return false;
                    
                }
                
           
        } catch (SQLException ex) {
            Logger.getLogger(Accesador.class.getName()).log(Level.SEVERE, null, ex);
            return false;
        }
    
}
 
 public void COLECTORES_ACTUALIZAR(){
            try {
     ResultSet rs;
        Connection con = new Conexion().getCon();
                Colectores c = new Colectores();
                Gestion_Colectores gc=new Gestion_Colectores();
                rs=con.createStatement().executeQuery("Select nit_Empresa from empresa where nombre= "+"'"+colectores_CB_empresa.getSelectedItem()+"' ;");
            if (rs.next()) {   
                c.setIdentificacion_Colector(Long.valueOf(colectores_T_identificacion.getText()));
                        c.setNit_Empresa(rs.getString(1));
                        c.setNombre(colectores_T_nombre.getText());
                        c.setTelefono(Long.valueOf(colectores_T_telefono.getText()));
                        c.setDireccion(colectores_T_direccion.getText());
                        c.setObservaciones(colectores_T_observaciones.getText());
                        if(gc.ACTUALIZAR(c)){
                            JOptionPane.showMessageDialog(this,"ACTUALIZACION EXITOSA");
                       COLECTORES_LIMPIAR();
                        }
           }

                

            
        } catch (SQLException ex) {
            Logger.getLogger(Accesador.class.getName()).log(Level.SEVERE, null, ex);
        }
 }
 public boolean COLECTORES_VALIDAR_ELIMINAR(){
     
        try {
            
            int opcion;
            ResultSet rs;
            Connection con = new Conexion().getCon();

            if (!(colectores_T_identificacion.getText().isEmpty())) {
                 rs= con.createStatement().executeQuery("select * from COLECTORES where identificacion_COLECTOR= "+colectores_T_identificacion.getText()+" ;");
                if (rs.next()) {
                    opcion= JOptionPane.showConfirmDialog(this,"ESTA A PUNTO DE ELIMINAR UN COLECTOR","ALERTA",JOptionPane.WARNING_MESSAGE);
                    if (opcion==JOptionPane.YES_OPTION) {
                        return true;
                    }else{
                        return false;
                    }
                }else{
                    JOptionPane.showMessageDialog(this, "ESTE NUMERO DE IDENTIFICACION NO PERTENECE A NINGUN BENEFICIARIO REGISTRADO","ERROR",JOptionPane.ERROR_MESSAGE);
                    return false;
                }
            }else{
                JOptionPane.showMessageDialog(this, "EL CAMPO IDENTIFICACION NO PUEDE ESTAR VACIO(¡ PARA ELIMINAR !)");
                return false;
            }
        } catch (SQLException ex) {
            Logger.getLogger(Accesador.class.getName()).log(Level.SEVERE, null, ex);
            return false;
        }
       
 }
 
 public void COLECTORES_ELIMINAR(){
     
       Gestion_Colectores gc = new Gestion_Colectores();
     if (gc.ELIMINAR(Long.valueOf(colectores_T_identificacion.getText()))) {
                JOptionPane.showMessageDialog(this,"COLECTOR ELIMINADO");
                  COLECTORES_LIMPIAR();
            }

        
 }
 
 //COLECTORES
 
 //EMPRESA
 
 public final void EMPEZAR_EMPRESA(){
     
     Gestion_Empresa ge= new Gestion_Empresa();
         empresa_Tabla.setModel(ge.LISTAR());
         
        
         empresa_Tabla.setShowHorizontalLines(true);
         empresa_Tabla.setShowVerticalLines(true);
 }
 
  public boolean EMPRESA_GUARDAR_VALIDAR_NIT_EMPRESA(){
        try {
            
            if (!empresa_T_nit_empresa.getText().isEmpty()) {
                
                if (!(empresa_T_nit_empresa.getText().length()>20)) {
                    
                ResultSet rs ;
                Connection Con = new Conexion().getCon();
                 rs= Con.createStatement().executeQuery("SELECT COUNT(*) FROM EMPRESA WHERE NIT_EMPRESA= '"+empresa_T_nit_empresa.getText()+"';");
                    if (!(rs.getRow()==0)) {
                       JOptionPane.showMessageDialog(this,"EL NIT QUE ESTA INTENTANDO GUARDAR YA ESTA EN LA BASE DE DATOS"
                               + "                       \n                  --NO PUEDE REPETIRSE-- ","ERROR", JOptionPane.ERROR_MESSAGE);
                       return false;
                       }else{
                     return  true;
                      }
                         }else{
                        JOptionPane.showMessageDialog(this, "EL NIT DE LA EMPRESA NO PUEDE CONTENER MAS DE 20 CARACTERES!","ERROR", JOptionPane.ERROR_MESSAGE);
                       return false;
                        }
                           }else{
                         JOptionPane.showMessageDialog(this, "EN CAMPO NIT_ EMPRESA ESTA VACIO!","ERROR", JOptionPane.ERROR_MESSAGE);
                        return  false;
                         }
            
     
        } catch (SQLException ex) {
            Logger.getLogger(Accesador.class.getName()).log(Level.SEVERE, null, ex);
            return false;
        }
        
        
}
     public boolean EMPRESA_GUARDAR_VALIDAR_TELEFONO(){
         try {
             long JAVA = Long.parseLong(empresa_T_telefono.getText());
         } catch (Exception e) {
             JOptionPane.showMessageDialog(this, "EL TELEFONO DEBE CONTENER SOLO NUMEROS!","ERROR", JOptionPane.ERROR_MESSAGE);
             return false;
         }
       return true;
     }
     
     public boolean EMPRESA_VALIDAR_CAMPOS_ALL(){
          if (EMPRESA_GUARDAR_VALIDAR_NIT_EMPRESA()&&EMPRESA_GUARDAR_VALIDAR_TELEFONO()) {
              if (!empresa_T_nombre.getText().isEmpty()) {
                  if (!empresa_T_direccion.getText().isEmpty()) {
                      return true;
                  }else{
                      JOptionPane.showMessageDialog(this, "EL CAMPO DIRECCION NO PUEDE ESTAR VACIO");
                      return false;
                  }
              }else{
                   JOptionPane.showMessageDialog(this, "EL CAMPO NOMBRE NO PUEDE ESTAR VACIO!");
                   return false;
                 
              }
              }else{
              return false;
          }
          
         }
      public boolean EMPRESA_VALIDAR_CAMPOS_AL_mODIFICAR(){
          if (EMPRESA_GUARDAR_VALIDAR_TELEFONO()) {
              if (!empresa_T_nombre.getText().isEmpty()) {
                  if (!empresa_T_direccion.getText().isEmpty()) {
                      return true;
                  }else{
                      JOptionPane.showMessageDialog(this, "EL CAMPO DIRECCION NO PUEDE ESTAR VACIO");
                      return false;
                  }
              }else{
                   JOptionPane.showMessageDialog(this, "EL CAMPO NOMBRE NO PUEDE ESTAR VACIO!");
                   return false;
                 
              }
              }else{
              return false;
          }
          
         }
      public void EMPRESA_HAGA_NUEVA(){
           empresa_T_nit_empresa.setText("");
                empresa_T_nit_empresa.setEnabled(true);
                empresa_T_nombre.setText("");
                empresa_T_direccion.setText("");
                empresa_T_telefono.setText("");
                empresa_T_nit_empresa.requestFocus();
                empresa_T_modificar.setEnabled(false);
                empresa_T_eliminar.setEnabled(false);
      }
      public boolean EMPRESA_HAGA_GUARDAR(){
          
                  
          
            Empresa e=new Empresa();
            Gestion_Empresa ge=new Gestion_Empresa();
            e.setNit_Empresa((empresa_T_nit_empresa.getText()));
            e.setNombre(empresa_T_nombre.getText());
            e.setDireccion(empresa_T_direccion.getText());
            e.setTelefono(Long.valueOf(empresa_T_telefono.getText()));
            if (ge.GUARDAR(e)==true) {
            JOptionPane.showMessageDialog(this, "EMPRESA REGISTRADA");
          EMPRESA_LIMPIAR();
          return true;
            }else{
                return false;
            }
    
      }
      public void EMPRESA_PASE_A_GUARDAR(){
          empresa_B_nueva.setText("GUARDAR");
                 empresa_B_nueva.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Utilidades/Registrar - Empresa.png")));
      }
        public void EMPRESA_PASE_A_NUEVA(){
           
            empresa_B_nueva.setText("NUEVA");
            empresa_B_nueva.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Utilidades/nuevo - empresa.png")));
        }
            
     public void EMPRESA_LIMPIAR(){
         Gestion_Empresa ge = new Gestion_Empresa();
            empresa_T_nit_empresa.setText("");
                empresa_T_nombre.setText("");
                empresa_T_direccion.setText("");
                empresa_T_telefono.setText("");
                empresa_Tabla.setModel(ge.LISTAR());
                empresa_T_nit_empresa.setEnabled(false);
                empresa_T_modificar.setEnabled(false);
                empresa_T_eliminar.setEnabled(false);
     }
 //EMPRESA
    //GENERAL
     public JTextField CONVERSION_MAYUSCULAS(JTextField textfield){
       int pos = textfield.getCaretPosition();
       textfield.setText(textfield.getText().toUpperCase());
       textfield.setCaretPosition(pos);
       
       
       return textfield;
   }
    //GENERAL
}
